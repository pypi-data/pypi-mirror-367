[project]
name = "flux0-ai"
version = "0.1.0-beta.4"
requires-python = ">=3.13"
dependencies = [
    "flux0-server==0.1.0-beta.4",
    "flux0-cli==0.1.0-beta.1"
]

[tool.uv.sources]
flux0-server = { workspace = true }
flux0-cli = { workspace = true }

[tool.uv.workspace]
members = ["packages/*"]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.4",
    "ruff>=0.9.10",
]
mongodb = [
    "pymongo>=4.13.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "src"
]
exclude = [
    "chat",
    "packages"
]

[project.scripts]
flux0-server = "flux0_server.main:main"
flux0 = "flux0_cli.main:main"

[project.optional-dependencies]
examples = [
    "langchain[openai]>=0.3.26",
    "langgraph>=0.5.1",
]

[tool.semantic_release]
build_command = "pip install uv && uv build"
commit_parser = "./scripts/psr/custom_parser/monorepo_parser.py:ConventionalCommitMonorepoParser"
commit_message = """\
chore(flux0-release): Release `flux0@{version}` [skip ci]
Automatically generated by python-semantic-release
"""
allow_zero_version = true
tag_format = "flux0-ai-{version}"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/flux0_ai/__init__.py:__version__"]

[tool.semantic_release.commit_parser_options]
path_filters=[".", "!packages/nanodb/*", "!packages/core/*", "!packages/stream/*", "!packages/api", "!packages/server", "!packages/cli"]

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.beta]
match = "beta"
prerelease = true
prerelease_token = "beta"

[tool.semantic_release.publish]
dist_glob_patterns = ["../../dist/flux0-*"]

[[tool.uv.index]]
name = "local"
url = "http://localhost:8585/simple/"
publish-url = "http://localhost:8585/"
explicit = true
