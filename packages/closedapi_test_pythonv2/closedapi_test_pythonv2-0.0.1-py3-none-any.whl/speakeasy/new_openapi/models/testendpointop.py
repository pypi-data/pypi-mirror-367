"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from speakeasy.new_openapi.types import BaseModel
from speakeasy.new_openapi.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
from typing_extensions import Annotated, TypedDict


class TestEndpointRequestBodyTypedDict(TypedDict):
    __test__ = False  # pyright: ignore[reportGeneralTypeIssues]

    test: str


class TestEndpointRequestBody(BaseModel):
    __test__ = False

    test: str


class TestEndpointRequestTypedDict(TypedDict):
    __test__ = False  # pyright: ignore[reportGeneralTypeIssues]

    test_name: str
    request_body: TestEndpointRequestBodyTypedDict


class TestEndpointRequest(BaseModel):
    __test__ = False

    test_name: Annotated[
        str,
        pydantic.Field(alias="testName"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    request_body: Annotated[
        TestEndpointRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
