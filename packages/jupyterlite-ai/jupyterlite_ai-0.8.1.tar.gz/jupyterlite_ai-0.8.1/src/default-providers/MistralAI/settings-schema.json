{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "streamUsage": {
      "type": "boolean",
      "description": "Whether or not to include token usage in the stream.",
      "default": true
    },
    "disableStreaming": {
      "type": "boolean",
      "description": "Whether to disable streaming.\n\nIf streaming is bypassed, then `stream()` will defer to `invoke()`.\n\n- If true, will always bypass streaming case.\n- If false (default), will always use streaming case if available."
    },
    "apiKey": {
      "type": "string",
      "description": "The API key to use.",
      "default": ""
    },
    "modelName": {
      "type": "string",
      "description": "The name of the model to use. Alias for `model`",
      "default": "mistral-small-latest"
    },
    "model": {
      "type": "string",
      "description": "The name of the model to use.",
      "default": "mistral-small-latest"
    },
    "endpoint": {
      "type": "string",
      "description": "Override the default endpoint."
    },
    "temperature": {
      "type": "number",
      "description": "What sampling temperature to use, between 0.0 and 2.0. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
      "default": 0.7
    },
    "topP": {
      "type": "number",
      "description": "Nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. Should be between 0 and 1.",
      "default": 1
    },
    "maxTokens": {
      "type": "number",
      "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
    },
    "streaming": {
      "type": "boolean",
      "description": "Whether or not to stream the response.",
      "default": false
    },
    "safeMode": {
      "type": "boolean",
      "description": "Whether to inject a safety prompt before all conversations.",
      "default": false,
      "deprecated": "use safePrompt instead"
    },
    "safePrompt": {
      "type": "boolean",
      "description": "Whether to inject a safety prompt before all conversations.",
      "default": false
    },
    "randomSeed": {
      "type": "number",
      "description": "The seed to use for random sampling. If set, different calls will generate deterministic results. Alias for `seed`"
    },
    "seed": {
      "type": "number",
      "description": "The seed to use for random sampling. If set, different calls will generate deterministic results."
    }
  },
  "additionalProperties": false,
  "description": "Input to chat model class.",
  "definitions": {}
}
