AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an IAM role connected to a Kubernetes service account.

Parameters:
  ClusterName:
    Type: String
    Description: The name of the EKS cluster
  OIDCProviderURL:
    Type: String
    Description: OIDC issuer URL for the EKS cluster
  Namespace:
    Type: String
    Description: The Kubernetes namespace for the service account
  ServiceAccountName:
    Type: String
    Description: The Kubernetes service account name

Resources:
  CloudwatchIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "cloudwatch-agent-role_${ClusterName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                Fn::Join:
                  - ''
                  - - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/'
                    - Fn::Select:
                        - 1
                        - Fn::Split:
                            - '//'
                            - Ref: 'OIDCProviderURL'
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals: |
                #!TensorkubePyPlate
                output = {}
                oidc_provider_url = params["OIDCProviderURL"]
                oidc_issuer = oidc_provider_url.split('//')[1]
                namespace = params["Namespace"]
                service_account_name = params["ServiceAccountName"]
                output = {
                    f"{oidc_issuer}:aud": "sts.amazonaws.com",
                    f"{oidc_issuer}:sub": f"system:serviceaccount:{namespace}:{service_account_name}"
                }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: CreatedBy
          Value: Tensorfuse
        - Key: ClusterName
          Value: !Ref ClusterName


  CloudwatchAddon:
    Type: AWS::EKS::Addon
    Properties:
      ClusterName: !Ref ClusterName
      AddonName: "amazon-cloudwatch-observability"
      ServiceAccountRoleArn: !GetAtt CloudwatchIAMRole.Arn
      AddonVersion: v4.3.0-eksbuild.1 # get using: aws eks describe-addon-versions --addon-name amazon-cloudwatch-observability --kubernetes-version X.XX
      Tags:
        - Key: CreatedBy
          Value: Tensorfuse
        - Key: ClusterName
          Value: !Ref ClusterName

Transform: [TensorkubePyPlate]

Outputs:
  CloudwatchIAMRoleARN:
    Description: ARN of the IAM role
    Value: !GetAtt CloudwatchIAMRole.Arn