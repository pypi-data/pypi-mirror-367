name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - stable
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13] # , windows-latest

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Get CMake with Ninja
        if: matrix.os != 'ubuntu-latest'
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latestrc
          ninjaVersion: latest

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true

      - name: Setup Ruby
        run: |
          gem install colorize -v 1.1.0
          gem install rubyzip -v 3.0.0
          gem install rake -v 13.2.1
          ruby setup.rb

      - uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'

      - name: Compile Clothoids
        if: matrix.os != 'ubuntu-latest'
        run: |
          rake clean
          rake

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build non-linux wheels
        if: matrix.os != 'ubuntu-latest'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_ARCHS: native
          CIBW_BEFORE_ALL_WINDOWS: rake clean && rake

      - name: Build linux wheels
        if: matrix.os == 'ubuntu-latest'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL_LINUX: >
            pip install ninja &&
            yum install -y rh-ruby26 &&
            source /opt/rh/rh-ruby26/enable &&
            gem install colorize -v 1.1.0 &&
            gem install rubyzip -v 2.4.1 &&
            gem install rake -v 13.2.1 &&
            rake clean &&
            rake

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get CMake with Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latestrc
          ninjaVersion: latest

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true

      - name: Setup Ruby
        run: |
          gem install colorize -v 1.1.0
          gem install rubyzip -v 3.0.0
          gem install rake -v 13.2.1
          ruby setup.rb

      - name: Compile Clothoids
        run: rake

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_testpypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/project/Clothoids/
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [upload_testpypi]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/Clothoids/
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published' && !github.event.release.prerelease
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
