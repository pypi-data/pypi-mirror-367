[project]
name = "mx-rmq"
version = "1.6.2"
description = "基于Redis的异步消息队列系统"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Alistar Max", email = "codingox@gmail.com"}
]
license = {text = "MIT"}
keywords = ["redis", "message-queue", "async", "distributed"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

dependencies = [
    "redis[hiredis]>=6.3.0",
    "pydantic>=2.11.7",
    "loguru>=0.7.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0", 
    "pytest-cov>=6.2.1",
    "black>=25.1.0",
    "ruff>=0.12.7",
    "mypy>=1.17.1",
]



[project.urls]
Homepage = "https://github.com/CodingOX/mx-rmq"
Repository = "https://github.com/CodingOX/mx-rmq"
Documentation = "https://github.com/CodingOX/mx-rmq#readme"
Issues = "https://github.com/CodingOX/mx-rmq/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mx_rmq"]


[tool.hatch.build.targets.sdist]
exclude = [
    # 开发工具和临时文件
    "**/.cursor/**",
    "**/issues/**", 
    "**/scripts/**",
    "**/.pytest_cache/**",
    "**/__pycache__/**",
    "**/*.pyc",
    "**/*.pyo",
    
    # 版本控制文件
    ".git/**",
    ".gitignore",
    ".gitattributes",
    
    # IDE 和编辑器文件
    ".vscode/**",
    ".idea/**",
    "*.swp",
    "*.swo",
    "*~",
    
    # 构建产物
    "build/**",
    "dist/**",
    "*.egg-info/**",
    
    # 文档和示例（可选）
    "docs/**",
    "examples/**",
    
    # 如果不想包含测试，取消注释下一行
    # "tests/**",
    
    # 其他临时文件
    ".coverage",
    ".tox/**",
    ".mypy_cache/**",
    ".ruff_cache/**",
    "CLAUDE.md",
    
    # 虚拟环境和包管理工具缓存
    ".venv/**",
    "venv/**", 
    "env/**",
    "ENV/**",
    "env.bak/**",
    "venv.bak/**",
    ".rye/**",
    ".pdm-cache/**", 
    ".hatch/**",
    
    # 锁文件和包管理
    "uv.lock",
    "Pipfile.lock",
    ".installed.cfg",
    "MANIFEST",
    
    # 测试覆盖率报告
    "coverage.xml",
    "htmlcov/**",
    "*.cover",
    "*.py,cover",
    ".hypothesis/**",
    ".cache/**",
    ".nox/**",
    "nosetests.xml",
    
    # 构建和开发脚本
    "Makefile",
    "*.sh",
    
    # AI 和开发配置
    ".ai-rules/**",
    ".luarc.json",
    ".history/**",
    
    # GitHub 和 CI/CD
    ".github/**",
    
    # 系统文件
    ".DS_Store",
    "Thumbs.db",
    
    # 其他开发文件
    ".python-version",
    "*.log",
    ".env",
    ".env.*",
    
    # Jupyter 相关
    ".ipynb_checkpoints/**",
    "profile_default/**",
    "ipython_config.py",
    
    # 临时文件和备份
    "*.tmp",
    "*.temp",
    "*.bak",
    "#*#",
    ".#*",

]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "asyncio: 标记异步测试",
    "slow: 标记运行时间较长的测试",
    "integration: 标记集成测试",
    "redis_v8: 标记需要Redis 8.x的测试", 
    "redis_v6: 标记需要Redis 6.x的测试"
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]


# 优化后的镜像配置
[tool.uv]
# index-url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
# index-url = "https://mirrors.tencent.com/pypi/simple"

[dependency-groups]
dev = [
    "build>=1.3.0",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-timeout>=2.4.0",
    "ruff>=0.12.7",
    "twine>=6.1.0",
]
