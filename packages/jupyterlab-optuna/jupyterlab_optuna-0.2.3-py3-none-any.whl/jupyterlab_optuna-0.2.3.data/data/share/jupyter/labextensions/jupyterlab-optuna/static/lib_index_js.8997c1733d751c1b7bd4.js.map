{"version":3,"file":"lib_index_js.8997c1733d751c1b7bd4.js","mappings":"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","sources":["webpack://jupyterlab-optuna/./src/apiClient.ts","webpack://jupyterlab-optuna/./src/components/Debounce.tsx","webpack://jupyterlab-optuna/./src/components/JupyterLabEntrypoint.tsx","webpack://jupyterlab-optuna/./src/handler.ts","webpack://jupyterlab-optuna/./src/index.ts","webpack://jupyterlab-optuna/./src/widget.tsx"],"sourcesContent":["import {\n  APIClient,\n  APIMeta,\n  CompareStudiesPlotType,\n  CreateNewStudyResponse,\n  FeedbackComponentType,\n  ParamImportancesResponse,\n  PlotResponse,\n  PlotType,\n  RenameStudyResponse,\n  StudyDetail,\n  StudyDetailResponse,\n  StudySummariesResponse,\n  StudySummary,\n  Trial,\n  TrialFilterQueryRequest,\n  TrialFilterQueryResponse,\n  UploadArtifactAPIResponse,\n} from \"@optuna/optuna-dashboard\"\nimport * as Optuna from \"@optuna/types\"\nimport { requestAPI } from \"./handler\"\n\nexport class JupyterlabAPIClient extends APIClient {\n  // biome-ignore lint/complexity/noUselessConstructor: <explanation>\n  constructor() {\n    super()\n  }\n\n  getMetaInfo = () =>\n    requestAPI<APIMeta>(\"/api/meta\").then<APIMeta>((res) => res)\n  getStudyDetail = (\n    studyId: number,\n    nLocalTrials: number\n  ): Promise<StudyDetail> =>\n    requestAPI<StudyDetailResponse>(\n      `/api/studies/${studyId}/?after=${nLocalTrials}`,\n      {\n        method: \"GET\",\n      }\n    ).then((res) => {\n      const trials = res.trials.map((trial): Trial => {\n        return this.convertTrialResponse(trial)\n      })\n      const best_trials = res.best_trials.map((trial): Trial => {\n        return this.convertTrialResponse(trial)\n      })\n      return {\n        id: studyId,\n        name: res.name,\n        datetime_start: new Date(res.datetime_start),\n        directions: res.directions,\n        user_attrs: res.user_attrs,\n        trials: trials,\n        best_trials: best_trials,\n        union_search_space: res.union_search_space,\n        intersection_search_space: res.intersection_search_space,\n        union_user_attrs: res.union_user_attrs,\n        has_intermediate_values: res.has_intermediate_values,\n        note: res.note,\n        objective_names: res.objective_names,\n        form_widgets: res.form_widgets,\n        is_preferential: res.is_preferential,\n        feedback_component_type: res.feedback_component_type,\n        preferences: res.preferences,\n        preference_history: res.preference_history?.map(\n          this.convertPreferenceHistory\n        ),\n        plotly_graph_objects: res.plotly_graph_objects,\n        artifacts: res.artifacts,\n        skipped_trial_numbers: res.skipped_trial_numbers ?? [],\n      }\n    })\n  getStudySummaries = (): Promise<StudySummary[]> =>\n    requestAPI<StudySummariesResponse>(\"/api/studies\").then((res) => {\n      return res.study_summaries.map((study): StudySummary => {\n        return {\n          study_id: study.study_id,\n          study_name: study.study_name,\n          directions: study.directions,\n          user_attrs: study.user_attrs,\n          is_preferential: study.is_preferential,\n          datetime_start: study.datetime_start\n            ? new Date(study.datetime_start)\n            : undefined,\n        }\n      })\n    })\n  createNewStudy = (\n    studyName: string,\n    directions: Optuna.StudyDirection[]\n  ): Promise<StudySummary> =>\n    requestAPI<CreateNewStudyResponse>(\"/api/studies\", {\n      body: JSON.stringify({\n        study_name: studyName,\n        directions,\n      }),\n      method: \"POST\",\n    }).then((res) => {\n      const study_summary = res.study_summary\n      return {\n        study_id: study_summary.study_id,\n        study_name: study_summary.study_name,\n        directions: study_summary.directions,\n        // best_trial: undefined,\n        user_attrs: study_summary.user_attrs,\n        is_preferential: study_summary.is_preferential,\n        datetime_start: study_summary.datetime_start\n          ? new Date(study_summary.datetime_start)\n          : undefined,\n      }\n    })\n  deleteStudy = (\n    studyId: number,\n    removeAssociatedArtifacts: boolean\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}`, {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        remove_associated_artifacts: removeAssociatedArtifacts,\n      }),\n    }).then(() => {\n      return\n    })\n  renameStudy = (studyId: number, studyName: string): Promise<StudySummary> =>\n    requestAPI<RenameStudyResponse>(`/api/studies/${studyId}/rename`, {\n      body: JSON.stringify({ study_name: studyName }),\n      method: \"POST\",\n    }).then((res) => {\n      return {\n        study_id: res.study_id,\n        study_name: res.study_name,\n        directions: res.directions,\n        user_attrs: res.user_attrs,\n        is_preferential: res.is_prefential,\n        datetime_start: res.datetime_start\n          ? new Date(res.datetime_start)\n          : undefined,\n      }\n    })\n  saveStudyNote = (\n    studyId: number,\n    note: { version: number; body: string }\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/note`, {\n      body: JSON.stringify(note),\n      method: \"PUT\",\n    }).then(() => {\n      return\n    })\n  saveTrialNote = (\n    studyId: number,\n    trialId: number,\n    note: { version: number; body: string }\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/${trialId}/note`, {\n      body: JSON.stringify(note),\n      method: \"PUT\",\n    }).then(() => {\n      return\n    })\n  uploadTrialArtifact = (\n    studyId: number,\n    trialId: number,\n    fileName: string,\n    dataUrl: string\n  ): Promise<UploadArtifactAPIResponse> =>\n    requestAPI<UploadArtifactAPIResponse>(\n      `/api/artifacts/${studyId}/${trialId}`,\n      {\n        body: JSON.stringify({\n          file: dataUrl,\n          filename: fileName,\n        }),\n        method: \"POST\",\n      }\n    ).then((res) => {\n      return res\n    })\n  uploadStudyArtifact = (\n    studyId: number,\n    fileName: string,\n    dataUrl: string\n  ): Promise<UploadArtifactAPIResponse> =>\n    requestAPI<UploadArtifactAPIResponse>(`/api/artifacts/${studyId}`, {\n      body: JSON.stringify({\n        file: dataUrl,\n        filename: fileName,\n      }),\n      method: \"POST\",\n    }).then((res) => {\n      return res\n    })\n  deleteTrialArtifact = (\n    studyId: number,\n    trialId: number,\n    artifactId: string\n  ): Promise<void> =>\n    requestAPI<void>(`/api/artifacts/${studyId}/${trialId}/${artifactId}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      return\n    })\n  deleteStudyArtifact = (studyId: number, artifactId: string): Promise<void> =>\n    requestAPI<void>(`/api/artifacts/${studyId}/${artifactId}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      return\n    })\n  tellTrial = async (\n    trialId: number,\n    state: Optuna.TrialStateFinished,\n    values?: number[]\n  ): Promise<void> => {\n    const req: { state: Optuna.TrialState; values?: number[] } = {\n      state: state,\n      values: values,\n    }\n\n    await requestAPI<void>(`/api/trials/${trialId}/tell`, {\n      body: JSON.stringify(req),\n      method: \"POST\",\n    })\n  }\n  saveTrialUserAttrs = async (\n    trialId: number,\n    user_attrs: { [key: string]: number | string }\n  ): Promise<void> => {\n    const req = { user_attrs: user_attrs }\n\n    await requestAPI<void>(`/api/trials/${trialId}/user-attrs`, {\n      body: JSON.stringify(req),\n      method: \"POST\",\n    })\n    return\n  }\n  getParamImportances = (\n    studyId: number\n  ): Promise<Optuna.ParamImportance[][]> =>\n    requestAPI<ParamImportancesResponse>(\n      `/api/studies/${studyId}/param_importances`\n    ).then((res) => {\n      return res.param_importances\n    })\n  reportPreference = (\n    studyId: number,\n    candidates: number[],\n    clicked: number\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/preference`, {\n      body: JSON.stringify({\n        candidates: candidates,\n        clicked: clicked,\n        mode: \"ChooseWorst\",\n      }),\n      method: \"POST\",\n    }).then(() => {\n      return\n    })\n  skipPreferentialTrial = (studyId: number, trialId: number): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/${trialId}/skip`, {\n      method: \"POST\",\n    }).then(() => {\n      return\n    })\n  removePreferentialHistory = (\n    studyId: number,\n    historyUuid: string\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/preference/${historyUuid}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      return\n    })\n  restorePreferentialHistory = (\n    studyId: number,\n    historyUuid: string\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/preference/${historyUuid}`, {\n      method: \"POST\",\n    }).then(() => {\n      return\n    })\n  reportFeedbackComponent = (\n    studyId: number,\n    component_type: FeedbackComponentType\n  ): Promise<void> =>\n    requestAPI<void>(`/api/studies/${studyId}/preference_feedback_component`, {\n      body: JSON.stringify({ component_type: component_type }),\n      method: \"POST\",\n    }).then(() => {\n      return\n    })\n  getPlot = (studyId: number, plotType: PlotType): Promise<PlotResponse> =>\n    requestAPI<PlotResponse>(\n      `/api/studies/${studyId}/plot/${plotType}`\n    ).then<PlotResponse>((res) => res)\n  getCompareStudiesPlot = (\n    studyIds: number[],\n    plotType: CompareStudiesPlotType\n  ): Promise<PlotResponse> => {\n    return requestAPI<PlotResponse>(`/api/compare-studies/plot/${plotType}`, {\n      body: JSON.stringify({ study_ids: studyIds }),\n    }).then<PlotResponse>((res) => res)\n  }\n  callTrialFilterQuery(\n    request: TrialFilterQueryRequest\n  ): Promise<TrialFilterQueryResponse> {\n    throw new Error(\n      \"Trial filter query is not implemented in JupyterLab API client.\"\n    )\n  }\n}\n","import { TextField, TextFieldProps } from \"@mui/material\"\nimport React, { FC, useEffect } from \"react\"\n\nexport const DebouncedInputTextField: FC<{\n  onChange: (s: string, valid: boolean) => void\n  delay: number\n  textFieldProps: TextFieldProps\n}> = ({ onChange, delay, textFieldProps }) => {\n  const [text, setText] = React.useState<string>(\"\")\n  const [valid, setValidity] = React.useState<boolean>(true)\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onChange(text, valid)\n    }, delay)\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [text, delay])\n\n  return (\n    <TextField\n      onChange={(e) => {\n        setText(e.target.value)\n        setValidity(e.target.validity.valid)\n      }}\n      {...textFieldProps}\n    />\n  )\n}\n","import RestartAltIcon from \"@mui/icons-material/RestartAlt\"\nimport StartIcon from \"@mui/icons-material/Start\"\nimport {\n  Box,\n  Button,\n  CssBaseline,\n  FormControl,\n  ThemeProvider,\n  Typography,\n  createTheme,\n  useTheme,\n} from \"@mui/material\"\nimport CircularProgress from \"@mui/material/CircularProgress\"\nimport { blue, pink } from \"@mui/material/colors\"\nimport {\n  APIClientProvider,\n  App,\n  ConstantsContext,\n} from \"@optuna/optuna-dashboard\"\nimport { SnackbarProvider, enqueueSnackbar } from \"notistack\"\nimport React, {\n  Dispatch,\n  FC,\n  SetStateAction,\n  useEffect,\n  useState,\n  useMemo,\n} from \"react\"\nimport { JupyterlabAPIClient } from \"../apiClient\"\nimport { requestAPI } from \"../handler\"\nimport { DebouncedInputTextField } from \"./Debounce\"\n\nconst jupyterlabAPIClient = new JupyterlabAPIClient()\n\nexport const JupyterLabEntrypoint: FC = () => {\n  const [ready, setReady] = useState(false)\n  const [pathName, setPathName] = useState(\"\")\n\n  // JupyterLab's theme switching is handled by setting CSS variables (ref: https://github.com/jupyterlab/jupyterlab/issues/4919#issuecomment-405757623).\n  // Therefore, the implementation of determining whether JupyterLab is in dark or light mode should rely on these CSS variables.\n  // The CSS variable used is defined here: https://github.com/jupyterlab/jupyterlab/blob/d470c501f50ad7075413cd89967a1a8a332b9a2f/packages/theme-light-extension/style/variables.css#L36\n  const colorMode =\n    getComputedStyle(\n      document.querySelector(\":root\") as Element\n    ).getPropertyValue(\"--jp-shadow-base-lightness\") === \"0\"\n      ? \"light\"\n      : \"dark\"\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: colorMode,\n          primary: blue,\n          secondary: pink,\n        },\n      }),\n    [colorMode]\n  )\n  useEffect(() => {\n    setPathName(window.location.pathname)\n  }, [])\n\n  if (!ready) {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={3}>\n          <Box\n            sx={{\n              minHeight: \"100vh\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              backgroundColor: theme.palette.background.default,\n            }}\n          >\n            <JupyterLabStartWidget\n              showOptunaDashboard={() => {\n                setReady(true)\n              }}\n            />\n          </Box>\n        </SnackbarProvider>\n      </ThemeProvider>\n    )\n  }\n  return (\n    <ConstantsContext.Provider\n      value={{\n        color_mode: colorMode,\n        environment: \"jupyterlab\",\n        url_prefix: pathName,\n      }}\n    >\n      <APIClientProvider apiClient={jupyterlabAPIClient}>\n        <App />\n      </APIClientProvider>\n    </ConstantsContext.Provider>\n  )\n}\n\nconst JupyterLabStartWidget: FC<{\n  showOptunaDashboard: () => void\n}> = ({ showOptunaDashboard }) => {\n  const [loading, setLoading] = useState(true)\n  const [isInitialized, setIsInitialized] = useState(false)\n  const [cwd, setCwd] = useState(\"\")\n\n  useEffect(() => {\n    setLoading(true)\n    requestAPI<{ is_initialized: boolean; cwd_path: string }>(\n      \"/api/is_initialized\",\n      {\n        method: \"GET\",\n      }\n    )\n      .then((res) => {\n        setIsInitialized(res.is_initialized)\n        setCwd(res.cwd_path)\n        setLoading(false)\n      })\n      .catch((err) => {\n        setLoading(false)\n        enqueueSnackbar(\"Failed to check the initialized state\", {\n          variant: \"error\",\n        })\n        console.error(err)\n      })\n  }, [])\n\n  if (loading) {\n    return (\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  if (isInitialized) {\n    return (\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"600px\",\n          borderRadius: \"8px\",\n          boxShadow: \"rgba(0, 0, 0, 0.08) 0 8px 24px\",\n          padding: \"64px\",\n        }}\n      >\n        <Typography variant=\"h4\">Continue or Reset?</Typography>\n        <Typography sx={{ margin: \"8px 0\" }}>\n          Continue with the existing storage URL and artifact path settings, or\n          you can reset them.\n        </Typography>\n        <Button\n          variant=\"contained\"\n          onClick={showOptunaDashboard}\n          color=\"primary\"\n          startIcon={<StartIcon />}\n          sx={{ margin: \"8px 0\", minWidth: \"120px\" }}\n        >\n          Continue\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            setIsInitialized(false)\n          }}\n          color=\"primary\"\n          startIcon={<RestartAltIcon />}\n          sx={{ margin: \"8px 0\", minWidth: \"120px\" }}\n        >\n          Reset\n        </Button>\n      </Box>\n    )\n  }\n\n  return (\n    <StartDashboardForm\n      showOptunaDashboard={showOptunaDashboard}\n      cwd={cwd}\n      setLoading={setLoading}\n    />\n  )\n}\n\nconst StartDashboardForm: FC<{\n  showOptunaDashboard: () => void\n  cwd: string\n  setLoading: Dispatch<SetStateAction<boolean>>\n}> = ({ showOptunaDashboard, cwd, setLoading }) => {\n  const theme = useTheme()\n  const isDarkMode = theme.palette.mode === \"dark\"\n  const [storageURL, setStorageURL] = useState(\"\")\n  const [artifactPath, setArtifactPath] = useState(\"\")\n  const [isValidURL, setIsValidURL] = useState(false)\n\n  const handleValidateURL = (url: string): void => {\n    setIsValidURL(url !== \"\")\n  }\n\n  const handleCreateNewDashboard = () => {\n    setLoading(true)\n    requestAPI<{ is_initialized: boolean }>(\"/api/register_dashboard_app\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        storage_url: storageURL,\n        artifact_path: artifactPath,\n      }),\n    })\n      .then((_res) => {\n        setLoading(false)\n        showOptunaDashboard()\n      })\n      .catch((err) => {\n        setLoading(false)\n        enqueueSnackbar(\"Failed to initialize Optuna Dashboard\", {\n          variant: \"error\",\n        })\n        console.error(err)\n      })\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"600px\",\n        borderRadius: \"8px\",\n        boxShadow: isDarkMode\n          ? \"rgba(255, 255, 255, 0.08) 0 8px 24px\"\n          : \"rgba(0, 0, 0, 0.08) 0 8px 24px\",\n        padding: \"64px\",\n      }}\n    >\n      <Typography variant=\"h4\">Initialize Dashboard</Typography>\n      <Typography sx={{ margin: \"8px 0\" }}>\n        Please enter a storage URL and an artifact path.\n        {cwd !== \"\" && (\n          <>\n            {\" \"}\n            Your current working directory is <strong>{cwd}</strong>.\n          </>\n        )}\n      </Typography>\n      <FormControl>\n        <DebouncedInputTextField\n          onChange={(s) => {\n            handleValidateURL(s)\n            setStorageURL(s)\n          }}\n          delay={500}\n          textFieldProps={{\n            autoFocus: true,\n            fullWidth: true,\n            label: \"Storage URL or File Path (Required)\",\n            type: \"text\",\n            sx: { margin: \"8px 0\" },\n          }}\n        />\n      </FormControl>\n      <FormControl>\n        <DebouncedInputTextField\n          onChange={(s) => {\n            setArtifactPath(s)\n          }}\n          delay={500}\n          textFieldProps={{\n            fullWidth: true,\n            label: \"Artifact path (Optional)\",\n            type: \"text\",\n            sx: { margin: \"8px 0\" },\n          }}\n        />\n      </FormControl>\n      <Button\n        variant=\"contained\"\n        onClick={handleCreateNewDashboard}\n        color=\"primary\"\n        disabled={!isValidURL}\n        sx={{ margin: \"8px 0\" }}\n      >\n        Create\n      </Button>\n    </Box>\n  )\n}\n","import { URLExt } from \"@jupyterlab/coreutils\"\n\nimport { ServerConnection } from \"@jupyterlab/services\"\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = \"\",\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings()\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    \"jupyterlab-optuna\", // API Namespace\n    endPoint\n  )\n\n  let response: Response\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings)\n  } catch (error) {\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    throw new ServerConnection.NetworkError(error as any)\n  }\n\n  // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n  let data: any = await response.text()\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data)\n    } catch (error) {\n      console.log(\"Not a JSON response body.\", response)\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data)\n  }\n\n  return data\n}\n","import { JupyterFrontEnd, JupyterFrontEndPlugin } from \"@jupyterlab/application\"\n\nimport { ICommandPalette } from \"@jupyterlab/apputils\"\nimport optunaLogo from \"../img/optuna_logo.svg\"\n\nimport { ILauncher } from \"@jupyterlab/launcher\"\nimport { LabIcon } from \"@jupyterlab/ui-components\"\n\nimport { MainAreaWidget } from \"@jupyterlab/apputils\"\nimport { OptunaDashboardWidget } from \"./widget\"\n\n/**\n * The command IDs used by the server extension plugin.\n */\nnamespace CommandIDs {\n  export const get = \"server:get-file\"\n  export const ui = \"server:dashboard-ui\"\n}\n\n/**\n * Initialization data for the jupyterlab-optuna extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: \"jupyterlab-optuna:plugin\",\n  description: \"A JupyterLab extension for Optuna\",\n  autoStart: true,\n  optional: [ILauncher],\n  requires: [ICommandPalette],\n  activate: (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    launcher: ILauncher | null\n  ) => {\n    console.log(\"JupyterLab extension jupyterlab-optuna is activated!\")\n    console.log(\"ICommandPalette:\", palette)\n\n    const { commands, shell } = app\n    const optunaIcon = new LabIcon({\n      name: \"ui-components:optuna\",\n      svgstr: optunaLogo,\n    })\n\n    commands.addCommand(CommandIDs.ui, {\n      caption: \"Launch Optuna Dashboard\",\n      label: \"Optuna Dashboard\",\n      icon: (args) => (args.isPalette ? undefined : optunaIcon),\n      execute: () => {\n        const content = new OptunaDashboardWidget()\n        const widget = new MainAreaWidget<OptunaDashboardWidget>({ content })\n        widget.title.label = \"Optuna Dashboard Widget\"\n        widget.title.icon = optunaIcon\n        shell.add(widget, \"main\")\n      },\n    })\n    if (launcher) {\n      launcher.add({\n        command: CommandIDs.ui,\n      })\n    }\n    palette.addItem({ command: CommandIDs.ui, category: \"Optuna\" })\n  },\n}\n\nexport default plugin\n","import { ReactWidget } from \"@jupyterlab/ui-components\"\nimport React from \"react\"\nimport { JupyterLabEntrypoint } from \"./components/JupyterLabEntrypoint\"\n\nexport class OptunaDashboardWidget extends ReactWidget {\n  constructor() {\n    super()\n    this.addClass(\"jp-react-widget\")\n  }\n\n  render(): JSX.Element {\n    return <JupyterLabEntrypoint />\n  }\n}\n"],"names":[],"sourceRoot":""}