Metadata-Version: 2.4
Name: sqs-s3-offloader
Version: 1.0.1
Summary: A utility to offload large messages to S3 and use SQS seamlessly
Home-page: https://github.com/aniket-dg/sqs-s3-offloader
Author: Aniket Gavali
Author-email: Aniket Gavali <aniket.dg25@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Aniket Gavali
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: boto3>=1.28.0
Requires-Dist: celery>=5.3.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: moto; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# SQS S3 Offloader

[![PyPI version](https://badge.fury.io/py/sqs-s3-offloader.svg)](https://pypi.org/project/sqs-s3-offloader/)

`sqs-s3-offloader` is a utility library that allows you to bypass the AWS SQS message size limit (256 KB) by offloading large payloads to Amazon S3. It wraps your Celery task, automatically uploads large payloads to S3, sends a reference pointer via SQS, and downloads the actual data during task execution.

---

## ✨ Features

- ✅ Automatically detects and offloads large SQS payloads to S3
- ✅ Transparent integration with Celery tasks via a simple decorator
- ✅ Secure upload and deletion of temporary payloads from S3
- ✅ Works with boto3 and AWS credentials setup

---

## 🚀 Installation

```bash
pip install sqs-s3-offloader
```

---

## ⚙️ Usage

```python
from sqs_s3_offloader import s3_offload_task

@s3_offload_task
@shared_task
def my_task(data):
    # Your logic here
    print(data)
```

### How It Works

- Before sending the task to SQS, if the payload size is too large, the decorator uploads the data to S3 and sends a pointer like:
  ```json
  {"s3_bucket": "your-bucket", "s3_key": "tmp/uuid4.json", "s3_pointer":  True}
  ```
- The decorator on the worker side checks if the argument contains the S3 pointer, fetches the actual payload from S3, deletes it, and executes the task with original data.

---

## 📦 Setup for Testing

To use this library in tests, mock S3 using `moto`:

```python
from moto import mock_s3
import boto3

@mock_s3
def test_s3_upload():
    s3 = boto3.client("s3", region_name="us-east-1")
    s3.create_bucket(Bucket="my-test-bucket")
    # Now test your upload logic
```

---

## 📄 License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for more details.

---

## 👨‍💻 Author

Made [Aniket Dinesh Gavali](https://github.com/aniket-dg)
