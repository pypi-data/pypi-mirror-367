# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.rep_data_study_legacy import RepDataStudyLegacy

class TestRepDataStudyLegacy(unittest.TestCase):
    """RepDataStudyLegacy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepDataStudyLegacy:
        """Test RepDataStudyLegacy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepDataStudyLegacy`
        """
        model = RepDataStudyLegacy()
        if include_optional:
            return RepDataStudyLegacy(
                name = '',
                compensation = 1.337,
                length_of_interview = 1.337,
                incidence_rate = 1.337,
                country_code = '',
                language_code = '',
                device_compatibility = [
                    ''
                    ],
                min_age = 1.337,
                max_age = 1.337,
                genders = [
                    ''
                    ],
                qualifications = [
                    keplar_api.models.rep_data_study_legacy_qualifications_inner.RepDataStudyLegacy_qualifications_inner(
                        qualification_id = 1.337, 
                        qualification_options = [
                            1.337
                            ], )
                    ]
            )
        else:
            return RepDataStudyLegacy(
                name = '',
                compensation = 1.337,
                length_of_interview = 1.337,
                incidence_rate = 1.337,
                country_code = '',
                language_code = '',
                device_compatibility = [
                    ''
                    ],
                min_age = 1.337,
                max_age = 1.337,
                genders = [
                    ''
                    ],
                qualifications = [
                    keplar_api.models.rep_data_study_legacy_qualifications_inner.RepDataStudyLegacy_qualifications_inner(
                        qualification_id = 1.337, 
                        qualification_options = [
                            1.337
                            ], )
                    ],
        )
        """

    def testRepDataStudyLegacy(self):
        """Test RepDataStudyLegacy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
