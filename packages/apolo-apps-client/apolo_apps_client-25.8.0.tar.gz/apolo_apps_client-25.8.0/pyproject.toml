[project]
name = "apolo-apps-client"
description = "Apolo internal client for platform-apps API"
authors = [
    {name = "apolo.us"}
]
license = {text = "proprietary"}
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = ["aiohttp (>=3.12.14,<4.0.0)", "pydantic (>=2.11.7,<3.0.0)"]
dynamic = []
version = "25.8.0"

[tool.poetry]

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }


[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
fix-shallow-repository = true

[build-system]
requires = ["poetry-core>=2.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
pre-commit = "^4.1.0"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
cryptography = "^45.0.4"
pytest-aiohttp = "^1.1.0"

[tool.ruff.lint]
select = [
    "E", "F", "I", "C90", "UP", "B", "ASYNC", "N", "A", "C4", "EM", "FA", "ICN",
    "G", "PIE", "T20", "PYI", "PT", "RET", "PTH", "T10"
]
ignore = [
  "A003",  # Class attribute "..." is shadowing a Python builtin
  "N818",
  "C901",  # ... is too complex
]

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = "tests"
addopts = """
    -vv
    --cov-config=setup.cfg
    --cov-branch
    --cov-report term-missing:skip-covered
"""

[tool.mypy]
follow_imports = "silent"
strict_equality = true
# --strict option
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
