Metadata-Version: 2.4
Name: treely
Version: 1.0.0
Summary: A modern, beautiful and powerful command-line directory tree generator with advanced filtering and code-viewing capabilities.
Project-URL: Homepage, https://github.com/rudra-mondal/treely
Author-email: Rudra Mondal <rudramondal815@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Rudra Mondal
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: cli,directory,dirtree,foldertree,generator,structure,tool,tree,treegen,treely
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: System :: Filesystems
Requires-Python: >=3.7
Description-Content-Type: text/markdown


# üå≥ Treely

[![PyPI version](https://badge.fury.io/py/treely.svg)](https://badge.fury.io/py/treely)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python Versions](https://img.shields.io/pypi/pyversions/treely.svg)](https://pypi.org/project/treely/)

A beautiful and powerful command-line directory tree generator with advanced filtering and code-viewing capabilities.

![Treely Demo GIF](https://your-link-to-a-demo-gif.com/demo.gif)
*(Suggestion: You can use a tool like [Terminalizer](https://github.com/faressoft/terminalizer) to record a GIF of your tool in action and link it here!)*

---

## üéØ Core Features

*   **Beautiful Output**: Generates clean, colorful, and readable directory trees.
*   **Depth Limiting**: Control how many levels deep the tree goes (`-L`).
*   **Advanced Filtering**: Ignore or include specific files/folders using powerful patterns (`--ignore`, `--pattern`).
*   **Code Viewer**: Display the contents of all detected code files right in your terminal (`--code`).
*   **Fine-Grained Control**: Exclude specific files from the code viewer, even while showing others.

---

## üöÄ Installation

Install `treely` globally using `pip`. Python 3.7+ is required.

```bash
pip install treely
```

---

## ‚öôÔ∏è Usage

After installation, the `treely` command will be available in your terminal.

#### **Basic Examples**

```bash
# Generate a simple tree for the current folder
treely

# Generate a tree for a specific project, only 2 levels deep
treely ./my-project -L 2
```

#### **Advanced Filtering**

```bash
# Ignore common clutter like 'node_modules' and '__pycache__'
treely --ignore "node_modules|__pycache__"

# Show only Python and Markdown files in your project
treely --pattern "*.py|*.md"
```

#### **Using the Code Viewer**

```bash
# Show the tree AND the content of all detected code files
# (This is great for sharing a project's context)
treely --code

# Show code, but specifically exclude configuration and lock files from the output
treely --ignore "node_modules" --code "package.json|package-lock.json"
```

---
This tool was created as a fun and educational project. Enjoy!