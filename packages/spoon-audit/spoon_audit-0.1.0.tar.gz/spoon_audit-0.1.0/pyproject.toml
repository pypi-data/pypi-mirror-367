[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spoon-audit"
version = "0.1.0"
description = "AI-powered smart contract audit assistant with SpoonOS integration"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "SecureAudit Collective", email = "team@secureaudit.xyz" },
]
keywords = [
    "solidity",
    "smart-contracts",
    "audit",
    "security",
    "blockchain",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Security",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "requests>=2.28.0",
    "watchdog>=2.1.0",
    "python-dotenv>=1.0.0",
    "py-solc-x>=1.12.0",
    
    # Constrain typing-extensions to work with both mythril and pydantic v1
    "typing-extensions>=3.7.4,<4.0.0",
    
    # Use compatible pydantic v1 that works with typing-extensions <4
    "pydantic>=1.8.0,<1.10.0",

    # Static analysis 
    "slither-analyzer>=0.8.0,<0.10.0",
   
    # "mythril==0.22.0",  

   
    "openai>=0.27.0,<1.0.0",
    
   
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Optional mythril support - install separately if needed
mythril = [
    "mythril==0.23.0",
]

[project.urls]
"Homepage"    = "https://github.com/CodeKage25/spoon-audit"
"Bug Reports" = "https://github.com/CodeKage25/spoon-audit/issues"
"Source"      = "https://github.com/CodeKage25/spoon-audit"

[project.scripts]
spoon-audit = "cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["cli*", "analysis*"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]