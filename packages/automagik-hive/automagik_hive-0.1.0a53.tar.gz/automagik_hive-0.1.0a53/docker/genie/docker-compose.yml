# =============================================================================
# Genie Consultation Container - All-in-One PostgreSQL + FastAPI
# =============================================================================
#
# Unified container architecture for wish fulfillment orchestration:
# - PostgreSQL database with pgvector extension (internal port 5432)
# - FastAPI application with Genie consultation API (external port 48886)
# - Supervisord process management for multi-service coordination
# - Complete isolation from main workspace
#
# Usage:
#   docker-compose -f docker-compose-genie.yml up -d
#   docker-compose -f docker-compose-genie.yml logs -f
#   docker-compose -f docker-compose-genie.yml down
#
# Integration:
#   uvx automagik-hive --genie-serve    # Start Genie container
#   uvx automagik-hive --genie-logs     # View Genie logs
#   uvx automagik-hive --genie-stop     # Stop Genie container
#
# =============================================================================

# Shared build arguments for Genie container
x-genie-build-args: &genie-build-args
  BUILD_VERSION: ${BUILD_VERSION:-latest}
  BUILD_DATE: ${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}
  GIT_SHA: ${GIT_SHA:-$(git rev-parse HEAD 2>/dev/null || echo "unknown")}
  API_PORT: 48886
  CONTAINER_TYPE: genie

services:
  # Genie All-in-One Service (PostgreSQL + FastAPI)
  genie-server:
    build:
      context: .
      dockerfile: Dockerfile.genie
      args:
        <<: *genie-build-args
      platforms:
        - linux/amd64
      target: genie-production
    container_name: hive-genie-server
    restart: unless-stopped
    user: "1000:1000"  # Match host user permissions (namastex:namastex)
    ports:
      - "48886:48886"  # Genie consultation API
    environment:
      # Genie-specific database connection (internal PostgreSQL)
      - HIVE_DATABASE_URL=postgresql+psycopg://${POSTGRES_USER:-genie}:${POSTGRES_PASSWORD:-genie}@localhost:5432/${POSTGRES_DB:-hive_genie}
      - RUNTIME_ENV=prd
      - HIVE_LOG_LEVEL=info
      - HIVE_API_HOST=0.0.0.0
      - HIVE_API_PORT=48886
      - HIVE_API_WORKERS=${API_WORKERS:-2}
      - HIVE_ENVIRONMENT=genie-consultation
      # PostgreSQL configuration for internal database
      - POSTGRES_USER=${POSTGRES_USER:-genie}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-genie}
      - POSTGRES_DB=hive_genie
      - PGDATA=/var/lib/postgresql/data/pgdata
      # Performance optimizations
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Supervisord configuration
      - SUPERVISOR_LOG_LEVEL=info
    volumes:
      - ./data/postgres-genie:/var/lib/postgresql/data  # PostgreSQL persistence
      - genie_app_logs:/app/logs                        # Application logs
      - genie_app_data:/app/data                        # Application data
      - genie_supervisor_logs:/var/log/supervisor       # Supervisor logs
    networks:
      - genie_network
    healthcheck:
      test: |
        # Multi-service health check: PostgreSQL + FastAPI
        pg_isready -U ${POSTGRES_USER:-genie} -d hive_genie &&
        curl -f http://localhost:48886/api/v1/health
      interval: 30s
      timeout: 15s  # Longer timeout for dual-service check
      retries: 3
      start_period: 90s  # Extra time for PostgreSQL + app startup
    # Resource limits for all-in-one container
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

# Genie network configuration
networks:
  genie_network:
    driver: bridge
    name: hive_genie_network

# Genie persistent volumes
volumes:
  genie_app_logs:
    driver: local
    name: hive_genie_app_logs
  genie_app_data:
    driver: local
    name: hive_genie_app_data
  genie_supervisor_logs:
    driver: local
    name: hive_genie_supervisor_logs