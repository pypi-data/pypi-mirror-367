# Test Dockerfile for pip installation
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /test

# Copy only necessary files for pip installation
COPY pyproject.toml setup.py MANIFEST.in VERSION README.md ./
COPY src/ ./src/

# Install claude-mpm via pip
# Create directories that post-install expects
RUN mkdir -p /root/.local/bin

RUN pip install --upgrade pip && \
    pip install .

# Copy install script
COPY scripts/install_hooks.py /scripts/install_hooks.py

# Test the installation
RUN echo '#!/bin/bash\n\
echo "=== Testing pip-installed claude-mpm ==="\n\
echo ""\n\
echo "1. Python path: $(which python)"\n\
echo ""\n\
echo "2. Claude-mpm version:"\n\
python -c "import claude_mpm; print(claude_mpm.__version__)"\n\
echo ""\n\
echo "3. Package location:"\n\
python -c "import claude_mpm; print(claude_mpm.__file__)"\n\
echo ""\n\
echo "4. Hook files location:"\n\
python -c "import claude_mpm, os; pkg_dir = os.path.dirname(claude_mpm.__file__); hook_dir = os.path.join(pkg_dir, \"hooks\", \"claude_hooks\"); print(\"Hook dir:\", hook_dir); print(\"Exists:\", os.path.exists(hook_dir)); print(\"Files:\", os.listdir(hook_dir) if os.path.exists(hook_dir) else \"Not found\")"\n\
echo ""\n\
echo "5. Find hook files in site-packages:"\n\
find /usr/local/lib -name "hook_handler.py" -path "*/claude_hooks/*" 2>/dev/null || echo "Not found"\n\
echo ""\n\
echo "6. Test hook import:"\n\
python -c "from claude_mpm.hooks.claude_hooks import hook_handler; print(\"âœ“ Hook handler imported successfully\")"\n\
echo ""\n\
echo "7. Test hook wrapper permissions:"\n\
python -c "import claude_mpm, os; pkg_dir = os.path.dirname(claude_mpm.__file__); hook_wrapper = os.path.join(pkg_dir, \\"hooks\\", \\"claude_hooks\\", \\"hook_wrapper.sh\\"); print(f\\"Hook wrapper: {hook_wrapper}\\"); print(f\\"Exists: {os.path.exists(hook_wrapper)}\\"); print(f\\"Executable: {os.access(hook_wrapper, os.X_OK)}\\")"\n\
echo ""\n\
echo "8. Test install_hooks.py script:"\n\
python /scripts/install_hooks.py\n\
echo ""\n\
echo "9. Check installed hooks:"\n\
cat /root/.claude/settings.json 2>/dev/null || echo "No settings.json found"\n\
' > /test_installation.sh && chmod +x /test_installation.sh

CMD ["/test_installation.sh"]