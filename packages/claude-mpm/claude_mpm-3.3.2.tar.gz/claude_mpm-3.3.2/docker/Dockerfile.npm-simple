# Test Dockerfile for npm installation
FROM node:18-slim

# Install Python and other dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    curl \
    which \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user to test user installations
RUN useradd -m -s /bin/bash testuser

# Switch to test user
USER testuser
WORKDIR /home/testuser

# Add user's local bin to PATH
ENV PATH="/home/testuser/.local/bin:${PATH}"

# Copy the npm package files
COPY --chown=testuser:testuser package.json .
COPY --chown=testuser:testuser npm-bin ./npm-bin
COPY --chown=testuser:testuser scripts/postinstall.js ./scripts/postinstall.js
COPY --chown=testuser:testuser README.npm.md .

# Create a mock claude command for testing
RUN mkdir -p /home/testuser/.local/bin && \
    echo '#!/bin/bash\necho "1.0.60"' > /home/testuser/.local/bin/claude && \
    chmod +x /home/testuser/.local/bin/claude

# Set npm prefix for user installs
RUN npm config set prefix "/home/testuser/.npm-global"

# Add npm global bin to PATH
ENV PATH="/home/testuser/.npm-global/bin:${PATH}"

# Install the npm package globally for the user
RUN npm install -g .

# Check installation
RUN echo "Contents of npm global:" && \
    npm list -g || true && \
    echo "Check for claude-mpm:" && \
    which claude-mpm || echo "Not found in PATH" && \
    echo "Check npm bin:" && \
    npm bin -g && \
    ls -la $(npm bin -g) || true

# Test running claude-mpm (should install Python package)
RUN claude-mpm --version || echo "Failed to run claude-mpm"

# Check Python package installation
RUN echo "Check Python package:" && \
    pip3 show claude-mpm || echo "Not installed via pip" && \
    echo "Check hook files:" && \
    python3 -c "import claude_mpm 2>/dev/null && import os && print('Found claude_mpm at:', claude_mpm.__file__) && pkg_dir = os.path.dirname(claude_mpm.__file__) && hook_dir = os.path.join(pkg_dir, 'hooks', 'claude_hooks') && print('Hook dir:', hook_dir) && print('Hook files:', os.listdir(hook_dir) if os.path.exists(hook_dir) else 'Not found')" || echo "Package not importable"

CMD ["/bin/bash"]