name: Test & Lint

on:
  push:
    branches: [ "main", "partialits", "staging", "refractor" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test-lint:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # 0) Check out the code
      - uses: actions/checkout@v3

      # 1) Install Miniconda (downloaded — the “bundled” version was removed)
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"      # <<–‑‑ mandatory or the action fails
          python-version: "3.11"
          auto-update-conda: true
          environment-file: environment.yml
          activate-environment: synkit-env
          use-mamba: true                  # optional, just faster

      # 2) Extra Linux‑only dependency: mod ≥ 0.17
      - name: Install mod (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: conda run -n synkit-env conda install -c jakobandersen -c conda-forge "mod>=0.17" -y

      # 3) Optional extra project deps via pip (requirements.txt)
      - name: Install project requirements
        if: hashFiles('requirements.txt') != ''
        run: conda run -n synkit-env pip install -r requirements.txt

      # 4a) Lint on Linux/macOS
      - name: Lint (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash -l {0}
        run: |
          conda activate synkit-env
          bash lint.sh

      # 4b) Lint on Windows
      - name: Lint (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash -l {0}
        run: |
          conda activate synkit-env
          bash lint.sh


      # 5) Test
      - name: Test
        shell: bash -l {0}
        run: |
          conda activate synkit-env
          bash pytest.sh
