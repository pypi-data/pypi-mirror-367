import unittest

from preparse.core import *


class TestScoreFunction(unittest.TestCase):

    def parse(self, *, optdict, query):
        p = PreParser(order=Order.POSIX, optdict=optdict)
        ans = p.parse_args(query)
        self.assertEqual(list(ans), list(p.parse_args(ans)))
        return ans

    def test_0_0(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_1(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_2(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_3(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_4(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_5(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_6(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--foo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_7(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_8(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_9(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_10(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_11(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_12(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--foo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_13(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_14(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--foo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_15(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_16(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_17(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_18(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_19(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_20(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_21(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_22(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_23(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_24(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_25(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_26(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--foo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_27(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--foo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_28(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_29(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_30(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_31(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_32(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--foo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_33(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--foo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_34(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--foo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_35(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_36(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--foo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_37(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_38(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_39(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_40(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_41(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_42(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_43(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_44(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_45(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_46(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_47(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_48(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_49(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--foo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_50(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_51(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_52(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_53(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_54(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_55(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_56(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_57(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_58(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_59(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_60(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_61(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_62(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_63(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_64(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_65(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_66(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_67(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_68(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--foo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_69(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_70(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_71(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_72(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_73(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_74(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_75(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_76(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = [
            "--foo=1.618",
            "--bar",
            "2.718",
            "--verbo=high",
            "--out=summary.csv",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_77(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--foo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_78(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_79(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_80(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_81(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_82(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_83(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_84(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_85(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_86(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_87(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_88(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_89(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_90(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_91(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_92(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_0_93(self):
        optdict = {
            "--foo": 1,
            "-o": 1,
            "--out": 2,
            "--bar": 1,
            "--baz": 2,
            "-x": 0,
            "-V": 0,
            "--hello": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_0(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_1(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_2(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = [
            "--verbose",
            "file1.txt",
            "--fizz=buzz",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_3(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_4(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_5(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_6(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_7(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_8(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_9(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_10(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_11(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_12(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_13(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_14(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = [
            "--fo=alpha",
            "--ba=bravo",
            "-v=1",
            "--output=logfile",
            "--verbose=2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_15(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_16(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--verbose",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_17(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_18(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_19(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_20(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--verbose",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_21(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_22(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_23(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_24(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_25(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_26(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_27(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_28(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--verbose",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_29(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_30(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_31(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_32(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_33(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_34(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbose=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_35(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--verbose",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_36(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_37(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_38(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_39(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_40(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--verbose",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_41(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_42(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_43(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_44(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_45(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_46(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_47(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_48(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_49(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_50(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_51(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_52(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_53(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_54(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_55(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_56(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_57(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_58(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_59(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_60(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_61(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_62(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_63(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_64(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_65(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_66(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_67(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_68(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_69(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_70(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_71(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_72(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_73(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_74(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_75(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_76(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_77(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbose=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_78(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_79(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_80(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_81(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_82(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_83(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_84(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_85(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_86(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_87(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_88(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_89(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_90(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_91(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_92(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_1_93(self):
        optdict = {
            "-v": 0,
            "-f": 0,
            "--verbose": 0,
            "--quick": 0,
            "--silent": 0,
            "-q": 0,
            "-h": 0,
            "--help": 0,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_0(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_1(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_2(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_3(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_4(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_5(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_6(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--foo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_7(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_8(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_9(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_10(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_11(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_12(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--foo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--output=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_13(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_14(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--foo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_15(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_16(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_17(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_18(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_19(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_20(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_21(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_22(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_23(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--output",
            "output.txt",
            "--foo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_24(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_25(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_26(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--foo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_27(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--foo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_28(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_29(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_30(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_31(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_32(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--foo",
            "qux",
            "--verbose",
            "--output=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_33(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--output=summary.csv",
            "--foo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_34(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--foo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_35(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_36(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--foo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_37(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_38(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_39(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_40(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_41(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_42(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_43(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_44(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_45(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_46(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_47(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_48(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_49(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--foo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_50(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_51(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_52(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_53(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_54(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_55(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_56(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_57(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_58(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_59(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_60(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_61(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_62(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_63(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_64(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_65(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_66(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_67(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_68(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--foo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_69(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_70(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_71(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_72(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_73(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_74(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_75(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_76(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = [
            "--foo=1.618",
            "--bar",
            "2.718",
            "--verbo=high",
            "--out=summary.csv",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_77(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = [
            "--output=output.json",
            "--foo",
            "--baz",
            "-oother.out",
            "--verbo=5",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_78(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_79(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_80(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_81(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_82(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_83(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_84(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_85(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_86(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_87(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_88(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_89(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_90(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_91(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_92(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_2_93(self):
        optdict = {
            "--foo": 1,
            "-b": 1,
            "--output": 1,
            "-o": 1,
            "--input": 1,
            "--config": 1,
            "-c": 1,
            "--file": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_0(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_1(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_2(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = [
            "--verbose",
            "file1.txt",
            "--fizz=buzz",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_3(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_4(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_5(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_6(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_7(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_8(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_9(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_10(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_11(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_12(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_13(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_14(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = [
            "--fo=alpha",
            "--ba=bravo",
            "-v=1",
            "--output=logfile",
            "--verbose=2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_15(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_16(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_17(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_18(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_19(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_20(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--verbose",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_21(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_22(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_23(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_24(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_25(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_26(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_27(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_28(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--verbose",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_29(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_30(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_31(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_32(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_33(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_34(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbose=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_35(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--verbose",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_36(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_37(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_38(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_39(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_40(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--verbose",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_41(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_42(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_43(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_44(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_45(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_46(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_47(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_48(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_49(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_50(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_51(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_52(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_53(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_54(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_55(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_56(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_57(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_58(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_59(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_60(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_61(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_62(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_63(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_64(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_65(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_66(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_67(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_68(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_69(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_70(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_71(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_72(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_73(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_74(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_75(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_76(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_77(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = [
            "--output=output.json",
            "--fo",
            "--baz",
            "-oother.out",
            "--verbose=5",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_78(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_79(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_80(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_81(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_82(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_83(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_84(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_85(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_86(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_87(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_88(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_89(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_90(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_91(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_92(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_3_93(self):
        optdict = {
            "--log": 2,
            "-d": 2,
            "--debug": 2,
            "--verbose": 2,
            "-f": 2,
            "--output": 2,
            "--silent": 2,
            "-s": 2,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_0(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_1(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_2(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_3(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_4(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_5(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_6(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_7(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_8(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_9(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_10(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_11(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_12(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_13(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_14(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_15(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_16(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_17(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_18(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_19(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_20(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_21(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_22(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_23(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_24(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_25(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_26(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_27(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_28(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_29(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_30(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_31(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_32(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_33(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_34(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_35(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_36(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_37(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_38(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_39(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_40(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_41(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_42(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_43(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_44(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_45(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_46(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_47(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_48(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_49(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_50(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_51(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_52(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_53(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_54(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_55(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_56(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_57(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_58(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_59(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_60(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_61(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_62(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_63(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_64(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_65(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_66(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_67(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_68(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_69(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_70(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_71(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_72(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_73(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_74(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_75(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_76(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_77(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--output=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_78(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_79(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_80(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_81(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_82(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_83(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_84(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_85(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--output=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_86(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_87(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_88(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_89(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_90(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_91(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_92(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_4_93(self):
        optdict = {
            "-f": 1,
            "-o": 2,
            "-x": 0,
            "-v": 0,
            "--file": 1,
            "--output": 2,
            "--quick": 0,
            "--path": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_0(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_1(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_2(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = [
            "--verbose",
            "file1.txt",
            "--fizz=buzz",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_3(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_4(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_5(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_6(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_7(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_8(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_9(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_10(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_11(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_12(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_13(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_14(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = [
            "--fo=alpha",
            "--ba=bravo",
            "-v=1",
            "--output=logfile",
            "--verbose=2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_15(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_16(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_17(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_18(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_19(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_20(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--verbose",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_21(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_22(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_23(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_24(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_25(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_26(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_27(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_28(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--verbose",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_29(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_30(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_31(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_32(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_33(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_34(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbose=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_35(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--verbose",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_36(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_37(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_38(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_39(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_40(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--verbose",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_41(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_42(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_43(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_44(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_45(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_46(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_47(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_48(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_49(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_50(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_51(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_52(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_53(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_54(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_55(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_56(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_57(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_58(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_59(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_60(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_61(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_62(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_63(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_64(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_65(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--logfile=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_66(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_67(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_68(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_69(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_70(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_71(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_72(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_73(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_74(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_75(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_76(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_77(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = [
            "--output=output.json",
            "--fo",
            "--baz",
            "-oother.out",
            "--verbose=5",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_78(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_79(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_80(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_81(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_82(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_83(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_84(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_85(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_86(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_87(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--logfile=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_88(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_89(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_90(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_91(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_92(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_5_93(self):
        optdict = {
            "--logfile": 1,
            "--output": 2,
            "--silent": 0,
            "--debug": 2,
            "--max-retries": 1,
            "--verbose": 0,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_0(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_1(self):
        optdict = {"--config": 2}
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_2(self):
        optdict = {"--config": 2}
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_3(self):
        optdict = {"--config": 2}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_4(self):
        optdict = {"--config": 2}
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_5(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_6(self):
        optdict = {"--config": 2}
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_7(self):
        optdict = {"--config": 2}
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_8(self):
        optdict = {"--config": 2}
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_9(self):
        optdict = {"--config": 2}
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_10(self):
        optdict = {"--config": 2}
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_11(self):
        optdict = {"--config": 2}
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_12(self):
        optdict = {"--config": 2}
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_13(self):
        optdict = {"--config": 2}
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_14(self):
        optdict = {"--config": 2}
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_15(self):
        optdict = {"--config": 2}
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_16(self):
        optdict = {"--config": 2}
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_17(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_18(self):
        optdict = {"--config": 2}
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_19(self):
        optdict = {"--config": 2}
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_20(self):
        optdict = {"--config": 2}
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_21(self):
        optdict = {"--config": 2}
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_22(self):
        optdict = {"--config": 2}
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_23(self):
        optdict = {"--config": 2}
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_24(self):
        optdict = {"--config": 2}
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_25(self):
        optdict = {"--config": 2}
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_26(self):
        optdict = {"--config": 2}
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_27(self):
        optdict = {"--config": 2}
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_28(self):
        optdict = {"--config": 2}
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_29(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_30(self):
        optdict = {"--config": 2}
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_31(self):
        optdict = {"--config": 2}
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_32(self):
        optdict = {"--config": 2}
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_33(self):
        optdict = {"--config": 2}
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_34(self):
        optdict = {"--config": 2}
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_35(self):
        optdict = {"--config": 2}
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_36(self):
        optdict = {"--config": 2}
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_37(self):
        optdict = {"--config": 2}
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_38(self):
        optdict = {"--config": 2}
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_39(self):
        optdict = {"--config": 2}
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_40(self):
        optdict = {"--config": 2}
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_41(self):
        optdict = {"--config": 2}
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_42(self):
        optdict = {"--config": 2}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_43(self):
        optdict = {"--config": 2}
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_44(self):
        optdict = {"--config": 2}
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_45(self):
        optdict = {"--config": 2}
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_46(self):
        optdict = {"--config": 2}
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_47(self):
        optdict = {"--config": 2}
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_48(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_49(self):
        optdict = {"--config": 2}
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_50(self):
        optdict = {"--config": 2}
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_51(self):
        optdict = {"--config": 2}
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_52(self):
        optdict = {"--config": 2}
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_53(self):
        optdict = {"--config": 2}
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_54(self):
        optdict = {"--config": 2}
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_55(self):
        optdict = {"--config": 2}
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_56(self):
        optdict = {"--config": 2}
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_57(self):
        optdict = {"--config": 2}
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_58(self):
        optdict = {"--config": 2}
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_59(self):
        optdict = {"--config": 2}
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_60(self):
        optdict = {"--config": 2}
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_61(self):
        optdict = {"--config": 2}
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_62(self):
        optdict = {"--config": 2}
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_63(self):
        optdict = {"--config": 2}
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_64(self):
        optdict = {"--config": 2}
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_65(self):
        optdict = {"--config": 2}
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_66(self):
        optdict = {"--config": 2}
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_67(self):
        optdict = {"--config": 2}
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_68(self):
        optdict = {"--config": 2}
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_69(self):
        optdict = {"--config": 2}
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_70(self):
        optdict = {"--config": 2}
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_71(self):
        optdict = {"--config": 2}
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_72(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_73(self):
        optdict = {"--config": 2}
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_74(self):
        optdict = {"--config": 2}
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_75(self):
        optdict = {"--config": 2}
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_76(self):
        optdict = {"--config": 2}
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_77(self):
        optdict = {"--config": 2}
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_78(self):
        optdict = {"--config": 2}
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_79(self):
        optdict = {"--config": 2}
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_80(self):
        optdict = {"--config": 2}
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_81(self):
        optdict = {"--config": 2}
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_82(self):
        optdict = {"--config": 2}
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_83(self):
        optdict = {"--config": 2}
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_84(self):
        optdict = {"--config": 2}
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_85(self):
        optdict = {"--config": 2}
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_86(self):
        optdict = {"--config": 2}
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_87(self):
        optdict = {"--config": 2}
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_88(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_89(self):
        optdict = {"--config": 2}
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_90(self):
        optdict = {"--config": 2}
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_91(self):
        optdict = {"--config": 2}
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_92(self):
        optdict = {"--config": 2}
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_6_93(self):
        optdict = {"--config": 2}
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_0(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_1(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_2(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_3(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_4(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_5(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_6(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_7(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_8(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_9(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_10(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_11(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_12(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_13(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_14(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_15(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_16(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_17(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_18(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_19(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_20(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_21(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_22(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_23(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_24(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_25(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_26(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_27(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_28(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_29(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_30(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_31(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_32(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_33(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_34(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_35(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_36(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_37(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_38(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_39(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_40(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_41(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_42(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_43(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_44(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_45(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_46(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_47(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_48(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_49(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_50(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_51(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_52(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_53(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_54(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_55(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_56(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_57(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_58(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_59(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_60(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_61(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_62(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_63(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_64(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_65(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_66(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_67(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_68(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_69(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_70(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_71(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_72(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_73(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_74(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_75(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_76(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_77(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_78(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_79(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_80(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_81(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_82(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_83(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_84(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_85(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_86(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_87(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_88(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_89(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_90(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_91(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_92(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_7_93(self):
        optdict = {"-a": 1, "-b": 2, "-c": 0, "-d": 1, "-e": 0, "-f": 1}
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_0(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_1(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_2(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_3(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_4(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_5(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_6(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--foo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_7(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_8(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_9(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_10(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_11(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_12(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--foo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--output=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_13(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_14(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--foo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_15(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_16(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_17(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_18(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_19(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_20(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_21(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_22(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_23(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_24(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_25(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_26(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--foo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_27(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--foo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_28(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_29(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_30(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_31(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_32(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--foo",
            "qux",
            "--verbose",
            "--output=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_33(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--output=summary.csv",
            "--foo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_34(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--foo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_35(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_36(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--foo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_37(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_38(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_39(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_40(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_41(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_42(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_43(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_44(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_45(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_46(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_47(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_48(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_49(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--foo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_50(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_51(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_52(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_53(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_54(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_55(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_56(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_57(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_58(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_59(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_60(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_61(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_62(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_63(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_64(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_65(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--logfile=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_66(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_67(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_68(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--foo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_69(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_70(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_71(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_72(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_73(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_74(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_75(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_76(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = [
            "--foo=1.618",
            "--bar",
            "2.718",
            "--verbo=high",
            "--out=summary.csv",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_77(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = [
            "--output=output.json",
            "--foo",
            "--baz",
            "-oother.out",
            "--verbo=5",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_78(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_79(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_80(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_81(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_82(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_83(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_84(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_85(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_86(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_87(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--logfile=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_88(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_89(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_90(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_91(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_92(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_8_93(self):
        optdict = {
            "--foo": 1,
            "-x": 0,
            "--output": 2,
            "--file": 1,
            "-v": 0,
            "--debug": 0,
            "--logfile": 2,
            "--retry": 1,
            "-d": 2,
            "-m": 1,
            "--silent": 0,
            "--error": 1,
            "-t": 2,
            "--timeout": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_0(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_1(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_2(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--verb", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_3(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_4(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_5(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_6(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_7(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_8(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_9(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_10(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_11(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--verb",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_12(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_13(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_14(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--verb=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_15(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_16(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--verb",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_17(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_18(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_19(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_20(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--verb",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_21(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_22(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_23(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_24(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_25(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_26(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_27(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_28(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--verb",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_29(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_30(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_31(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_32(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_33(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_34(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_35(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--verb",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_36(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_37(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_38(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_39(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_40(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--verb",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_41(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_42(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_43(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_44(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_45(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_46(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_47(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_48(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_49(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_50(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_51(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_52(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_53(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_54(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_55(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_56(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_57(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_58(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_59(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_60(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_61(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_62(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_63(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_64(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_65(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_66(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_67(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_68(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_69(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_70(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_71(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_72(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_73(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_74(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_75(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_76(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_77(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_78(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--verb",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_79(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_80(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_81(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_82(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_83(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_84(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_85(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_86(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_87(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_88(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_89(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_90(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_91(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_92(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_9_93(self):
        optdict = {
            "--fo": 1,
            "--out": 2,
            "-f": 1,
            "-v": 0,
            "--verb": 2,
            "-o": 1,
            "--output": 2,
            "-c": 1,
            "--comp": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_0(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_1(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_2(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_3(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_4(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_5(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_6(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_7(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_8(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_9(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_10(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_11(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_12(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbose",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_13(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_14(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_15(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_16(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_17(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_18(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_19(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_20(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_21(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_22(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_23(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_24(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_25(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verbose",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_26(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_27(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_28(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_29(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_30(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_31(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_32(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_33(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_34(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_35(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_36(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_37(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_38(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_39(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_40(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_41(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_42(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_43(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_44(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_45(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_46(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_47(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_48(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_49(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_50(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_51(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_52(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_53(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_54(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_55(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_56(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_57(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_58(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_59(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_60(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_61(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_62(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_63(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_64(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_65(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_66(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_67(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_68(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_69(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_70(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_71(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_72(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_73(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_74(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_75(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_76(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = [
            "--fo=1.618",
            "--bar",
            "2.718",
            "--verbose=high",
            "--out=summary.csv",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_77(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbose=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_78(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_79(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_80(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_81(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_82(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_83(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_84(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_85(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_86(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_87(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_88(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_89(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_90(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_91(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_92(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_10_93(self):
        optdict = {
            "--foo": 1,
            "--fo": 1,
            "--output": 2,
            "--out": 2,
            "-o": 2,
            "--bar": 1,
            "--baz": 1,
            "-b": 1,
            "-B": 0,
            "--verbose": 0,
            "--ver": 2,
            "--version": 1,
            "-v": 0,
            "-x": 0,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_0(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_1(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_2(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_3(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_4(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_5(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_6(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_7(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_8(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_9(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_10(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_11(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_12(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_13(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_14(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_15(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_16(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_17(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_18(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_19(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_20(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_21(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_22(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_23(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_24(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_25(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_26(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_27(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_28(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_29(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_30(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_31(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_32(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_33(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_34(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_35(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_36(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_37(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_38(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_39(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_40(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_41(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_42(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_43(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_44(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_45(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_46(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_47(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_48(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_49(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_50(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_51(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_52(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_53(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_54(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_55(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_56(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_57(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_58(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_59(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_60(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_61(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_62(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_63(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_64(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_65(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_66(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_67(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_68(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_69(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_70(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_71(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_72(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_73(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_74(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_75(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_76(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_77(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_78(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_79(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_80(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_81(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_82(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_83(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_84(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_85(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_86(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_87(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_88(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_89(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_90(self):
        optdict = {"-h": 0, "--help": 0}
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_91(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_92(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_11_93(self):
        optdict = {"-h": 0, "--help": 0}
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_0(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_1(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_2(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_3(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_4(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_5(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_6(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_7(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_8(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_9(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_10(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_11(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_12(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_13(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_14(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_15(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_16(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_17(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_18(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_19(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_20(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_21(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_22(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_23(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_24(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_25(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_26(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_27(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_28(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_29(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_30(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_31(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_32(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_33(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_34(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_35(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_36(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_37(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_38(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_39(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_40(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_41(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_42(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_43(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_44(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_45(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_46(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_47(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_48(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_49(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_50(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_51(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_52(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_53(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_54(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_55(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_56(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_57(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_58(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_59(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_60(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_61(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_62(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_63(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_64(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_65(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_66(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_67(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_68(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_69(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_70(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_71(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_72(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_73(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_74(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_75(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_76(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_77(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--output=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_78(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_79(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_80(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_81(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_82(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_83(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_84(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_85(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_86(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_87(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_88(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_89(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_90(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_91(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_92(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_12_93(self):
        optdict = {"--input": 1, "--output": 2, "-i": 1, "-o": 2}
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_0(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_1(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_2(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_3(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_4(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_5(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_6(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_7(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_8(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_9(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_10(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_11(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_12(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_13(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_14(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_15(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_16(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_17(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_18(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_19(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_20(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_21(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_22(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_23(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_24(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_25(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_26(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_27(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_28(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_29(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_30(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_31(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_32(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_33(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_34(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_35(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_36(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_37(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_38(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_39(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_40(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_41(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_42(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_43(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_44(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_45(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_46(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_47(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_48(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_49(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_50(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_51(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_52(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_53(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_54(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_55(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_56(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_57(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_58(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_59(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_60(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_61(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_62(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_63(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_64(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_65(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_66(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_67(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_68(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_69(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_70(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_71(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_72(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_73(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_74(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_75(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_76(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_77(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_78(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_79(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_80(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_81(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_82(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_83(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_84(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_85(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_86(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_87(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_88(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_89(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_90(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_91(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_92(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_13_93(self):
        optdict = {
            "--alpha": 1,
            "--beta": 0,
            "--gamma": 2,
            "--delta": 1,
            "-a": 0,
            "-g": 2,
            "-z": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_0(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_1(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_2(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_3(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_4(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_5(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_6(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_7(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_8(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_9(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_10(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_11(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_12(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_13(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_14(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_15(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_16(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_17(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_18(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_19(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_20(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_21(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_22(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_23(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_24(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_25(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_26(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_27(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_28(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_29(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_30(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_31(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_32(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_33(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_34(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_35(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_36(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_37(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_38(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_39(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_40(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_41(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_42(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_43(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_44(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_45(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_46(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_47(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_48(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_49(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_50(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_51(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_52(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_53(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_54(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_55(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_56(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_57(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_58(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_59(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_60(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_61(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_62(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_63(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_64(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_65(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_66(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_67(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_68(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_69(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_70(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_71(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_72(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_73(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_74(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_75(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_76(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_77(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_78(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_79(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_80(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_81(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_82(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_83(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_84(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_85(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_86(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_87(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_88(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_89(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_90(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_91(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_92(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_14_93(self):
        optdict = {
            "--config": 1,
            "--file": 1,
            "-f": 1,
            "-p": 1,
            "--path": 1,
            "--set": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_0(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_1(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_2(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = [
            "--verbose",
            "file1.txt",
            "--fizz=buzz",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_3(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_4(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_5(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_6(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_7(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_8(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_9(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_10(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_11(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_12(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_13(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_14(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = [
            "--fo=alpha",
            "--ba=bravo",
            "-v=1",
            "--output=logfile",
            "--verbose=2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_15(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_16(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_17(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_18(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_19(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_20(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--verbose",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_21(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_22(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_23(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_24(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_25(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_26(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_27(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_28(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--verbose",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_29(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_30(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_31(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_32(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_33(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_34(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbose=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_35(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--verbose",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_36(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_37(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_38(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_39(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_40(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--verbose",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_41(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_42(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_43(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_44(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_45(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_46(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_47(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_48(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_49(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_50(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_51(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_52(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_53(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_54(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_55(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_56(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_57(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_58(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_59(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_60(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_61(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_62(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_63(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_64(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_65(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_66(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_67(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_68(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_69(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_70(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_71(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_72(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_73(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_74(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_75(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_76(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_77(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = [
            "--output=output.json",
            "--fo",
            "--baz",
            "-oother.out",
            "--verbose=5",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_78(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_79(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_80(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_81(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_82(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_83(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_84(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_85(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_86(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_87(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_88(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_89(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_90(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_91(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_92(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_15_93(self):
        optdict = {
            "--log": 2,
            "--verbose": 2,
            "-d": 2,
            "-e": 2,
            "--output": 2,
            "--name": 2,
            "-n": 2,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_0(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_1(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_2(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_3(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_4(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_5(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_6(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_7(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_8(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_9(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_10(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_11(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_12(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_13(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_14(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_15(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_16(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_17(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_18(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_19(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_20(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_21(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_22(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_23(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_24(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_25(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_26(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_27(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_28(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_29(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_30(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_31(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_32(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_33(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_34(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbose=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_35(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_36(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_37(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_38(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_39(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_40(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_41(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_42(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_43(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_44(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_45(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_46(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_47(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_48(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_49(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_50(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_51(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_52(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_53(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_54(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_55(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_56(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_57(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_58(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_59(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_60(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_61(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_62(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_63(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_64(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_65(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_66(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_67(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_68(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_69(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_70(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_71(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_72(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_73(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_74(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_75(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_76(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_77(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = [
            "--output=output.json",
            "--fo",
            "--baz",
            "-oother.out",
            "--verbose=5",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_78(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_79(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_80(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_81(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_82(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_83(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_84(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_85(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_86(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_87(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_88(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_89(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_90(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_91(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_92(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_16_93(self):
        optdict = {
            "--version": 0,
            "--verbose": 0,
            "--output": 2,
            "--file": 1,
            "--config": 1,
            "--timeout": 1,
            "-t": 1,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_0(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_1(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_2(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = [
            "--verbose",
            "file1.txt",
            "--fizz=buzz",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_3(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_4(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_5(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_6(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbose",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_7(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_8(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_9(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_10(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_11(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_12(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_13(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbose=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_14(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = [
            "--fo=alpha",
            "--ba=bravo",
            "-v=1",
            "--output=logfile",
            "--verbose=2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_15(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_16(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--verbose",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_17(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_18(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbose=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_19(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_20(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--verbose",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_21(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_22(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_23(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verbose",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_24(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_25(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_26(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbose=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_27(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_28(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--verbose",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_29(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbose=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_30(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbose",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_31(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_32(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_33(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbose",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_34(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbose=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_35(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--verbose",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_36(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbose=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_37(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_38(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_39(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_40(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--verbose",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_41(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbose=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_42(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_43(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_44(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_45(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_46(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_47(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_48(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_49(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_50(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_51(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_52(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbose",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_53(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_54(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_55(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_56(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_57(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_58(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_59(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_60(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_61(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_62(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_63(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_64(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_65(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_66(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_67(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_68(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_69(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbose",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_70(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_71(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_72(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_73(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbose",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_74(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_75(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_76(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_77(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbose=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_78(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_79(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_80(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_81(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_82(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_83(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_84(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_85(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_86(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_87(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_88(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_89(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbose",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_90(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_91(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_92(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_17_93(self):
        optdict = {
            "--quiet": 0,
            "--verbose": 0,
            "--debug": 0,
            "--trace": 0,
            "-d": 0,
            "-v": 0,
            "-q": 0,
            "-t": 0,
            "--test": 0,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_0(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_1(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_2(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_3(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_4(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_5(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_6(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_7(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_8(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_9(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_10(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_11(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_12(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_13(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_14(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_15(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_16(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_17(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_18(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_19(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_20(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_21(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_22(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_23(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_24(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_25(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_26(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_27(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_28(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_29(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_30(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_31(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_32(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_33(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_34(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_35(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_36(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_37(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_38(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_39(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_40(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_41(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_42(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_43(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_44(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_45(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_46(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_47(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_48(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_49(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_50(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_51(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_52(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_53(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_54(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_55(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_56(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_57(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_58(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_59(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_60(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_61(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_62(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_63(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_64(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_65(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_66(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_67(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_68(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_69(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_70(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_71(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_72(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_73(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_74(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_75(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_76(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_77(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_78(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_79(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_80(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_81(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_82(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_83(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_84(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_85(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_86(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_87(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_88(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_89(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_90(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_91(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_92(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_18_93(self):
        optdict = {
            "-v": 0,
            "-o": 1,
            "-f": 2,
            "-q": 0,
            "--out": 2,
            "--fo": 1,
            "--bar": 1,
            "--baz": 2,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_0(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        solution = [
            "--foo",
            "value1",
            "positional1",
            "--bar",
            "value2",
            "positional2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_1(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        solution = ["--foo=42", "--verbose", "file1.txt", "file2.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_2(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        solution = ["--ver", "file1.txt", "--fizz=buzz", "positional1", "positional2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_3(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        solution = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_4(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-f", "42", "-v", "file2.txt", "-b", "3.14", "input.dat", "config.cfg"]
        solution = [
            "-f",
            "42",
            "-v",
            "file2.txt",
            "-b",
            "3.14",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_5(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "--baz",
            "--verbose",
            "pos1",
            "pos2",
            "--verbo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_6(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        solution = [
            "--fo=bar",
            "--verbo",
            "file.txt",
            "positional1",
            "--output=result.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_7(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        solution = [
            "file1.txt",
            "--foo",
            "--f=3",
            "-v",
            "--bar",
            "somefile.txt",
            "-o",
            "outfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_8(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        solution = ["data.csv", "script.py", "--fo=bar", "-b=baz", "-v", "extra_arg"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_9(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        solution = [
            "-vf42",
            "-b",
            "positional1",
            "-cconfig.cfg",
            "--verbose",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_10(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        solution = ["-vf", "42", "-c", "config.cfg", "--out=result.log", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_11(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        solution = [
            "--ver",
            "input1",
            "input2",
            "input3",
            "--output=log.txt",
            "--verbo",
            "script.py",
            "-cfile.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_12(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbos",
            "--out=result.out",
            "-oother.out",
        ]
        solution = [
            "--fo",
            "positional",
            "--baz=qux",
            "--verbose",
            "--output=result.out",
            "-oother.out",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_13(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        solution = [
            "--foo=bar",
            "--baz=qux",
            "--verbo=level",
            "-o=out.txt",
            "input1",
            "input2",
            "input3",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_14(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        solution = ["--fo=alpha", "--ba=bravo", "-v=1", "--output=logfile", "--ver=2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_15(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        solution = ["-vf", "file.txt", "--fo=bar", "--verbo", "input.dat", "-oout.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_16(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--ver",
            "--out=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        solution = [
            "--ver",
            "--output=log.txt",
            "--baz=buzz",
            "extra1",
            "extra2",
            "-ffile.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_17(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        solution = [
            "--foo",
            "-v",
            "arg1",
            "--bar=baz",
            "--fo=42",
            "arg2",
            "arg3",
            "-c=comp.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_18(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        solution = [
            "--verbo=5",
            "--output=result.txt",
            "-f",
            "input.csv",
            "--foo=bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_19(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo=alpha",
            "--bar=bravo",
            "--baz",
            "charlie",
            "-xfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_20(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        solution = [
            "--ver",
            "input1.txt",
            "--output=out.log",
            "--fo=alpha",
            "bravo",
            "charlie",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_21(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        solution = ["-v", "-f=file1", "--verbose=high", "-cconfig.json", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_22(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        solution = ["-v", "-f", "file2", "--verbose=low", "-b", "--output=log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_23(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verb",
            "--out",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--verb",
            "--output",
            "output.txt",
            "--fo=param",
            "-c=config.cfg",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_24(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--verbos", "-finput.csv", "--out=result.csv", "data1", "data2"]
        solution = ["--verbose", "-finput.csv", "--output=result.csv", "data1", "data2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_25(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        solution = [
            "--fo",
            "bar",
            "--ba=qux",
            "--verb",
            "-fdata.txt",
            "-ccompilation.cfg",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_26(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        solution = [
            "--fo=alpha",
            "--output=final.log",
            "--verbo=2",
            "-c=config.yml",
            "-finput.dat",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_27(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        solution = [
            "-ffoo.txt",
            "--fo=bar",
            "--verbose",
            "--baz",
            "-ovalue",
            "extra1",
            "extra2",
            "--out=final.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_28(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        solution = [
            "-vfile",
            "-fdata.csv",
            "--foo=baz",
            "--output=report.log",
            "--ver",
            "-c=comp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_29(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        solution = [
            "--foo",
            "--baz",
            "--verbo=3",
            "-ffile.txt",
            "-v",
            "--output=results.log",
            "-c=config.json",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_30(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo",
            "--out=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        solution = [
            "--verbo",
            "--output=report.pdf",
            "-fdata.txt",
            "-b=42",
            "--verbose",
            "-ccfg.ini",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_31(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--fo=42",
            "-v",
            "--bar=baz",
            "data1",
            "data2",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_32(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo",
            "qux",
            "--verbose",
            "--out=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        solution = [
            "--fo",
            "qux",
            "--verbose",
            "--output=result.json",
            "-b42",
            "--foo",
            "extra",
            "params",
            "-c=config",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_33(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo",
            "--out=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        solution = [
            "--verbo",
            "--output=summary.csv",
            "--fo=1.618",
            "-vdata",
            "--baz",
            "-ccode.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_34(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        solution = [
            "-ffile.txt",
            "--fo",
            "--verbo=high",
            "--baz=gamma",
            "positional1",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_35(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "--foob",
            "--ver",
            "--ba",
            "-vfile.txt",
            "--output=final.out",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_36(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo",
            "--baz",
            "--out=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        solution = [
            "--fo",
            "--baz",
            "--output=result.out",
            "-cconfig.cfg",
            "-fdata.csv",
            "--verbo=low",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_37(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        solution = ["--foo", "bar", "pos1", "pos2", "--bar=baz", "--out=output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_38(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        solution = ["-o", "outfile", "-x", "--hello", "world", "arg1", "arg2"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_39(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        solution = [
            "--foo=42",
            "--verbose",
            "file1.txt",
            "file2.txt",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_40(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        solution = [
            "--ver",
            "file1.txt",
            "--out=result.log",
            "--fizz=buzz",
            "pos1",
            "pos2",
            "--fo=alpha",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_41(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo=high",
            "--out",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        solution = [
            "--verbo=high",
            "--output",
            "out.txt",
            "-f",
            "input.csv",
            "--fo",
            "bar",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_42(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-f42", "-v", "file1.txt", "-o", "output.txt", "arg1", "arg2", "--baz"]
        solution = [
            "-f42",
            "-v",
            "file1.txt",
            "-o",
            "output.txt",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_43(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        solution = [
            "-f",
            "42",
            "-v",
            "-o=final.out",
            "file2.txt",
            "-b",
            "3.14",
            "--foo=bar",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_44(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        solution = [
            "--verbose",
            "arg1",
            "--foo",
            "arg2",
            "--baz",
            "-x",
            "--out",
            "final.log",
            "pos1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_45(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        solution = [
            "-v",
            "--hello=world",
            "-b",
            "--output",
            "output.log",
            "file1",
            "file2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_46(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        solution = [
            "script.py",
            "--foo=42",
            "arg1",
            "arg2",
            "--bar=baz",
            "-x",
            "-v",
            "--output=final_result.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_47(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        solution = [
            "file1.txt",
            "--fo=alpha",
            "file2.txt",
            "--baz=gamma",
            "--out=summary.csv",
            "positional1",
            "positional2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_48(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        solution = [
            "--foo",
            "--bar=somevalue",
            "data.csv",
            "--out=result.out",
            "-f",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_49(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        solution = [
            "--fo",
            "value1",
            "--bar",
            "value2",
            "--baz=3.14",
            "-x",
            "input.dat",
            "config.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_50(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        solution = [
            "-vf42",
            "-b",
            "-c=config.cfg",
            "--verbose",
            "positional1",
            "--foo=alpha",
            "extra",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_51(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        solution = [
            "-vf",
            "42",
            "-c",
            "config.cfg",
            "--output=result.log",
            "arg1",
            "arg2",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_52(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        solution = [
            "--verbo",
            "--output=log.txt",
            "--foo=bar",
            "-x",
            "input1",
            "input2",
            "input3",
            "--fo",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_53(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        solution = [
            "-vfile",
            "--bar=baz",
            "--baz=gamma",
            "-cfile.cfg",
            "pos1",
            "pos2",
            "--out=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_54(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        solution = [
            "-x",
            "--verbose",
            "-v",
            "--quiet",
            "--debug",
            "-f",
            "file.txt",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_55(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        solution = ["-ffile.txt", "-b", "--output=report.log", "--foo", "positional"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_56(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        solution = [
            "-vf",
            "file.txt",
            "--foo=bar",
            "-c=comp.cfg",
            "arg1",
            "--verbose",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_57(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-vf42", "-cfile.cfg", "--out=result.txt", "positional1", "--baz"]
        solution = [
            "-vf42",
            "-cfile.cfg",
            "--output=result.txt",
            "positional1",
            "--baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_58(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        solution = [
            "file1",
            "--foo",
            "file2",
            "--bar=baz",
            "-x",
            "extra1",
            "extra2",
            "--out=output",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_59(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        solution = [
            "-v",
            "--verbose",
            "--foo=bar",
            "--baz",
            "positional1",
            "extra",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_60(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        solution = ["--verbose", "--output=logfile.txt", "--foo=alpha", "--baz=42"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_61(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        solution = ["-o", "output.log", "-x", "--bar=qux", "-v", "--verbose"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_62(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        solution = ["--silent", "--verbose", "--debug", "-x", "-v", "-foutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_63(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        solution = ["-x", "-v", "-b=2", "--quiet", "-f", "file1", "--foo"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_64(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        solution = ["--foo=alpha", "--bar=bravo", "--baz=charlie", "--output=final.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_65(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        solution = [
            "--config=config.yaml",
            "--file=input.csv",
            "--silent",
            "--log=logs/output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_66(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        solution = ["file1.txt", "file2.csv", "logfile.log", "summary.docx"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_67(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["data1", "data2", "script.sh", "output.txt"]
        solution = ["data1", "data2", "script.sh", "output.txt"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_68(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        solution = [
            "--fo=bar",
            "--bar",
            "42",
            "--output=summary.log",
            "input1",
            "input2",
            "--verbos",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_69(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        solution = [
            "--verbo",
            "high",
            "--output=final.log",
            "file1",
            "file2",
            "positional1",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_70(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        solution = ["-v", "-x", "-f42", "-b=2", "-c", "comp.cfg", "-d"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_71(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        solution = ["-f=file.txt", "-b=baz", "-v", "-ooutput.log"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_72(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        solution = [
            "--foo",
            "alpha",
            "--ba",
            "gamma",
            "--verbos",
            "high",
            "positional1",
            "--output=final.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_73(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        solution = [
            "--verbo",
            "medium",
            "--baz=qux",
            "extra1",
            "extra2",
            "--out=output.log",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_74(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        solution = ["-vf42", "-cconfig.yml", "-d", "database.db", "-x"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_75(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        solution = ["-vf", "file.txt", "-b", "baz", "-ccfg.json", "-o=output"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_76(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        solution = ["--fo=1.618", "--bar", "2.718", "--verbo=high", "--out=summary.csv"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_77(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["--out=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        solution = ["--output=output.json", "--fo", "--baz", "-oother.out", "--verbo=5"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_78(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        solution = [
            "-ooutput.csv",
            "--ver",
            "input1",
            "input2",
            "--foo=bar",
            "-c=compilation.cfg",
            "--verbose",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_79(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--out",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        solution = [
            "--output",
            "output.txt",
            "-f=file.csv",
            "-b",
            "--foo=alpha",
            "--verbo",
            "pos1",
            "pos2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_80(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        solution = [
            "--verbose",
            "input1",
            "input2",
            "--foo=bar",
            "--out=output.txt",
            "-f=log.txt",
            "-x",
            "-ccomp.cfg",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_81(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        solution = [
            "-v",
            "--foo=bar",
            "file1",
            "file2",
            "--out",
            "result.log",
            "--baz=gamma",
            "extra1",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_82(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        solution = [
            "--quiet",
            "--debug",
            "--output",
            "final.txt",
            "--foo",
            "--bar=qux",
            "-v",
            "-x",
            "--silent",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_83(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        solution = [
            "--verbose",
            "--baz",
            "--logfile=logfile.txt",
            "-v",
            "-x",
            "data.csv",
            "--fo=bar",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_84(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        solution = [
            "-xf42",
            "-d",
            "-cconfig.cfg",
            "-o",
            "output",
            "-b=2",
            "--foo=bar",
            "--baz=high",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_85(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--out=results.csv",
            "--foo",
            "--bar=baz",
        ]
        solution = [
            "-vf",
            "output.txt",
            "-ccfg.json",
            "--output=results.csv",
            "--foo",
            "--bar=baz",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_86(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        solution = [
            "--foo=alpha",
            "--baz=beta",
            "--output=summary.log",
            "--verbose",
            "--debug",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_87(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        solution = [
            "--file=data.csv",
            "--config=config.yaml",
            "--output=out.txt",
            "--log=logfile",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_88(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        solution = [
            "--foo",
            "alpha",
            "--foo=beta",
            "positional1",
            "positional2",
            "--foo=gamma",
            "-f42",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_89(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        solution = [
            "--verbo",
            "medium",
            "arg1",
            "--output=final.log",
            "arg2",
            "arg3",
            "-vf",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_90(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        solution = ["-v", "-x", "-f=42", "-d", "delta", "--baz", "--foo=bar"]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_91(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        solution = [
            "-ooutput.txt",
            "-b=baz",
            "-v",
            "-x",
            "--output=result.json",
            "--verbose",
            "arg1",
            "arg2",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_92(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        solution = [
            "--foo",
            "--bar=baz",
            "--baz=qux",
            "-o=outfile",
            "--verbose",
            "file1.txt",
            "file2.txt",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)

    def test_19_93(self):
        optdict = {
            "--verbo": 0,
            "--verbose": 0,
            "--fo": 1,
            "--foo": 1,
            "-v": 0,
            "-f": 1,
            "-x": 0,
            "--output": 2,
        }
        query = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--out=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        solution = [
            "-v",
            "--output=log.txt",
            "--baz",
            "--output=report.csv",
            "extra",
            "args",
            "--fo=1.618",
        ]
        answer = self.parse(optdict=optdict, query=query)
        self.assertEqual(solution, answer)
