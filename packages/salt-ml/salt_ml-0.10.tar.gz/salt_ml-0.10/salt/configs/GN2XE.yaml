name: GN2X

data:
  train_file: /share/lustre/svanstroud/data/xbb/ext_v1/pp_output_train.h5
  val_file: /share/lustre/svanstroud/data/xbb/ext_v1/pp_output_val.h5
  norm_dict: /share/lustre/svanstroud/data/xbb/ext_v1/norm_dict.yaml
  class_dict: /share/lustre/svanstroud/data/xbb/ext_v1/class_dict.yaml
  #move_files_temp: /dev/shm/svanstro/salt/xbb/
  input_map:
    jets: jets
    tracks: tracks
    EDGE: tracks
  variables:
    jets:
      - pt
      - eta
      - mass
    tracks:
      - d0
      - z0SinTheta
      - dphi
      - deta
      - qOverP
      - IP3D_signed_d0_significance
      - IP3D_signed_z0_significance
      - phiUncertainty
      - thetaUncertainty
      - qOverPUncertainty
      - numberOfPixelHits
      - numberOfSCTHits
      - numberOfInnermostPixelLayerHits
      - numberOfNextToInnermostPixelLayerHits
      - numberOfInnermostPixelLayerSharedHits
      - numberOfInnermostPixelLayerSplitHits
      - numberOfPixelSharedHits
      - numberOfPixelSplitHits
      - numberOfSCTSharedHits
    EDGE:
      - dR
      - z
      - kt
      - subjetIndex
      - isSelfLoop
  num_train: -1
  num_val: -1
  num_test: -1
  batch_size: 1000
  num_workers: 15

trainer:
  max_epochs: 50
  devices: 2

model:
  model:
    class_path: salt.models.SaltModel
    init_args:
      init_nets:
        - input_name: tracks
          dense_config:
            input_size: 22
            output_size: &embed_dim 192
            hidden_layers: [256]
            activation: &activation SiLU
        - input_name: EDGE
          attach_global: false
          dense_config:
            input_size: 5
            output_size: &edge_embed_dim 32
            hidden_layers: [32]
            activation: *activation

      encoder:
        class_path: salt.models.TransformerEncoder
        init_args:
          embed_dim: *embed_dim
          edge_embed_dim: *edge_embed_dim
          num_layers: 6
          out_dim: &out_dim 128
          update_edges: True
          mha_config:
            num_heads: 4
            attention:
              class_path: salt.models.ScaledDotProductAttention
          dense_config:
            activation: *activation
            hidden_layers: [256]
            dropout: &dropout 0.1

      pool_net:
        class_path: salt.models.GlobalAttentionPooling
        init_args: { input_size: *out_dim }

      tasks:
        class_path: torch.nn.ModuleList
        init_args:
          modules:
            - class_path: salt.models.ClassificationTask
              init_args:
                name: jets_classification
                input_name: jets
                label: flavour_label
                loss:
                  class_path: torch.nn.CrossEntropyLoss
                  init_args: { weight: [2.75, 1.0, 1.52, 1.52] }
                dense_config:
                  input_size: *out_dim
                  output_size: 4
                  hidden_layers: [128, 64, 32]
                  activation: *activation
                  dropout: *dropout

            - class_path: salt.models.ClassificationTask
              init_args:
                name: track_origin
                input_name: tracks
                label: ftagTruthOriginLabel
                weight: 0.5
                loss:
                  class_path: torch.nn.CrossEntropyLoss
                  init_args:
                    weight: [4.37, 194.0, 1.0, 17.78, 12.25, 13.28, 1.0, 22.46]
                dense_config:
                  input_size: 128
                  context_size: 128
                  output_size: 8
                  hidden_layers: [128, 64, 32]
                  activation: *activation
                  dropout: *dropout

            #- class_path: salt.models.ClassificationTask
            #  init_args:
            #    name: track_type
            #    input_name: tracks
            #    label: ftagTruthTypeLabel
            #    weight: 0.4
            #    loss:
            #      class_path: torch.nn.CrossEntropyLoss
            #      init_args:
            #        weight: [2.12, 6.98, 1.0, 6.28, 22.62, 92.28]
            #    net:
            #      class_path: salt.models.Dense
            #      init_args:
            #        input_size: 128
            #        context_size: 128
            #        output_size: 6
            #        hidden_layers: [64, 32]
            #        activation: *activation

            #        dropout: *dropout

            - class_path: salt.models.VertexingTask
              init_args:
                name: track_vertexing
                input_name: tracks
                label: ftagTruthVertexIndex
                weight: 1.5
                loss:
                  class_path: torch.nn.BCEWithLogitsLoss
                  init_args:
                    reduction: none
                dense_config:
                  input_size: 256
                  context_size: *out_dim
                  hidden_layers: [128, 64, 32]
                  output_size: 1
                  activation: *activation
