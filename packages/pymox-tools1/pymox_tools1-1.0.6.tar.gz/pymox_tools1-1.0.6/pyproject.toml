[project]
name = "pymox_tools1"
dynamic = ["version"]
# version = "v0.1.2"  # sera géré automatiquement par semantic-release
# version = "0.0.6"  # valeur placeholder, ignorée par semantic-release
description = "Un module avec plein d'outils utiles pour devs en PyMoX (PY-thon - MO-jo - Flet-X)"
authors = [{ name = "GrCOTE7", email = "GrCOTE7@gmail.com" }]
# readme = {file = "README.md", encoding = "utf-8"}
readme = "README.md"
# readme = {file = "README.md", content-type = "text/markdown", encoding = "utf-8"}
license = "MIT"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]
dependencies = [
  # Ajoute ici tes dépendances, ex:
  # "requests >=2.0.0"
  "python-dotenv",
  "setuptools_scm"
]
requires-python = ">=3.10"

[build-system]
requires = ["setuptools>=77.0.0", "setuptools_scm", "wheel"]
# requires = ["setuptools>=61.0", "setuptools_scm>=7.0"]
build-backend = "setuptools.build_meta"

[tool.semantic_release]
tag_format = "v{version}"
version_variable = "src/pymox_tools1/__init__.py:__version__"
repository = "https://github.com/PyMoX-fr/GC7"
hvcs = "github"
github_token = "env:GH_TOKEN"

pypi_token = "env:PYPI_TOKEN"
version_source = "tag"
build_command = "python -m build"
log_level = "DEBUG"


upload_sdist = true          # publie également le source distribution sur PyPI
upload_wheel = true          # publie également le wheel sur PyPI
verify_release_commit = true

# commit_version_number = true
# commit_message = "chore(release): version {version}"

branch = "main"                # branch de travail
# commit_parser = "conventional" # essayer emoji
# commit_parser = "semantic_release.commit_parser.emoji:parse_commit_message:"


upload_to_repository = true # active la publication sur PyPI
upload_to_pypi = true       # active la publication sur PyPI

# [tool.semantic_release.changelog.default_templates]
# changelog_file = "CHANGELOG.md"

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["pymox_tools1"]           # dossier Python

[tool.setuptools.package-data]
"*" = ["*.txt", "*.json"] # si tu as des fichiers à inclure

[tool.setuptools_scm]
version_scheme = "release-branch-semver" # empêche les suffixes .devX ou .dirty
# local_scheme = "no-local-version"
tag_regex = "^v?(?P<version>[0-9]+(\\.[0-9]+)+)$"
# write_to = "src/pymox_tools1/_version.py"
