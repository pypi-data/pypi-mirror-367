[build-system]
requires = [
    "setuptools>=64",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "intsage-userspace"
version = "1.0.0"
description = "SAGE Framework - 用户空间组件 (合并 sage-lib, sage-plugins 和 sage-examples)"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "IntelliStream Team", email = "intellistream@outlook.com" },
]
keywords = [
    "library",
    "framework",
    "plugins",
    "rag",
    "intellistream",
    "ai",
    "algorithms",
    "llm",
    "extensions",
    "data",
    "ecosystem",
    "sage",
    "ml",
    "components",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "intellistream-sage-kernel",
    "intellistream-sage-middleware",
    "tiktoken",
    "sentence_transformers>=3.1.1",
    "einops",
    "outlines",
    "sentencepiece",
    "rouge==1.0.1",
    "fitz==0.0.1.dev2",
    "scikit-learn>=1.3.0",
    "sympy>=1.12",
    "networkx==3.4.2",
    "joblib>=1.3.0",
    "polars>=0.20.0",
    "pyarrow>=12.0.0",
    "aiofiles>=0.8.0",
    "importlib-metadata>=4.0.0",
    "stevedore>=5.0.0",
    "pluggy>=1.0.0",
    "entrypoints>=0.4",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
vectordb = [
    "chromadb>=0.4.0",
    "qdrant-client>=1.0.0",
    "weaviate-client>=3.0.0",
    "pinecone-client>=2.0.0",
]
advanced = [
    "optuna>=3.0.0",
    "hyperopt>=0.2.7",
    "bayesian-optimization>=1.4.0",
    "scikit-optimize>=0.9.0",
]
graph = [
    "igraph>=0.10.0",
    "graph-tool>=2.45",
    "networkit>=10.1",
]
math = [
    "cvxpy>=1.3.0",
    "gekko>=1.0.6",
    "pulp>=2.7.0",
]
graphdb = [
    "neo4j>=5.0.0",
    "networkx==3.4.2.0",
]
rag = [
    "langchain>=0.1.0",
    "llama-index>=0.9.0",
]
llm = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "google-generativeai>=0.3.0",
    "cohere>=4.0.0",
]
embedding = [
    "sentence-transformers>=2.2.0",
    "openai>=1.0.0",
    "cohere>=4.0.0",
]
storage = [
    "redis>=4.5.0",
    "pymongo>=4.0.0",
    "elasticsearch>=8.0.0",
]
network = [
    "httpx>=0.24.0",
    "websockets>=11.0.0",
    "kafka-python>=2.0.0",
]
testing = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
]
full = [
    "sage-userspace[vectordb,advanced,graph,math,graphdb,rag,llm,embedding,storage,network,testing]",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Issues = "https://github.com/intellistream/SAGE/issues"

[project.entry-points."sage.plugins"]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = [
    "src",
]
include = [
    "sage*",
]
namespaces = true

[tool.setuptools.package-data]
"sage.lib" = [
    "py.typed",
    "*.pyi",
]
"sage.plugins" = [
    "py.typed",
    "*.pyi",
    "*.yaml",
    "*.json",
]
"sage.examples" = [
    "**/*",
    "*.py",
    "*.md",
    "*.txt",
    "*.json",
    "*.yaml",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
addopts = []

[tool.black]
line-length = 88
target-version = [
    "py311",
]
include = "\\.pyi?$"
extend-exclude = "/(\n    \\.git\n    | \\.venv\n    | build\n    | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [
    "sage",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
overrides = [
    { module = "sage.lib.*", ignore_missing_imports = false },
    { module = "sage.plugins.*", ignore_missing_imports = false },
]
