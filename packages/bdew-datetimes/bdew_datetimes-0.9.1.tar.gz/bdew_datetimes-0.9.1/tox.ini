[tox]
envlist =
    tests
    linting
    type_check
    format
    dev             
    test_packaging

skip_missing_interpreters = True
skipsdist = True

[testenv]
commands = python -m pip install --upgrade pip

[testenv:tests]
# the tests environment is called by the Github action that runs the unit tests
deps =
    -r requirements.txt
    .[tests]
setenv = PYTHONPATH = {toxinidir}/src
commands = python -m pytest --basetemp={envtmpdir} {posargs}

[testenv:linting]
# the linting environment runs pylint on the code base
deps =
    -r requirements.txt
    .[linting]
setenv = PYTHONPATH = {toxinidir}/src
commands =
    pylint bdew_datetimes

[testenv:type_check]
# the type_check environment checks the type hints using mypy
deps =
    -r requirements.txt
    .[tests]
    .[type_check]
setenv = PYTHONPATH = {toxinidir}/src
commands =
    mypy --show-error-codes --strict src/bdew_datetimes
    mypy --show-error-codes --strict tests

[testenv:format]
# install isort and black and invoke them on the current folder
deps = 
    .[formatting]
commands = 
    isort .
    black .

[testenv:dev]
# the dev environment allow upgrading the requirements.txt via pip-compile
# a recent requirements.in is required!
deps =
    {[testenv:tests]deps}
    {[testenv:linting]deps}
    {[testenv:type_check]deps}
    {[testenv:format]deps}
    pip-tools
commands =
    python -m pip install --upgrade pip
    pip install -r requirements.txt

[testenv:test_packaging]
skip_install = true
deps =
    .[packaging]
commands =
    python -m build
    twine check dist/*

[testenv:spell_check]
# the spellcheck environment checks the code for typos
setenv = PYTHONPATH = {toxinidir}/src
deps =
    -r requirements.txt
    .[spell_check]
commands =
    codespell --ignore-words=domain-specific-terms.txt src/bdew_datetimes
    codespell --ignore-words=domain-specific-terms.txt README.md
    # add single files (ending with .py) or packages here
    # note that domain-specific-terms.txt (the ignore list of the spell checker) has to contain the ignored words in all lower case


[testenv:deps]
base_python=py38
deps =
    pip-tools