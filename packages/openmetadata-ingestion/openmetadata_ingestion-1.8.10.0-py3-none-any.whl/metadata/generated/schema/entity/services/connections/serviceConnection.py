# generated by datamodel-codegen:
#   filename:  entity/services/connections/serviceConnection.json
#   timestamp: 2025-08-05T07:46:01+00:00

from __future__ import annotations

from typing import Optional, Union

from pydantic import Field, RootModel
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from .. import (
    apiService,
    dashboardService,
    databaseService,
    messagingService,
    metadataService,
    mlmodelService,
    pipelineService,
    searchService,
    securityService,
    storageService,
)


class ServiceConnection(
    RootModel[
        Union[
            apiService.ApiConnection,
            dashboardService.DashboardConnection,
            databaseService.DatabaseConnection,
            messagingService.MessagingConnection,
            metadataService.MetadataConnection,
            pipelineService.PipelineConnection,
            mlmodelService.MlModelConnection,
            storageService.StorageConnection,
            searchService.SearchConnection,
            securityService.SecurityConnection,
        ]
    ]
):
    root: Annotated[
        Union[
            apiService.ApiConnection,
            dashboardService.DashboardConnection,
            databaseService.DatabaseConnection,
            messagingService.MessagingConnection,
            metadataService.MetadataConnection,
            pipelineService.PipelineConnection,
            mlmodelService.MlModelConnection,
            storageService.StorageConnection,
            searchService.SearchConnection,
            securityService.SecurityConnection,
        ],
        Field(description='Supported services'),
    ]


class ServiceConnectionModel(BaseModel):
    serviceConnection: Annotated[
        Optional[ServiceConnection], Field(None, description='Service Connection.')
    ]
