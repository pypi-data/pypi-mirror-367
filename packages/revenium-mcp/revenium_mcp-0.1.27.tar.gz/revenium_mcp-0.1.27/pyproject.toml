[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "revenium-mcp"
version = "0.1.27"
description = "Model Context Protocol (MCP) server for Revenium API monitoring, analytics, and AI spending management"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Jason Cumberland", email = "jason@revenium.io"}
]
maintainers = [
    {name = "Jason Cumberland", email = "jason@revenium.io"}
]
keywords = ["mcp", "revenium", "api", "ai", "assistant", "cli", "server", "model-context-protocol", "anthropic", "claude"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Framework :: AsyncIO",
    "Environment :: Console",
    "Topic :: Utilities",
    "Typing :: Typed",
]
requires-python = ">=3.11"
dependencies = [
    "fastmcp>=0.1.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "structlog>=23.0.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "revenium-middleware-openai>=0.4.6",
    "matplotlib>=3.7.0",
    "numpy>=1.24.0",
    "aiofiles>=23.0.0",
    "diskcache>=5.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "requests-mock>=1.10.0",
]

[project.urls]
Homepage = "https://github.com/revenium/revenium-mcp"
Documentation = "https://github.com/revenium/revenium-mcp#readme"
Repository = "https://github.com/revenium/revenium-mcp"
"Bug Tracker" = "https://github.com/revenium/revenium-mcp/issues"

[project.scripts]
revenium-mcp = "revenium_mcp_server.enhanced_server:main_sync"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["revenium_mcp_server"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
