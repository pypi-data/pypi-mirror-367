[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "anychange"
version = "0.2.0"
requires-python = ">=3.9"
description = "Pure Python asynchronous file watching"
authors = [
    {name ="Samuel Colvin", email = "s@muelcolvin.com"},
    {name = "David Brochart", email = "david.brochart@gmail.com"},
]
dependencies = [
    "anyio>=4.0.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Environment :: MacOS X",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
    "Framework :: AnyIO",
]
license = {file = "LICENSE"}
readme = "README.md"

[project.urls]
Source = "https://github.com/davidbrochart/anychange"

[dependency-groups]
dev = [
    "coverage>=7.6.10",
    "pytest>=7.4.4",
    "pytest-mock>=3.14.0",
    "pytest-pretty>=1.2.0",
    "pytest-timeout>=2.3.1",
    "trio>=0.28.0",
]
lint = [
    "mypy>=1.14.1",
    "ruff>=0.9.0",
]

[tool.pytest.ini_options]
testpaths = "tests"
log_format = "%(name)s %(levelname)s: %(message)s"
filterwarnings = "error"
timeout = 10

[tool.coverage.run]
source = ["anychange", "tests"]

[tool.coverage.report]
show_missing = true

[tool.ruff]
line-length = 120
target-version = "py313"
lint.mccabe = { max-complexity = 14 }
lint.extend-select = ["Q", "RUF100", "C90", "UP", "I"]
lint.flake8-quotes = {inline-quotes = "single", multiline-quotes = "double"}
lint.pydocstyle = { convention = "google" }
format.quote-style = "single"

[tool.mypy]
strict = true
warn_return_any = false
show_error_codes = true

[[tool.mypy.overrides]]
module = ["trio.*"]
ignore_missing_imports = true
