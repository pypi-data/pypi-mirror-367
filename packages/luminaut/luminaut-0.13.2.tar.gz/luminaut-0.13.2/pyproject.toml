[project]
name = "luminaut"
dynamic = ["version"]
description = "Casting light on shadow cloud deployments"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Topic :: Security",
    "Topic :: Utilities",
]
dependencies = [
    "boto3~=1.35.53",
    "google-cloud-compute>=1.30.0",
    "google-cloud-logging>=3.8.0",
    "google-cloud-run>=0.10.18",
    "orjson~=3.10.12",
    "python3-nmap~=1.9.1",
    "rich~=13.9.4",
    "shodan~=1.31.0",
    "tqdm>=4.67.1",
]

[project.scripts]
luminaut = "luminaut.__main__:main"

[dependency-groups]
dev = [
    "moto>=5.0.18",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
    "ruff>=0.8.3",
    "pyright>=1.1.391",
    "pytest-watcher>=0.4.3",
]

[project.urls]
Homepage = "https://luminaut.org"
Documentation = "https://luminaut.org"
Repository = "https://github.com/luminaut-org/luminaut.git"
Issues = "https://github.com/luminaut-org/luminaut/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/luminaut/__init__.py"
pattern = '^__version__ = "(?P<version>[^"]+)"'

[tool.uv]
package = true

[tool.ruff.lint]
select = [
    "F",  # pyflakes
    "UP",  # pyupgrade
    "B",  # bugbear
    "I",  # isort
    "C90",  # mccabe complexity
    "ANN",  # Type annotations
    "S",  # Bandit
    "A",  # Built-in shadowing
    "C4",  # Comprehensions
    "DTZ",  # Datetime
    "ISC",  # Implicit string concatenation
    "LOG",  # Logging
    "PIE",  # Misc lints
    "T20",  # Print found
    "Q",  # Quotes
    "RET",  # Returns
    "SIM",  # Simplification
    "PTH",  # Pathlib
    "PERF",  # Performance
    "PL",  # Pylint
]

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.pytest.ini_options]
addopts = "--cov=src/luminaut --cov-report=term --cov-report=html --cov-report=xml --cov-branch --durations=3"

[tool.pyright]
include = [
    "src",
    "tests"
]
pythonVersion = "3.11"
# For detecting venv with pyright via pre-commit
venvPath = "."
venv = ".venv"
