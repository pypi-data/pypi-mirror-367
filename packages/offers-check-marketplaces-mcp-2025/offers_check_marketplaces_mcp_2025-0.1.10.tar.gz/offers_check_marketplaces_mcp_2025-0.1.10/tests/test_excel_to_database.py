#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ parse_excel_and_save_to_database.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ Excel —Ñ–∞–π–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.insert(0, str(Path(__file__).parent))

from offers_check_marketplaces.server import initialize_components
from offers_check_marketplaces.excel_tools import ExcelTools
from offers_check_marketplaces.database_manager import DatabaseManager
from offers_check_marketplaces.user_data_manager import UserDataManager
import pandas as pd

async def create_test_excel_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å —Ç–æ–≤–∞—Ä–∞–º–∏."""
    test_data = [
        {
            "–ö–æ–¥\n–º–æ–¥–µ–ª–∏": 195385.0,
            "model_name": "–ü–æ–ª–æ—Ç–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –ë–Ø–ó–¨ –û–¢–ë–ï–õ–ï–ù–ù–ê–Ø –ì–û–°–¢, —Ä—É–ª–æ–Ω 1,5—Ö50 –º",
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–•–æ–∑—Ç–æ–≤–∞—Ä—ã –∏ –ø–æ—Å—É–¥–∞",
            "–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è": "–º",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç \n1 –ò—Å—Ç–æ—á–Ω–∏–∫–∏": "–ö–æ–º—É—Å",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç \n2 –ò—Å—Ç–æ—á–Ω–∏–∫–∏": "–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            "–¶–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏\n–ú–ü c –ù–î–°": "",
            "–¶–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏\nB2C c –ù–î–°": "",
            "–î–µ–ª—å—Ç–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö": "",
            "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫": "",
            "–¶–µ–Ω–∞ 2 –ø–æ–∑–∏—Ü–∏–∏\nB2C c –ù–î–°": ""
        },
        {
            "–ö–æ–¥\n–º–æ–¥–µ–ª–∏": 195386.0,
            "model_name": "–ë—É–º–∞–≥–∞ –æ—Ñ–∏—Å–Ω–∞—è –ê4 80–≥/–º2, –ø–∞—á–∫–∞ 500 –ª–∏—Å—Ç–æ–≤",
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã",
            "–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è": "–ø–∞—á–∫–∞",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç \n1 –ò—Å—Ç–æ—á–Ω–∏–∫–∏": "–û—Ñ–∏—Å–º–∞–≥",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç \n2 –ò—Å—Ç–æ—á–Ω–∏–∫–∏": "–ö–æ–º—É—Å",
            "–¶–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏\n–ú–ü c –ù–î–°": "",
            "–¶–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏\nB2C c –ù–î–°": "",
            "–î–µ–ª—å—Ç–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö": "",
            "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫": "",
            "–¶–µ–Ω–∞ 2 –ø–æ–∑–∏—Ü–∏–∏\nB2C c –ù–î–°": ""
        },
        {
            "–ö–æ–¥\n–º–æ–¥–µ–ª–∏": 195387.0,
            "model_name": "–†—É—á–∫–∞ —à–∞—Ä–∏–∫–æ–≤–∞—è —Å–∏–Ω—è—è 0.7–º–º",
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã",
            "–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è": "—à—Ç",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç \n1 –ò—Å—Ç–æ—á–Ω–∏–∫–∏": "–ö–æ–º—É—Å",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç \n2 –ò—Å—Ç–æ—á–Ω–∏–∫–∏": "–û—Ñ–∏—Å–º–∞–≥",
            "–¶–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏\n–ú–ü c –ù–î–°": "",
            "–¶–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏\nB2C c –ù–î–°": "",
            "–î–µ–ª—å—Ç–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö": "",
            "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫": "",
            "–¶–µ–Ω–∞ 2 –ø–æ–∑–∏—Ü–∏–∏\nB2C c –ù–î–°": ""
        }
    ]
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    data_dir = Path("data")
    data_dir.mkdir(exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª
    test_file_path = data_dir / "test_products.xlsx"
    df = pd.DataFrame(test_data)
    df.to_excel(test_file_path, index=False, sheet_name="–¢–æ–≤–∞—Ä—ã")
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª: {test_file_path}")
    print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç {len(test_data)} —Ç–æ–≤–∞—Ä–æ–≤")
    
    return str(test_file_path)

async def test_parse_excel_and_save():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é parse_excel_and_save_to_database."""
    print("=" * 60)
    print("–¢–ï–°–¢ –§–£–ù–ö–¶–ò–ò parse_excel_and_save_to_database")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª
        test_file_path = await create_test_excel_file()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        print("\nüìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        await initialize_components()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        from offers_check_marketplaces.server import parse_excel_and_save_to_database
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {test_file_path}")
        result = await parse_excel_and_save_to_database(
            file_path=test_file_path,
            sheet_name="–¢–æ–≤–∞—Ä—ã",
            header_row=0
        )
        
        print("\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
        print(f"   –°—Ç–∞—Ç—É—Å: {result.get('status')}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {result.get('message')}")
        
        if result.get('status') == 'success':
            print(f"   üìÅ –§–∞–π–ª: {result.get('file_path')}")
            print(f"   üìä –°—Ç—Ä–æ–∫ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ: {result.get('total_rows_parsed')}")
            print(f"   ‚ûï –¢–æ–≤–∞—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {result.get('products_created')}")
            print(f"   üîÑ –¢–æ–≤–∞—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {result.get('products_updated')}")
            print(f"   ‚úÖ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result.get('total_processed')}")
            
            if result.get('warnings'):
                print(f"   ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {len(result.get('warnings'))}")
                for warning in result.get('warnings')[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"      - {warning}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
            saved_products = result.get('products_saved', [])
            if saved_products:
                print(f"\nüì¶ –°–û–•–†–ê–ù–ï–ù–ù–´–ï –¢–û–í–ê–†–´ (–ø–µ—Ä–≤—ã–µ 3):")
                for product in saved_products[:3]:
                    print(f"   ‚Ä¢ –ö–æ–¥: {product.get('code')} | {product.get('model_name')[:50]}... | –î–µ–π—Å—Ç–≤–∏–µ: {product.get('action')}")
        
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.get('message')}")
            if result.get('errors'):
                print("   üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:")
                for error in result.get('errors')[:3]:
                    print(f"      - {error}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        print(f"\nüóÑÔ∏è  –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
        from offers_check_marketplaces.server import database_manager
        
        if database_manager:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = await database_manager.get_statistics()
            print(f"   üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ë–î: {stats.total_products}")
            print(f"   üìà –¢–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏: {stats.products_with_prices}")
            print(f"   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(stats.category_breakdown)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            if stats.category_breakdown:
                print("   üìã –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
                for category, count in list(stats.category_breakdown.items())[:3]:
                    print(f"      - {category}: {count} —Ç–æ–≤–∞—Ä–æ–≤")
        
        print("\n" + "=" * 60)
        print("–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û! ‚úÖ")
        print("=" * 60)
        
        return result
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        import traceback
        traceback.print_exc()
        return None

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ parse_excel_and_save_to_database")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ª–∏—Ü–µ–Ω–∑–∏–∏ (–¥–ª—è —Ç–µ—Å—Ç–∞)
    os.environ['OFFERS_CHECK_LICENSE_KEY'] = 'test-license-key-for-development'
    
    result = await test_parse_excel_and_save()
    
    if result and result.get('status') == 'success':
        print("\nüéâ –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å Excel —Ñ–∞–π–ª—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
    else:
        print("\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π.")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.")

if __name__ == "__main__":
    asyncio.run(main())