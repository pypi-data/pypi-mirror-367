# Reference: https://github.com/sgl-project/sglang/blob/main/docker/Dockerfile

# Known to have a better multi-node support:  https://github.com/sgl-project/sglang/pull/3457
FROM nvcr.io/nvidia/tritonserver:24.04-py3-min
# Check CUDA VERSION: https://catalog.ngc.nvidia.com/orgs/nvidia/containers/tritonserver/layers
ARG CUDA_VERSION=12.8.0

ARG BUILD_TYPE=all
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_IDENTIFIER=cu128

RUN echo 'tzdata tzdata/Areas select America' | debconf-set-selections \
    && echo 'tzdata tzdata/Zones/America select Los_Angeles' | debconf-set-selections \
    && apt update -y \
    && apt install software-properties-common -y \
    && apt install curl git sudo libibverbs-dev -y \
    && apt install -y rdma-core infiniband-diags openssh-server perftest ibverbs-providers libibumad3 libibverbs1 libnl-3-200 libnl-route-3-200 librdmacm1 \
    && rm -rf /var/lib/apt/lists/* \
    && apt clean

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
RUN uv python install 3.12

WORKDIR /sgl-workspace

COPY . .
RUN uv sync --no-dev --extra sglang --frozen --no-cache

# For openbmb/MiniCPM models
RUN uv pip install datamodel_code_generator

# Add the virtual environment created by uv to the PATH.
ENV PATH="$PATH:/sgl-workspace/.venv/bin"

ENV DEBIAN_FRONTEND=interactive
