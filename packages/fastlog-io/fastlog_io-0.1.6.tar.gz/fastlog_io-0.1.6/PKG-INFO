Metadata-Version: 2.4
Name: fastlog-io
Version: 0.1.6
Summary: loguru fast wrapping supports fastapi
Author: owq
License: MIT License
License-File: LICENSE
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: System :: Logging
Requires-Python: >=3.10
Requires-Dist: loguru>=0.7.3
Requires-Dist: nanoid>=2.0.0
Description-Content-Type: text/markdown

<p align="center">
  <br>
  <a href="https://github.com/owq-1777/fastlog-io">
  	<img src="https://img.owq.world/2025/fastlog-logo-857f7d.png" alt="FastLOG">
  </a>
</p>

<p align="center">
    <em>FastLOG is a lightweight wrapper around <a href="https://github.com/Delgan/loguru" target="_blank">Loguru</a> that offers Prometheus metrics, automatic `trace_id`, colourful output, and a deadâ€‘simple configuration API.</em>
</p>

<p align="center">
  <a href="https://opensource.org/licenses/MIT"><img src="https://img.shields.io/badge/license-MIT-_red.svg"></a>
  <a href="https://pypi.org/project/fastlog-io"><img src="https://img.shields.io/pypi/v/fastlog-io" alt="Package version"></a>
  <a href="https://pypi.org/project/fastlog-io"><img src="https://img.shields.io/pypi/status/fastlog-io" alt="Development Status"></a>
  <a href="https://pypi.org/project/fastlog-io"><img src="https://img.shields.io/pypi/pyversions/fastlog-io" alt="Supported Python versions"></a>
  <a href="https://github.com/astral-sh/ruff"><img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json" alt="Ruff"></a>
</p>


---

## âœ¨ Features

* **Zeroâ€‘config out of the box** â€“ `from fastlog-io import log; log.info("hello")` works instantly.
* **Unified interface** â€“ `configure()` + `get_log(name)` keep formatting consistent across modules.
* **Automatic `trace_id`** â€“ generates a 7â€‘char NanoID when none is bound, perfect for request tracing.
* **File rotation & retention** â€“ default `rotation="100 MB"`; tune it via `configure()`.
* **Stdlib compatibility** â€“ builtâ€‘in `reset_std_logging()` redirects the `logging` module to fastlog-io.

---

## ðŸš€ Installation

```bash
pip install fastlog-io
```

**Requirements**

* Python â‰¥ 3.12
* [loguru](https://pypi.org/project/loguru/)

---

## âš¡ Quickstart

```python
from fastlog import log, configure

# override defaults if needed
configure(level="DEBUG", log_dir="./logs")

log.info("service started")

# child logger
api_log = log.bind(name="api")
api_log.debug("new request")
```

Console output (colours stripped):

```
2025-06-21 09:57:56.510 | INFO     | app   | -cFZrY2V | main.<module>:7 | service started
2025-06-21 09:57:56.511 | DEBUG    | api   | -25bJVku | main.<module>:11 | new request
```

---

## ðŸ”§ Environment variables

| Variable       | Default   | Description                                           |
| -------------- | --------- | ----------------------------------------------------- |
| `LOG_DIR`      | *(empty)* | Log file directory; leave blank to log to stderr only |
| `LOG_LEVEL`    | `INFO`    | Minimum log level                                     |
| `LOG_ROTATION` | `100 MB`  | File rotation policy (Loguru syntax)                  |

> These can also be passed directly to `configure()` and override environment values.

---

## ðŸ›  Development & Tests (powered by [uv](https://github.com/astral-sh/uv))

```bash
# run tests in a temp venv with test extras installed
uv run --with '.[test]' pytest -q

# build wheel + sdist
uv build

# verify the built wheel in a clean env
uv run --with dist/*.whl --with pytest pytest -q
```

---

## ðŸ“„ License

[MIT](LICENSE) Â© 2025 OWQ