name: Semantic Release

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}

      - name: Evaluate | Verify upstream has NOT changed
        # Last chance to abort before causing an error as another PR/push was applied to
        # the upstream branch while this workflow was running. This is important
        # because we are committing a version change (--commit). You may omit this step
        # if you have 'commit: false' in your configuration.
        #
        # You may consider moving this to a repo script and call it from this step instead
        # of writing it in-line.
        shell: bash
        run: |
          set +o pipefail

          UPSTREAM_BRANCH_NAME="$(git status -sb | head -n 1 | cut -d' ' -f2 | grep -E '\.{3}' | cut -d'.' -f4)"
          printf '%s\n' "Upstream branch name: $UPSTREAM_BRANCH_NAME"

          set -o pipefail

          if [ -z "$UPSTREAM_BRANCH_NAME" ]; then
              printf >&2 '%s\n' "::error::Unable to determine upstream branch name!"
              exit 1
          fi

          git fetch "${UPSTREAM_BRANCH_NAME%%/*}"

          if ! UPSTREAM_SHA="$(git rev-parse "$UPSTREAM_BRANCH_NAME")"; then
              printf >&2 '%s\n' "::error::Unable to determine upstream branch sha!"
              exit 1
          fi

          HEAD_SHA="$(git rev-parse HEAD)"

          if [ "$HEAD_SHA" != "$UPSTREAM_SHA" ]; then
              printf >&2 '%s\n' "[HEAD SHA] $HEAD_SHA != $UPSTREAM_SHA [UPSTREAM SHA]"
              printf >&2 '%s\n' "::error::Upstream has changed, aborting release..."
              exit 1
          fi

          printf '%s\n' "Verified upstream branch has not changed, continuing with release..."

      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        uses: python-semantic-release/python-semantic-release@v10.3.0
        with:
          github_token: ${{ secrets.WORKFLOW_TOKEN_CLASSICAL }}
          git_committer_name: "Justyn (WORKFLOW_TOKEN)"
          git_committer_email: "matheme.justyn@gmail.com"

      # 確保版本更新後重新 checkout 最新代碼
      - name: Setup | Re-checkout after version update
        if: steps.release.outputs.released == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      # 使用 hatch 構建而非 python -m build
      - name: Publish | Build package with Hatch
        if: steps.release.outputs.released == 'true'
        run: |
          mkdir -p dist
          chmod 777 dist
          python -m pip install --upgrade pip
          pip install hatch
          echo "Building with version: $(grep '^version = ' pyproject.toml)"
          hatch build

      - name: Publish | Upload package to TestPyPI (dev branch)
        uses: pypa/gh-action-pypi-publish@v1.12.4
        if: steps.release.outputs.released == 'true' && github.ref_name == 'dev'
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          skip-existing: true
          attestations: true
          # 使用 Trusted Publishing

      - name: Publish | Upload package to PyPI (main branch)
        uses: pypa/gh-action-pypi-publish@v1.12.4
        if: steps.release.outputs.released == 'true' && github.ref_name == 'main'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          attestations: true
          # 使用 Trusted Publishing

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.2.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.WORKFLOW_TOKEN_CLASSICAL }}
          tag: ${{ steps.release.outputs.tag }}
