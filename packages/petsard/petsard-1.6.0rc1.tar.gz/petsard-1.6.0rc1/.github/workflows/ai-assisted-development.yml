name: 🤖 AI-Assisted Development Check
# AI 輔助開發檢查：確保代碼變更與功能設計文檔同步

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'petsard/**'
      - '.ai/functional_design/**'
      - 'tests/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-development-check:
    name: 🔍 AI Development Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 需要完整歷史來分析變更
          
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests
          
      - name: 🔍 Analyze Code Changes
        id: analyze
        run: |
          python .ai/scripts/development-assistant.py --mode=ci --pr-number=${{ github.event.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📝 Generate AI Development Report
        id: report
        run: |
          # 生成詳細的分析報告
          cat > ai_development_report.md << 'EOF'
          # 🤖 AI 輔助開發分析報告
          
          ## 📊 變更分析 Change Analysis
          
          **分析時間**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **PR 編號**: #${{ github.event.number }}
          **分支**: ${{ github.head_ref }}
          
          ## 🔍 檢測到的模組變更 Detected Module Changes
          
          EOF
          
          # 執行分析腳本並附加結果
          python .ai/scripts/development-assistant.py --mode=report >> ai_development_report.md
          
      - name: 💬 Comment on PR with Analysis
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('ai_development_report.md', 'utf8');
            
            // 檢查是否已有 AI 分析留言
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🤖 AI 輔助開發分析報告')
            );
            
            if (botComment) {
              // 更新現有留言
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: report
              });
            } else {
              // 創建新留言
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: report
              });
            }
            
      - name: 🚨 Check Compliance Status
        id: compliance
        run: |
          # 執行合規性檢查
          python .ai/scripts/development-assistant.py --mode=compliance --strict
          echo "compliance_status=$?" >> $GITHUB_OUTPUT
          
      - name: ❌ Fail if Non-Compliant (Optional)
        if: steps.compliance.outputs.compliance_status != '0'
        run: |
          echo "::warning::AI 輔助開發合規性檢查失敗。請檢查 PR 留言中的建議。"
          echo "::notice::這是警告模式，不會阻止 PR 合併。如需強制模式，請修改工作流程設定。"
          # exit 1  # 取消註解以啟用強制模式
          
  documentation-sync-check:
    name: 📚 Documentation Sync Check
    runs-on: ubuntu-latest
    needs: ai-development-check
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Check Documentation Sync
        run: |
          # 檢查功能設計文檔是否需要更新
          changed_files=$(git diff --name-only origin/main...HEAD)

          echo "## 📋 文檔同步檢查結果" >> doc_sync_report.md
          echo "" >> doc_sync_report.md

          # 檢查各模組的變更
          for module in loader metadater evaluator system; do
            if echo "$changed_files" | grep -q "petsard/$module/"; then
              echo "### 🔄 $module 模組已變更" >> doc_sync_report.md
              echo "- **對應文檔**: [.ai/functional_design/$module.md](.ai/functional_design/$module.md)" >> doc_sync_report.md
              echo "- **建議動作**: 請檢查並更新功能設計文檔" >> doc_sync_report.md
              echo "" >> doc_sync_report.md
            fi
          done
          
      - name: 💬 Add Documentation Sync Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('doc_sync_report.md')) {
              const report = fs.readFileSync('doc_sync_report.md', 'utf8');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## 📚 文檔同步提醒\n\n${report}\n\n---\n*此留言由 AI 輔助開發系統自動生成*`
              });
            }