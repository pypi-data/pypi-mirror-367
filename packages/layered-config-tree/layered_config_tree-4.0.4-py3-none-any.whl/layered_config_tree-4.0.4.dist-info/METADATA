Metadata-Version: 2.4
Name: layered_config_tree
Version: 4.0.4
Summary: Layered Config Tree is a configuration structure which supports cascading layers.
Home-page: https://github.com/ihmeuw/layered_config_tree
Author: The vivarium developers
Author-email: vivarium.dev@gmail.com
License: BSD-3-Clause
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: BSD
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Software Development :: Libraries
License-File: LICENSE.txt
Requires-Dist: vivarium_dependencies[pyyaml]
Requires-Dist: vivarium_build_utils<3.0.0,>=2.0.1
Provides-Extra: docs
Requires-Dist: vivarium_dependencies[ipython,matplotlib,sphinx,sphinx-click]; extra == "docs"
Requires-Dist: sphinxcontrib-video; extra == "docs"
Provides-Extra: interactive
Requires-Dist: vivarium_dependencies[interactive]; extra == "interactive"
Provides-Extra: test
Requires-Dist: vivarium_dependencies[pytest]; extra == "test"
Provides-Extra: dev
Requires-Dist: vivarium_dependencies[ipython,matplotlib,sphinx,sphinx-click]; extra == "dev"
Requires-Dist: sphinxcontrib-video; extra == "dev"
Requires-Dist: vivarium_dependencies[interactive]; extra == "dev"
Requires-Dist: vivarium_dependencies[pytest]; extra == "dev"
Requires-Dist: vivarium_dependencies[lint]; extra == "dev"
Requires-Dist: types-setuptools; extra == "dev"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: summary

===================
Layered Config Tree
===================

Layered Config Tree is a configuration structure that supports cascading layers.

**Supported Python versions: 3.10, 3.11**

You can install ``layered_config_tree`` from PyPI with pip:

  ``> pip install layered_config_tree``

or build it from from source:

  ``> git clone https://github.com/ihmeuw/layered_config_tree.git``

  ``> cd layered_config_tree``

  ``> conda create -n ENVIRONMENT_NAME python=3.11``

  ``> pip install .``

This will make the ``layered_config_tree`` library available to python.
