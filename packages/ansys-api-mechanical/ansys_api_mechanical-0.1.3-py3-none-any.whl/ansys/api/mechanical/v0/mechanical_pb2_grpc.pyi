"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.mechanical.v0.mechanical_pb2
import grpc
import typing

class MechanicalServiceStub:
    """Interface of the Mechanical grpc service."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    RunJScript: grpc.UnaryStreamMultiCallable[
        ansys.api.mechanical.v0.mechanical_pb2.RunScriptRequest,
        ansys.api.mechanical.v0.mechanical_pb2.RunScriptResponse] = ...
    """Run jscript block."""

    RunPythonScript: grpc.UnaryStreamMultiCallable[
        ansys.api.mechanical.v0.mechanical_pb2.RunScriptRequest,
        ansys.api.mechanical.v0.mechanical_pb2.RunScriptResponse] = ...
    """Run python script block."""

    Shutdown: grpc.UnaryUnaryMultiCallable[
        ansys.api.mechanical.v0.mechanical_pb2.ShutdownRequest,
        ansys.api.mechanical.v0.mechanical_pb2.ShutdownResponse] = ...
    """Exit Mechanical."""

    UploadFile: grpc.StreamUnaryMultiCallable[
        ansys.api.mechanical.v0.mechanical_pb2.FileUploadRequest,
        ansys.api.mechanical.v0.mechanical_pb2.FileUploadResponse] = ...
    """Upload file to Mechanical grpc server."""

    DownloadFile: grpc.UnaryStreamMultiCallable[
        ansys.api.mechanical.v0.mechanical_pb2.FileDownloadRequest,
        ansys.api.mechanical.v0.mechanical_pb2.FileDownloadResponse] = ...
    """Download file from Mechanical grpc server."""


class MechanicalServiceServicer(metaclass=abc.ABCMeta):
    """Interface of the Mechanical grpc service."""
    @abc.abstractmethod
    def RunJScript(self,
        request: ansys.api.mechanical.v0.mechanical_pb2.RunScriptRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.mechanical.v0.mechanical_pb2.RunScriptResponse]:
        """Run jscript block."""
        pass

    @abc.abstractmethod
    def RunPythonScript(self,
        request: ansys.api.mechanical.v0.mechanical_pb2.RunScriptRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.mechanical.v0.mechanical_pb2.RunScriptResponse]:
        """Run python script block."""
        pass

    @abc.abstractmethod
    def Shutdown(self,
        request: ansys.api.mechanical.v0.mechanical_pb2.ShutdownRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.mechanical.v0.mechanical_pb2.ShutdownResponse:
        """Exit Mechanical."""
        pass

    @abc.abstractmethod
    def UploadFile(self,
        request: typing.Iterator[ansys.api.mechanical.v0.mechanical_pb2.FileUploadRequest],
        context: grpc.ServicerContext,
    ) -> ansys.api.mechanical.v0.mechanical_pb2.FileUploadResponse:
        """Upload file to Mechanical grpc server."""
        pass

    @abc.abstractmethod
    def DownloadFile(self,
        request: ansys.api.mechanical.v0.mechanical_pb2.FileDownloadRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.mechanical.v0.mechanical_pb2.FileDownloadResponse]:
        """Download file from Mechanical grpc server."""
        pass


def add_MechanicalServiceServicer_to_server(servicer: MechanicalServiceServicer, server: grpc.Server) -> None: ...
