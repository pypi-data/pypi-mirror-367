# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
      - "main" 
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest] # Uncomment windows-latest if you want to test on Windows
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -e .
    - name: Build wheel
      run: maturin build --release
      
    - name: Publish to PyPI (Linux and macOS)
      if: startsWith(github.ref, 'refs/tags/v') && matrix.os != 'windows-latest'
      env:
        MATURIN_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: maturin publish --username __token__ --password $MATURIN_PASSWORD

    - name: Publish to PyPI (Windows)
      if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'windows-latest'
      env:
        MATURIN_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: maturin publish --username __token__ --password $env:MATURIN_PASSWORD
      shell: pwsh

    - name: Run tests
      run: coverage run --source=src -m pytest --color=yes tests/ -v 

    - name: clean up
      if: always()
      run: |
        echo "Cleaning up..."
        rm -rf target
        rm -rf .maturin
        rm -rf .cache
        rm -rf .pytest_cache
        rm -rf .coverage
        rm -rf .venv
        echo "Cleanup complete."
