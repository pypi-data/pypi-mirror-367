[build-system]
requires = ["hatchling>=1.20"]
build-backend = "hatchling.build"

[project]
name = "pytestlab"
description = "Scientific test & measurement toolbox"
authors = [{ name = "Emmanuel Olowe", email = "e.a.olowe@ed.ac.uk" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["version"]
dependencies = [
    "numpy",
    "polars",
    "pyvisa",
    "pydantic",
    "uncertainties",
    "cryptography",
    "pyyaml",
    "tqdm",
    "pyscpi",
    "requests",
    "pyusb",
    "httpx",
    "aiofiles",
    "typer",
    "Pillow",
]

[tool.hatch.version]
path = "pytestlab/__init__.py"

[project.optional-dependencies]
docs = [
    "ghp-import>=2.1.0",
    "matplotlib>=3.10.3",
    "mkdocs-autorefs>=1.4.2",
    "mkdocs-awesome-pages-plugin>=2.10.1",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-i18n>=0.4.6",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material-extensions>=1.3.1",
    "mkdocs-material>=9.6.15",
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.29.1",
    "plotly>=6.2.0",
    "pymdown-extensions>=10.16",
    "watchdog>=6.0.0",
]
plot = ["matplotlib", "plotly"]
full = ["pytestlab[plot]", "uncertainties", "pydantic", "pyvisa-sim"]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "pre-commit",
    "httpx",
    "aiofiles",
]

[project.scripts]
pytestlab = "pytestlab.cli:main"
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.5"
version_files = [
    "pytestlab/__init__.py:__version__", # For __version__ = "..."
]
tag_format = "v$version"
update_changelog_on_bump = true
major_version_zero = true
[tool.hatch.build]
# Explicitly exclude the tests directory if it's part of the pytestlab source package
exclude = [
    "/pytestlab/tests", # Ensure this path correctly targets tests within the package
    # "/examples", # Top-level examples are not included by `packages = ["pytestlab"]`
    # "/docs"      # Docs are not typically included in wheels
]
[tool.hatch.build.targets.wheel]
packages = ["pytestlab"]
[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.ruff]
line-length = 100
select = [
    "E",
    "F",
    "I",
    "UP",
    "B",
] # Common selections: E/W (pycodestyle), F (Pyflakes), I (isort), UP (pyupgrade), B (flake8-bugbear)
ignore = [
    "E501",
] # Ignore line too long if line-length is managed by formatter or selectively

[tool.ruff.lint] # Specific lint settings
select = [
    "E",
    "F",
    "I",
    "UP",
    "B",
] # Repeat or refine selection for lint explicitly
ignore = ["E501"]

[tool.ruff.lint.isort] # isort specific settings if using ruff for import sorting
force-single-line = true
# known-first-party = ["pytestlab"] # Helps isort group project imports

[tool.ruff.format]
quote-style = "double"
# Other formatting options as desired

[tool.coverage.run]
branch = true
