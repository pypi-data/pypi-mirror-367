[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "efficientllm-toolkit"
version = "1.0.3"
authors = [
    {name = "EfficientLLM Team", email = "contact@efficientllm.ai"},
]
description = "A Comprehensive Benchmark for Large Language Model Efficiency"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "large language models", 
    "efficiency", 
    "benchmark", 
    "attention mechanisms", 
    "transformers", 
    "mamba", 
    "rwkv"
]
dependencies = [
    "torch>=1.12.0",
    "transformers>=4.21.0",
    "datasets>=2.0.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "accelerate>=0.20.0",
    "deepspeed>=0.9.0",
    "tensorboard>=2.8.0",
    "wandb>=0.13.0",
    "evaluate>=0.4.0",
    "scikit-learn>=1.0.0",
    "seaborn>=0.11.0",
    "matplotlib>=3.5.0",
    "tokenizers>=0.13.0",
    "sentencepiece>=0.1.96",
    "protobuf>=3.20.0",
    "psutil>=5.8.0",
    "pynvml>=11.4.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "jsonlines>=3.0.0",
    "llamafactory>=0.7.0",
    "lm_eval>=0.4.0",
]

[project.urls]
Homepage = "https://github.com/efficientllm/efficientllm"
Documentation = "https://efficientllm.readthedocs.io/"
Repository = "https://github.com/efficientllm/efficientllm"
"Bug Tracker" = "https://github.com/efficientllm/efficientllm/issues"

[project.optional-dependencies]
megatron = [
    "megatron-core[dev]>=0.7.0",
    "apex>=0.1",
]
mamba = [
    "mamba-ssm>=1.2.0",
    "causal-conv1d>=1.4.0",
]
rwkv = [
    "rwkv>=0.8.0",
]
quantization = [
    "bitsandbytes>=0.41.0",
    "auto-gptq>=0.4.0",
    "optimum>=1.12.0",
]
inference = [
    "vllm>=0.2.0",
    "text-generation-inference>=1.0.0",
]
dev = [
    "pytest>=7.1.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
all = [
    "megatron-core[dev]>=0.7.0",
    "apex>=0.1",
    "mamba-ssm>=1.2.0",
    "causal-conv1d>=1.4.0",
    "rwkv>=0.8.0",
    "bitsandbytes>=0.41.0",
    "auto-gptq>=0.4.0",
    "optimum>=1.12.0",
    "vllm>=0.2.0",
    "text-generation-inference>=1.0.0",
]

[project.scripts]
efficientllm = "efficientllm.cli:main"
efficientllm-pretrain = "efficientllm.cli.pretrain:main"
efficientllm-finetune = "efficientllm.cli.finetune:main"
efficientllm-eval = "efficientllm.cli.evaluation:main"
efficientllm-benchmark = "efficientllm.cli.benchmark:main"

[tool.setuptools]
packages = ["efficientllm"]

[tool.setuptools.package-data]
efficientllm = [
    "configs/**/*.yaml",
    "configs/**/*.json", 
    "scripts/**/*.sh",
    "templates/**/*.py",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["efficientllm"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"