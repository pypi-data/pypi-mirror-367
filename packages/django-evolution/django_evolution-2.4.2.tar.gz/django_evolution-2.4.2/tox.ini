# Some tips for usage.
#
# 1) To test all supported versions of Python and Django together, run:
#
#    $ tox
#
#    # Or with a database other than sqlite3:
#    $ tox -e <dbname>
#
# 2) To test a specific Python/Django combination:
#
#    $ tox -e pyXY-djangoX_Y
#
#    # Or with a specific database:
#    $ tox -e pyXY-djangoX_Y-<dbname>
#
# 3) To test all versions of Python (without the Django compatibility matrix):
#
#    $ tox -e pythons
#
# 4) To test all versions of Django (without the Python version matrix):
#
#    $ tox -e djangos
#
# 5) To test a specific database against all versions of Django:
#
#    $ tox -e dbtests-<dbname>
#
# 6) To test the latest configured version of a database type against all
#    versions of Django:
#
#    $ tox -e dbtests-newest
#
# 6) To test the oldest and latest versions of all supported databases against
#    all versions of Django:
#
#    $ tox -e dbtests-minmax
#
# 5) To test all databases against all versions of Django (this will take a
#    very long time):
#
#    $ tox -e dbtests-all
#
# Built-in database names are:
#
#    mariadb
#    mysql5_7
#    mysql5_8
#    mysql8
#    postgres11_8
#    postgres12
#    postgres13
#    postgres14
#    sqlite3

[tox]
envlist = py27-django{1_6,1_7,1_8,1_9,1_10,1_11},
          py{36,37,38,39,310,311}-django{1_11,2_0,2_1,2_2,3_0,3_1},
          py{38,39,310,311,312}-django{3_2,4_0,4_1,4_2}

skipsdist = True

# We need to use an older virtualenv to test older versions of Python.
requires = virtualenv<20.22.0

[testenv]
usedevelop = True
commands =
    {envbindir}/pytest --db={env:DATABASE_NAME:sqlite3} {posargs}

allowlist_externals = tox

deps =
    -r dev-requirements.txt
    Django~={env:DJANGO_VERSION}.0
    {env:PSYCOPG2_DEP:psycopg2-binary}

passenv =
    DATABASE_MYSQL_STORAGE_ENGINE
    DATABASE_NAME
    DJANGO_VERSION
    PYTHON_VERSION

setenv =
    # Python versions:
    py27: PYTHON_VERSION=2.7
    py36: PYTHON_VERSION=3.6
    py37: PYTHON_VERSION=3.7
    py38: PYTHON_VERSION=3.8
    py39: PYTHON_VERSION=3.9
    py310: PYTHON_VERSION=3.10
    py311: PYTHON_VERSION=3.11
    py312: PYTHON_VERSION=3.12

    # Django versions:
    django1_6: DJANGO_VERSION=1.6
    django1_7: DJANGO_VERSION=1.7
    django1_8: DJANGO_VERSION=1.8
    django1_9: DJANGO_VERSION=1.9
    django1_10: DJANGO_VERSION=1.10
    django1_11: DJANGO_VERSION=1.11
    django2_0: DJANGO_VERSION=2.0
    django2_1: DJANGO_VERSION=2.1
    django2_2: DJANGO_VERSION=2.2
    django3_0: DJANGO_VERSION=3.0
    django3_1: DJANGO_VERSION=3.1
    django3_2: DJANGO_VERSION=3.2
    django4_0: DJANGO_VERSION=4.0
    django4_1: DJANGO_VERSION=4.1
    django4_2: DJANGO_VERSION=4.2

    # Databases:
    sqlite3: DATABASE_NAME=sqlite3
    mysql5_6: DATABASE_NAME=mysql56
    mysql5_6: DATABASE_NAME=mysql56
    mysql5_7: DATABASE_NAME=mysql57
    mysql8: DATABASE_NAME=mysql8
    mariadb: DATABASE_NAME=mariadb
    postgres11_8: DATABASE_NAME=postgres11.8
    postgres12: DATABASE_NAME=postgres12
    postgres13: DATABASE_NAME=postgres13
    postgres14: DATABASE_NAME=postgres14
    postgres15: DATABASE_NAME=postgres15

    # psycopg2 dependencies
    django1_11: PSYCOPG2_DEP=psycopg2-binary~=2.8.6
    django2_0: PSYCOPG2_DEP=psycopg2-binary~=2.8.6
    django2_1: PSYCOPG2_DEP=psycopg2-binary~=2.8.6
    django2_2: PSYCOPG2_DEP=psycopg2-binary~=2.8.6
    django3_0: PSYCOPG2_DEP=psycopg2-binary~=2.8.6


# Constants defining environments useful for wrapper environments.
[consts]
django_only_envs =
    py27-django1_6,\
    py27-django1_7,\
    py27-django1_8,\
    py27-django1_9,\
    py27-django1_10,\
    py39-django1_11,\
    py39-django2_0,\
    py39-django2_1,\
    py39-django2_2,\
    py310-django3_0,\
    py310-django3_1,\
    py310-django3_2,\
    py310-django4_0,\
    py310-django4_1

python_only_envs =
    py27-django1_11,\
    py36-django1_11,\
    py37-django3_2,\
    py38-django3_2,\
    py39-django3_2,\
    py310-django3_2,\
    py311-django3_2,\
    py312-django3_2

db_tests = {[consts]django_only_envs}


# Common definitions for wrapping calls to tox.
[wrap_tox]
envdir = {toxworkdir}/wrap-tox
deps =
setenv = {[testenv]setenv}
passenv = {[testenv]passenv}
commands = tox {posargs}


###########################################################################
# Python/Django matrix test environments.
#
# Each will be tested against SQLite by default, unless passing in a specific
# database.
###########################################################################

# Environment for testing all Python versions without a Django matrix.
[testenv:pythons]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "{[consts]python_only_envs}" -- {posargs}


# Environment for testing all Django versions without a Python matrix.
[testenv:djangos]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "{[consts]django_only_envs}" -- {posargs}


###########################################################################
# Database matrix test environments.
#
# Each will be tested against all versions of Django, but without testing
# against all versions of Python.
#
# These depend on the databases defined in tests/docker-compose.yaml.
###########################################################################

# SQLite-specific dbtests-* environments.
[testenv:dbtests-sqlite3]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "{[consts]db_tests}" -- {posargs}


# MySQL/MariaDB-specific dbtests-* environments.
[testenv:dbtests-{mysql5_6,mysql5_7,mysql8,mariadb}]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "{[consts]db_tests}" {posargs}


# MySQL/MariaDB-specific dbtests-* environments with database storage backend.
[testenv:dbtests-{mysql5_6,mysql5_7,mysql8,mariadb}-{myisam,innodb}]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv =
    {[wrap_tox]setenv}
    myisam: DATABASE_MYSQL_STORAGE_ENGINE=MyISAM
    innodb: DATABASE_MYSQL_STORAGE_ENGINE=INNODB

commands = tox -e "{[consts]db_tests}" -- {posargs}


# Postgres-specific dbtests-* environments.
[testenv:dbtests-{postgres11_8,postgres12,postgres13,postgres14}]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "{[consts]db_tests}" -- {posargs}


# Environment for testing all the newest versions of databases.
[testenv:dbtests-newest]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "\
    dbtests-sqlite3,\
    dbtests-mysql8,\
    dbtests-mariadb,\
    dbtests-postgres14" \
    -- {posargs}


# Environment for testing the oldest and newest versions of databases.
[testenv:dbtests-minmax]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "\
    dbtests-sqlite3,\
    dbtests-mysql5_6,\
    dbtests-mysql8,\
    dbtests-mariadb,\
    dbtests-postgres11_8,\
    dbtests-postgres14" \
    -- {posargs}


# Environment for testing all databases.
[testenv:dbtests-all]
envdir = {[wrap_tox]envdir}
deps = {[wrap_tox]deps}
setenv = {[wrap_tox]setenv}
commands = tox -e "\
    dbtests-sqlite3,\
    dbtests-mysql5_6,\
    dbtests-mysql5_7,\
    dbtests-mysql8,\
    dbtests-postgres11_8,\
    dbtests-postgres12,\
    dbtests-postgres13,\
    dbtests-postgres14" \
    -- {posargs}
