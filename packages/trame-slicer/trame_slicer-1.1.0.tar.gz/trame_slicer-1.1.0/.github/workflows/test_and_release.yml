name: Test and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Install and run pre-commit
      - run: |
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files

  semantic-release-dry-run:
    needs: [pre-commit]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          fetch-depth: 0

      - name: Replace branch in pyproject.toml
        run: |
          BRANCH="${{ github.head_ref || github.ref_name }}"
          sed -i "s/\(main\|master\)/$BRANCH/g" pyproject.toml

      - name: Python Semantic Release (Dry Run)
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          no_operation_mode: true
          changelog: true

      - name: Echo changelog contents
        run: cat CHANGELOG.md

  pytest:
    if: false # Test running currently deactivated as it requires slicer lib wheel generation for each target
    name: Pytest ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.13"]
        config:
          - { name: "Linux", os: ubuntu-latest }
          - { name: "MacOSX", os: macos-latest }
          - { name: "Windows", os: windows-latest }

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and Run Tests
        run: |
          pip install .[dev]
          pytest -s ./tests

  release:
    needs: [pre-commit]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment:
      name: pypi
      url: https://pypi.org/p/trame-slicer
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
      contents: write # IMPORTANT: mandatory for making GitHub Releases

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog: true

      # https://docs.pypi.org/trusted-publishers/using-a-publisher/
      - name: Publish package distributions to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
