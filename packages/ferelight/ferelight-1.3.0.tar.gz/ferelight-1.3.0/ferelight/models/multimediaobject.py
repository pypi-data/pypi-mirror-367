from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ferelight.models.base_model import Model
from ferelight import util


class Multimediaobject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, objectid=None, mediatype=None, name=None, path=None):  # noqa: E501
        """Multimediaobject - a model defined in OpenAPI

        :param objectid: The objectid of this Multimediaobject.  # noqa: E501
        :type objectid: str
        :param mediatype: The mediatype of this Multimediaobject.  # noqa: E501
        :type mediatype: int
        :param name: The name of this Multimediaobject.  # noqa: E501
        :type name: str
        :param path: The path of this Multimediaobject.  # noqa: E501
        :type path: str
        """
        self.openapi_types = {
            'objectid': str,
            'mediatype': int,
            'name': str,
            'path': str
        }

        self.attribute_map = {
            'objectid': 'objectid',
            'mediatype': 'mediatype',
            'name': 'name',
            'path': 'path'
        }

        self._objectid = objectid
        self._mediatype = mediatype
        self._name = name
        self._path = path

    @classmethod
    def from_dict(cls, dikt) -> 'Multimediaobject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The multimediaobject of this Multimediaobject.  # noqa: E501
        :rtype: Multimediaobject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def objectid(self) -> str:
        """Gets the objectid of this Multimediaobject.

        The unique identifier of the object.  # noqa: E501

        :return: The objectid of this Multimediaobject.
        :rtype: str
        """
        return self._objectid

    @objectid.setter
    def objectid(self, objectid: str):
        """Sets the objectid of this Multimediaobject.

        The unique identifier of the object.  # noqa: E501

        :param objectid: The objectid of this Multimediaobject.
        :type objectid: str
        """

        self._objectid = objectid

    @property
    def mediatype(self) -> int:
        """Gets the mediatype of this Multimediaobject.

        The mediatype enum value of the object.  # noqa: E501

        :return: The mediatype of this Multimediaobject.
        :rtype: int
        """
        return self._mediatype

    @mediatype.setter
    def mediatype(self, mediatype: int):
        """Sets the mediatype of this Multimediaobject.

        The mediatype enum value of the object.  # noqa: E501

        :param mediatype: The mediatype of this Multimediaobject.
        :type mediatype: int
        """

        self._mediatype = mediatype

    @property
    def name(self) -> str:
        """Gets the name of this Multimediaobject.

        The name of the object.  # noqa: E501

        :return: The name of this Multimediaobject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Multimediaobject.

        The name of the object.  # noqa: E501

        :param name: The name of this Multimediaobject.
        :type name: str
        """

        self._name = name

    @property
    def path(self) -> str:
        """Gets the path of this Multimediaobject.

        The path of the object.  # noqa: E501

        :return: The path of this Multimediaobject.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this Multimediaobject.

        The path of the object.  # noqa: E501

        :param path: The path of this Multimediaobject.
        :type path: str
        """

        self._path = path
