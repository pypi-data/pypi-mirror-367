"""
This module contains the functions that are necessary to handle the lock file, tracking changes in pyHarm projects.
"""

import os
import pyHarm
import hashlib
from pyHarm_cli.commands._commands_variables import LOCK_FILE_NAME
import hashlib
import json

_NEW_LOCK_FILE_HEADER = f"""
# This file is automatically generated by pyHarm CLI tool using pyHarm version {pyHarm.__version__}
"""

def _new_lock_file(project_name:str, hash_dict: dict[str:str]) -> None : 
    pyHarm_lock_file = os.path.join(project_name, LOCK_FILE_NAME)
    with open(pyHarm_lock_file, "w", encoding='utf-8') as lock_file:
        json.dump(hash_dict, lock_file, indent=4)
    pass

def _hash_template_files(template_files: list[str]) -> dict[str:str]:
    """Generate a SHA-256 hash of a file."""
    hash_dict = dict()
    for file in template_files : 
        hasher = hashlib.sha256()
        with open(file, 'rb') as f:
            buf = f.read()
            hasher.update(buf)
            hash_dict[file] = hasher.hexdigest()
    return hash_dict