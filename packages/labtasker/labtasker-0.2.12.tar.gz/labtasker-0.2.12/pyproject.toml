[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "labtasker"
version = "0.2.12"
description = "A task queue system for lab experiments"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
license = { text = "Apache License 2.0" }
readme = "README.md"
requires-python = ">=3.10,<4.0"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "pymongo (>=4.0.0,<5.0.0)",
    "fastapi (>=0.115.0,<0.117.0)",
    "uvicorn[standard] (>=0.15.0,<0.36.0)",
    "click (>=8.2.0,<9.0.0)",
    "passlib (>=1.7.0,<2.0.0)",
    "pydantic-settings (>=2.8.0,<3.0.0)",
    "httpx[socks] (>=0.28.0,<0.29.0)",
    "typer (>=0.16.0,<0.17.0)",
    "loguru (>=0.7.0,<0.8.0)",
    "ruamel-yaml (>=0.18.10,<0.19.0)",
    "pyyaml (>=6.0.0,<7.0.0)",
    "tomlkit (>=0.13.2,<0.14.0)",
    "importlib-metadata (>=8.5.0,<9.0.0)",
    "packaging (>=24.2,<26.0)",
    "sse-starlette (>=2.1.3,<4.0.0)",
    "httpx-sse (>=0.4.0,<0.5.0)",
    "stamina (>=25.1.0,<26.0.0)",
    "noneprompt (>=0.1.9,<0.2.0)",
    "mongomock (>=4.3.0,<4.4.0)",
    "jsonpickle (>=4.0.2,<5.0.0)",
    "mslex (>=1.3.0,<2.0.0)",
    "pexpect (>=4.9.0,<5.0.0)",
    "pip (>=25)",
    "dateparser (>=1.2.2,<2.0.0)",
]

[project.optional-dependencies]
dev = [
    "pytest (>=8.0.0,<9.0.0)",
    "pytest-cov (>=5.0.0,<7.0.0)",
    "black (>=24.0.0,<26.0.0)",
    "isort (>=5.13.0,<7.0.0)",
    "mypy (>=1.14.0,<2.0.0)",
    "flake8 (>=7.0.0,<8.0.0)",
    "pre-commit (>=3.0.0,<5.0.0)",
    "freezegun (>=1.5.0,<2.0.0)",
    "pytest-docker (>=3.0.0,<4.0.0)",
    "pytest-asyncio (>=0.24.0,<1.2.0)",
    "asgi-lifespan (>=2.1.0,<3.0.0)",
    "tox (>=4.24.0,<4.29.0)",
    "pytest-dependency (>=0.6.0,<0.7.0)",
    "pytest-sugar (>=1.0.0,<2.0.0)",
    "rust-just (>=1.42.4,<2.0.0)",
]
doc = [
    "mkdocs-material (>=9.6.5,<9.7.0)",
    "mkdocs-glightbox (>=0.4.0,<0.5.0)",
    "mike (>=2.1.3,<2.2.0)",
]

plugins = [
    "labtasker-plugin-task-count",
    "labtasker-plugin-script-generate",
    "labtasker-plugin-task-recency",
]

[project.urls]
Homepage = "https://github.com/luocfprime/labtasker"
Documentation = "https://luocfprime.github.io/labtasker"
Repository = "https://github.com/luocfprime/labtasker.git"

[project.scripts]
labtasker = "labtasker.__main__:main"
lt = "labtasker.__main__:main"  # short aliass
labtasker-server = "labtasker.server.cli:main"

[tool.setuptools]
packages = ["labtasker"]

[tool.black]
line-length = 88
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | vendor
  | generated
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["labtasker"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip = [
    ".git",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    "labtasker/vendor",
    "labtasker/client/core/cmd_parser/generated"
]

[tool.mypy]
disable_error_code = [
    "var-annotated",
    "no-redef",
    "import-untyped"
]
warn_unused_configs = true
ignore_missing_imports = true
show_error_codes = true

disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
disallow_untyped_calls = false
warn_return_any = false
warn_no_return = false
warn_unused_ignores = false

disallow_subclassing_any = false
disallow_any_generics = false

files = ["labtasker"]

[[tool.mypy.overrides]]
module = "labtasker.client.core.cmd_parser.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "labtasker.vendor.*"
ignore_errors = true

# Add this for Typer-specific code
[[tool.mypy.overrides]]
module = "labtasker.client.cli.*"
disallow_untyped_defs = false
check_untyped_defs = false
disable_error_code = ["arg-type", "assignment"]

# If you're using Rich features from Typer
[[tool.mypy.overrides]]
module = "rich.*"
ignore_missing_imports = true
