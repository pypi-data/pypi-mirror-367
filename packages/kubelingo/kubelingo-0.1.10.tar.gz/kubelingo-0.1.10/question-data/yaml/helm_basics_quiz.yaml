questions:
  - id: helm-q1
    category: "Helm Basics"
    prompt: "What is the command to create a basic Helm chart?"
    response: "helm create my-chart"
    explanation: |
      Use `helm create <chart-name>` to create a new Helm chart with a default structure. For example, `helm create my-chart` creates a directory named `my-chart` with the necessary files.
    links:
      - https://helm.sh/docs/helm/helm_create/
  - id: helm-q2
    category: "Helm Basics"
    prompt: "How do you install a Helm chart from a local directory?"
    response: "helm install my-release ./my-chart"
    explanation: |
      Use `helm install <release-name> <chart-path>` to deploy an application. For example, `helm install my-release ./my-chart` installs the chart located in the `./my-chart` directory with the release name `my-release`.
    links:
      - https://helm.sh/docs/helm/helm_install/
  - id: helm-q3
    category: "Helm Basics"
    prompt: "How do you find all pending Helm deployments across all namespaces?"
    response: "helm list --pending -A"
    explanation: |
      To list all pending Helm releases in every namespace, run `helm list --pending -A`. The `-A` or `--all-namespaces` flag is used to list releases across all namespaces.
    links:
      - https://helm.sh/docs/helm/helm_list/
  - id: helm-q4
    category: "Helm Basics"
    prompt: "How can you uninstall a Helm release?"
    response: "helm uninstall my-release"
    explanation: |
      To uninstall a release, use `helm uninstall <release_name>`. If the release is in another namespace, use the `-n <namespace>` flag. This removes all Kubernetes resources associated with the release.
    links:
      - https://helm.sh/docs/helm/helm_uninstall/
  - id: helm-q5
    category: "Helm Basics"
    prompt: "What is the command to upgrade a Helm release?"
    response: "helm upgrade my-release ./my-chart"
    explanation: |
      To upgrade a release, use `helm upgrade <release_name> <chart-path>`. This command can be used to apply a new chart version or to change configuration values. You can pass multiple values files with `-f`.
    links:
      - https://helm.sh/docs/helm/helm_upgrade/
  - id: helm-q6
    category: "Helm Repositories"
    prompt: "What command is used to add a Helm chart repository?"
    response: "helm repo add stable https://charts.helm.sh/stable"
    explanation: |
      `helm repo add [NAME] [URL]` is used to add a new chart repository.
    links:
      - https://helm.sh/docs/helm/helm_repo/
  - id: helm-q7
    category: "Helm Repositories"
    prompt: "What command is used to list configured Helm chart repositories?"
    response: "helm repo list"
    explanation: |
      `helm repo list` (or `ls`) is used to list all configured chart repositories.
    links:
      - https://helm.sh/docs/helm/helm_repo/
  - id: helm-q8
    category: "Helm Repositories"
    prompt: "What command is used to remove a Helm chart repository?"
    response: "helm repo remove stable"
    explanation: |
      `helm repo remove [REPO]` is used to remove one or more chart repositories.
    links:
      - https://helm.sh/docs/helm/helm_repo/
  - id: helm-q9
    category: "Helm Repositories"
    prompt: "What command is used to update information from chart repositories?"
    response: "helm repo update"
    explanation: |
      `helm repo update` (or `up`) is used to fetch the latest information from all configured chart repositories.
    links:
      - https://helm.sh/docs/helm/helm_repo/
  - id: helm-q10
    category: "Helm Repositories"
    prompt: "What command is used to generate an index file for a chart repository?"
    response: "helm repo index ."
    explanation: |
      `helm repo index [DIR]` generates an `index.yaml` file for a directory containing packaged charts, making it a valid chart repository.
    links:
      - https://helm.sh/docs/helm/helm_repo/
  - id: helm-q11
    category: "Helm Basics"
    prompt: "What command downloads a Helm chart from a repository without installing it?"
    response: "helm pull bitnami/wordpress"
    explanation: |
      Use `helm pull [repo/chartname]` to download a chart to your local directory. Use the `--untar` flag to extract the chart after downloading.
    links:
      - https://helm.sh/docs/helm/helm_pull/
  - id: helm-q12
    category: "Helm Repositories"
    prompt: "How do you add the Bitnami chart repository to Helm?"
    response: "helm repo add bitnami https://charts.bitnami.com/bitnami"
    explanation: |
      Add the Bitnami repo with: `helm repo add bitnami https://charts.bitnami.com/bitnami`.
    links:
      - https://artifacthub.io/packages/helm/bitnami/node
  - id: helm-q13
    category: "Helm Basics"
    prompt: "How do you print the contents of the values.yaml for the `bitnami/node` chart?"
    response: "helm show values bitnami/node"
    explanation: |
      `helm show values <chart>` displays the contents of the `values.yaml` file for a given chart. For example: `helm show values bitnami/node`.
    links:
      - https://helm.sh/docs/helm/helm_show/
  - id: helm-q14
    category: "Helm Basics"
    prompt: "How do you install the `bitnami/node` chart with a specific number of replicas (e.g., 5)?"
    response: "helm install my-node bitnami/node --set replicaCount=5"
    explanation: |
      You can override values in a chart's `values.yaml` file at installation time using the `--set` flag. First, find the relevant key (e.g., with `helm show values bitnami/node | grep -i replica`). Then, install the chart with the override: `helm install my-node bitnami/node --set replicaCount=5`.
    links:
      - https://artifacthub.io/packages/helm/bitnami/node
      - https://helm.sh/docs/helm/helm_install/
