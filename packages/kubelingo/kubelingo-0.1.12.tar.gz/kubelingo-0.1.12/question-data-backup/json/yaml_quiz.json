[
  {
    "prompt": "In namespace limit create a Pod named resource-checker using image httpd:alpine with container name my-container; requests: cpu=30m, memory=30Mi; limits: cpu=300m, memory=30Mi.",
    "answer": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-checker\n  namespace: limit\nspec:\n  containers:\n  - name: my-container\n    image: httpd:alpine\n    resources:\n      requests:\n        cpu: 30m\n        memory: 30Mi\n      limits:\n        cpu: 300m\n        memory: 30Mi"
  },
  {
    "prompt": "Create a ConfigMap named trauerweide with data tree=trauerweide.",
    "answer": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: trauerweide\ndata:\n  tree: trauerweide"
  },
  {
    "prompt": "Create a Pod named pod1 using image nginx:alpine with env var TREE1 from ConfigMap trauerweide:key=tree and mount all keys of ConfigMap birke under /etc/birke.",
    "answer": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\nspec:\n  containers:\n  - name: nginx\n    image: nginx:alpine\n    env:\n    - name: TREE1\n      valueFrom:\n        configMapKeyRef:\n          name: trauerweide\n          key: tree\n    volumeMounts:\n    - name: birke-volume\n      mountPath: /etc/birke\n  volumes:\n  - name: birke-volume\n    configMap:\n      name: birke"
  },
  {
    "prompt": "Create a Deployment named space-alien-welcome-message-generator using image httpd:alpine with 1 replica and readinessProbe running stat /tmp/ready with initialDelaySeconds=10 and periodSeconds=5.",
    "answer": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: space-alien-welcome-message-generator\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: space-alien-welcome-message-generator\n  template:\n    metadata:\n      labels:\n        app: space-alien-welcome-message-generator\n    spec:\n      containers:\n      - name: httpd\n        image: httpd:alpine\n        readinessProbe:\n          exec:\n            command:\n            - stat\n            - /tmp/ready\n          initialDelaySeconds: 10\n          periodSeconds: 5"
  },
  {
    "category": "YAML Editing - Pods",
    "prompts": [
      {
        "question_type": "yaml_edit",
        "prompt": "Create a Pod named 'web-server' using nginx:1.20 image, expose port 80",
        "starting_yaml": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: # TODO: Add name\nspec:\n  containers:\n  - name: # TODO: Add container name\n    image: # TODO: Add image\n    ports:\n    - containerPort: # TODO: Add port",
        "correct_yaml": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: web-server\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.20\n    ports:\n    - containerPort: 80",
        "explanation": "Basic pod with specific name, image, and port configuration"
      },
      {
        "question_type": "yaml_edit",
        "prompt": "Create a Pod named 'app-pod' with container name 'app' and environment variables: DB_HOST=localhost, DB_PORT=5432",
        "starting_yaml": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app\n    image: nginx\n    env:\n    # TODO: Add environment variables",
        "correct_yaml": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app\n    image: nginx\n    env:\n    - name: DB_HOST\n      value: localhost\n    - name: DB_PORT\n      value: \"5432\"",
        "explanation": "Pod with environment variables defined in container spec"
      }
    ]
  },
  {
    "category": "YAML Editing - Deployments",
    "prompts": [
      {
        "question_type": "yaml_edit",
        "prompt": "Create a Deployment named 'frontend' with 3 replicas of nginx:1.21",
        "starting_yaml": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: # TODO: Add name\nspec:\n  replicas: # TODO: Set replicas\n  selector:\n    matchLabels:\n      app: frontend\n  template:\n    metadata:\n      labels:\n        app: frontend\n    spec:\n      containers:\n      - name: nginx\n        image: # TODO: Set image",
        "correct_yaml": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: frontend\n  template:\n    metadata:\n      labels:\n        app: frontend\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.21",
        "explanation": "Deployment with replica count and proper label selectors"
      }
    ]
  },
  {
    "category": "YAML Editing - ConfigMaps",
    "prompts": [
      {
        "question_type": "yaml_edit",
        "prompt": "Create a ConfigMap named 'app-config' with data: database_url=mysql://localhost:3306/app",
        "starting_yaml": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: # TODO: Add name\ndata:\n  # TODO: Add data fields",
        "correct_yaml": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  database_url: mysql://localhost:3306/app",
        "explanation": "ConfigMap with key-value data for application configuration"
      }
    ]
  }
]
