[project]
name = "firesense"
version = "0.10.2"
description = "AI-powered fire detection system using Gemma 3N E4B vision model"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Gregory Mulla", email = "gregory.cr.mulla@gmail.com"},
]
maintainers = [
    {name = "Gregory Mulla", email = "gregory.cr.mulla@gmail.com"},
]
keywords = ["fire-detection", "computer-vision", "ai", "gemma", "video-analysis", "safety", "wildfire"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    "rich>=13.7.0",
    # Video processing
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "yt-dlp>=2024.1.0",
    # ML/Model - E4B specific
    "torch>=2.1.0",
    "transformers>=4.36.0",
    "accelerate>=0.25.0",
    "sentencepiece>=0.1.99",
    "unsloth>=2024.1",
    # Vision
    "torchvision>=0.16.0",
    "timm>=0.9.0",
    # Utils
    "typer>=0.9.0",
    "tqdm>=4.66.0",
    "aiofiles>=23.2.0",
    "protobuf>=6.31.1",
    "huggingface-hub[cli]>=0.34.2",
    # Demo server dependencies
    "fastapi>=0.109.0",
    "uvicorn>=0.25.0",
    "pyngrok>=7.2.12",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.12.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]
quantization = [
    "bitsandbytes>=0.41.0; sys_platform != 'darwin'",
]
youtube = [
    "yt-dlp>=2023.12.30",
]

[project.urls]
Homepage = "https://github.com/gregorymulla/firesense_ai"
Documentation = "https://github.com/gregorymulla/firesense_ai#readme"
Repository = "https://github.com/gregorymulla/firesense_ai"
Issues = "https://github.com/gregorymulla/firesense_ai/issues"

[project.scripts]
firesense = "firesense.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/firesense"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.uv]
package = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]
ignore = ["E501", "DTZ005", "RUF001", "B008"]  # line too long, timezone, ambiguous chars, function calls in defaults

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["T20"]  # Allow print statements in tests
"src/firesense/fire_detection/*.py" = ["T201"]  # Allow print in CLI tools
"src/firesense/fire_detection/config.py" = ["N805"]  # Allow cls in pydantic validators
"examples/*" = ["T201", "E402", "F401", "F841", "B904"]  # Allow print, imports, unused vars in examples
"scripts/*" = ["T201", "E722", "B904"]  # Allow print and bare except in scripts
"localscripts/*" = ["T201"]  # Allow print statements in local scripts

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=firesense",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src/firesense"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "build>=1.2.2.post1",
    "python-dotenv>=1.1.1",
    "ruff>=0.12.7",
    "twine>=6.1.0",
]
