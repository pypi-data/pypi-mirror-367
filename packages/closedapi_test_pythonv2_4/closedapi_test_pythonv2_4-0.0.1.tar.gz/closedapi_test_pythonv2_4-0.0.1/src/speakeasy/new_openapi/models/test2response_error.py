"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
import pydantic
from pydantic.functional_validators import AfterValidator
from speakeasy.new_openapi.models import SDKBaseError
from speakeasy.new_openapi.types import BaseModel
from speakeasy.new_openapi.utils import validate_const
from typing import Literal, Optional
from typing_extensions import Annotated


class Test2ResponseErrorData(BaseModel):
    test2: Optional[str] = None

    SOME_CONST: Annotated[
        Annotated[
            Optional[Literal["someConstValue"]],
            AfterValidator(validate_const("someConstValue")),
        ],
        pydantic.Field(alias="someConst"),
    ] = "someConstValue"


class Test2ResponseError(SDKBaseError):
    data: Test2ResponseErrorData

    def __init__(
        self,
        data: Test2ResponseErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
