"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from speakeasy.new_openapi.types import BaseModel
from speakeasy.new_openapi.utils import (
    FieldMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Emoji(str, Enum):
    WAVE = "wave"
    SMILEY = "smiley"
    THUMBSUP = "thumbsup"
    TADA = "tada"


class GetFullyFlattenedRequestRequestBodyTypedDict(TypedDict):
    name: str
    emoji: NotRequired[Emoji]
    gif: NotRequired[str]
    reply: NotRequired[bool]
    private: NotRequired[bool]


class GetFullyFlattenedRequestRequestBody(BaseModel):
    name: str

    emoji: Optional[Emoji] = None

    gif: Optional[str] = None

    reply: Optional[bool] = None

    private: Optional[bool] = None


class GetFullyFlattenedRequestRequestTypedDict(TypedDict):
    lang: str
    request_body: GetFullyFlattenedRequestRequestBodyTypedDict
    max_length: NotRequired[int]


class GetFullyFlattenedRequestRequest(BaseModel):
    lang: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]

    request_body: Annotated[
        GetFullyFlattenedRequestRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    max_length: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
