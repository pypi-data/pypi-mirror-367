[project]
name = "knowledge_base_mcp"
version = "0.6.2"
description = "Knowledge Base MCP"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiohttp[speedups]>=3.12.13",
    "asyncclick>=8.1.8",
    "docling==2.42.0",
    "docling-core[chunking]>=2.37.0",
    "duckdb>=1.3.0",
    "fastmcp<=2.11.0",
    "flashrank>=0.2.10",
    "githubkit>=0.12.15",
    "gitpython>=3.1.44",
    "llama-index-core>=0.12.45",
    "llama-index-embeddings-fastembed>=0.3.2",
    "llama-index-embeddings-huggingface>=0.5.4",
    "llama-index-node-parser-docling>=0.3.2",
    "llama-index-postprocessor-flashrank-rerank>=0.1.0",
    "llama-index-readers-docling>=0.3.3",
    "llama-index-readers-github>=0.6.1",
    "llama-index-readers-slack>=0.3.1",
    "llama-index-storage-docstore-duckdb>=0.1.0",
    "llama-index-storage-docstore-elasticsearch>=0.3.0",
    "llama-index-storage-index-store-duckdb>=0.1.0",
    "llama-index-storage-index-store-elasticsearch>=0.4.0",
    "llama-index-storage-kvstore-duckdb>=0.1.1",
    "llama-index-vector-stores-duckdb>=0.1.0",
    "llama-index-vector-stores-elasticsearch>=0.4.3",
    "llama-index>=0.12.45",
    "mcp>=1.9.0",
    "mistune>=3.1.3",
    "rich>=14.0.0",
    "sentence-transformers>=4.1.0",
    "syrupy>=4.9.1",
    "torch>=2.7.1",
    "tree-sitter-language-pack>=0.8.0",
    "tree-sitter>=0.24.0",
    "types-lxml>=2025.3.30",
]

[tool.uv.sources]
#docling = { git = "https://github.com/strawgate/fork.docling.git", branch = "make-docling-fast-again" }
#llama-index-storage-docstore-duckdb = {path = "/Users/bill.easton/repos/llama_index/llama-index-integrations/storage/docstore/llama-index-storage-docstore-duckdb"}
#llama-index-storage-kvstore-duckdb = {path = "/Users/bill.easton/repos/llama_index/llama-index-integrations/storage/kvstore/llama-index-storage-kvstore-duckdb"}
#llama-index-storage-index-store-duckdb = {path = "/Users/bill.easton/repos/llama_index/llama-index-integrations/storage/index_store/llama-index-storage-index-store-duckdb"}
#llama-index-vector-stores-duckdb = {path = "/Users/bill.easton/repos/llama_index/llama-index-integrations/vector_stores/llama-index-vector-stores-duckdb"}

[tool.poetry]
packages = [
    { include = "knowledge_base_mcp", from = "src" }
]
[tool.hatch.metadata]
allow-direct-references=true

[project.scripts]
knowledge-base-mcp = "knowledge_base_mcp.main:run_mcp"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = "-s"  # disable captures
markers = [
    "not_on_ci: marks tests as not running on CI (deselect with '-m \"not not_on_ci\"')",
]

[dependency-groups]
dev = [
  "pytest",
  "pytest-mock",
  "pytest-asyncio",
  "pytest-freezer",
  "pytest-aiohttp",
  "pytest-benchmark",
  "ruff",
  "basedpyright>=1.29.4",
  "types-lxml[basedpyright]>=2025.3.30",
]
lint = [
  "ruff"
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning>=0.7.0"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py313"
extend="../pyproject.toml"
extend-exclude = [
    "**/archived/**",
]


[tool.ruff.lint.extend-per-file-ignores]
"**/tests/*.py" = [
    "S101", # Ignore asserts
    "DTZ005", # Ignore datetime.UTC
    "PLR2004", # Ignore magic values
    "PLR6301", # Ignore could be class or static method
    "FURB118", # Ignore functions for extracting values from tuple
    "S101", # Ignore asserts in tests
    "ARG002", # Ignore unused arguments
    "S607", # Starting a subprocess with a partial path
    "S603", # Ignore untrusted input in subprocesses
    "ARG001", # Ignore unused arguments
]
"**/src/knowledge_base_mcp/vendored/**/*.py" = [
    "ALL"
]
"**/archive/*.py" = [
    "ALL"
]

[tool.pyright]
pythonVersion = "3.13"
extraPaths = ["src/"]
include = ["src/"]
exclude = [
    "**/archive/**",
    "**/node_modules/**",
    "**/__pycache__/**",
    "**/.venv/**",
    ".venv",
    "**/.pytest_cache/**",
    "**/.ruff_cache/**",
    "**/uv/python/**",
]
reportMissingTypeStubs = false
reportExplicitAny = false

executionEnvironments = [
    { root = "src/tests", reportPrivateUsage = false},
]
