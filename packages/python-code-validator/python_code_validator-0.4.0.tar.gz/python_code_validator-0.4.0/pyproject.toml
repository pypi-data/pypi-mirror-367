# ==============================================================================
#  Build System Configuration (PEP 517/518)
# ==============================================================================
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# ==============================================================================
#  Project Metadata (PEP 621)
# ==============================================================================
[project]
name = "python-code-validator"
version = "0.4.0"
description = "A flexible, AST-based framework for static validation of Python code using declarative JSON rules."
keywords = ["validation", "linter", "static analysis", "testing", "education", "ast"]
authors = [{ name = "Qu1nel", email = "covach.qn@gmail.com" }]
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Education",
]

dependencies = [
    "flake8>=7.0.0"
]

[project.urls]
"Homepage" = "https://github.com/Qu1nel/PythonCodeValidator"
"Documentation" = "https://pythoncodevalidator.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/Qu1nel/PythonCodeValidator/issues"


[project.scripts]
validate-code = "code_validator.cli:run_from_cli"


[project.optional-dependencies]
dev = [
    "ruff>=0.4.0",
    "build",
    "twine",
    "coverage[toml]>=7.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "furo",
    "myst-parser",
    "sphinx-design",
]

# ==============================================================================
#  Tool Configuration
# ==============================================================================

[tool.ruff]
line-length = 120
exclude = [
    ".venv",
    "build",
    "dist",
    "src/python_code_validator.egg-info",
    "tests/fixtures",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "D", # pydocstyle
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
]
"src/code_validator/components/__init__.py" = ["D104"]
"src/code_validator/rules_library/__init__.py" = ["D104"]
"src/code_validator/components/factories.py" = ["D107"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["code_validator", "tests"]

[tool.ruff.format]
quote-style = "double"

[tool.coverage.run]
omit = [
    "src/code_validator/__main__.py",
    "src/code_validator/cli.py",
    "tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
fail_under = 85
show_missing = true