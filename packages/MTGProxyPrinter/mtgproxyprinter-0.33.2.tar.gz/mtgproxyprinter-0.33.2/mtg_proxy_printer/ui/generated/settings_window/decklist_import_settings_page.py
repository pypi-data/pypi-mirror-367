# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/mnt/Daten/Projekte/MTGProxyPrinter/mtg_proxy_printer/resources/ui/settings_window/decklist_import_settings_page.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_DecklistImportSettingsPage(object):
    def setupUi(self, DecklistImportSettingsPage):
        DecklistImportSettingsPage.setObjectName("DecklistImportSettingsPage")
        DecklistImportSettingsPage.resize(439, 326)
        self.gridLayout = QtWidgets.QGridLayout(DecklistImportSettingsPage)
        self.gridLayout.setObjectName("gridLayout")
        self.deck_list_search_path_browse_button = QtWidgets.QPushButton(DecklistImportSettingsPage)
        self.deck_list_search_path_browse_button.setText("")
        icon = QtGui.QIcon.fromTheme("document-open")
        self.deck_list_search_path_browse_button.setIcon(icon)
        self.deck_list_search_path_browse_button.setObjectName("deck_list_search_path_browse_button")
        self.gridLayout.addWidget(self.deck_list_search_path_browse_button, 1, 2, 1, 1)
        self.deck_list_search_path_label = QtWidgets.QLabel(DecklistImportSettingsPage)
        self.deck_list_search_path_label.setObjectName("deck_list_search_path_label")
        self.gridLayout.addWidget(self.deck_list_search_path_label, 1, 0, 1, 1)
        self.basic_land_removal_group_box = QtWidgets.QGroupBox(DecklistImportSettingsPage)
        self.basic_land_removal_group_box.setObjectName("basic_land_removal_group_box")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.basic_land_removal_group_box)
        self.verticalLayout.setObjectName("verticalLayout")
        self.automatic_basics_removal_enable = QtWidgets.QCheckBox(self.basic_land_removal_group_box)
        self.automatic_basics_removal_enable.setObjectName("automatic_basics_removal_enable")
        self.verticalLayout.addWidget(self.automatic_basics_removal_enable)
        self.remove_basic_wastes_enable = QtWidgets.QCheckBox(self.basic_land_removal_group_box)
        self.remove_basic_wastes_enable.setObjectName("remove_basic_wastes_enable")
        self.verticalLayout.addWidget(self.remove_basic_wastes_enable)
        self.remove_snow_basics_enable = QtWidgets.QCheckBox(self.basic_land_removal_group_box)
        self.remove_snow_basics_enable.setObjectName("remove_snow_basics_enable")
        self.verticalLayout.addWidget(self.remove_snow_basics_enable)
        self.gridLayout.addWidget(self.basic_land_removal_group_box, 3, 0, 1, 3)
        self.label = QtWidgets.QLabel(DecklistImportSettingsPage)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 3)
        self.print_guessing_group_box = QtWidgets.QGroupBox(DecklistImportSettingsPage)
        self.print_guessing_group_box.setChecked(False)
        self.print_guessing_group_box.setObjectName("print_guessing_group_box")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.print_guessing_group_box)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.print_guessing_prefer_already_downloaded = QtWidgets.QCheckBox(self.print_guessing_group_box)
        self.print_guessing_prefer_already_downloaded.setObjectName("print_guessing_prefer_already_downloaded")
        self.gridLayout_6.addWidget(self.print_guessing_prefer_already_downloaded, 2, 0, 1, 1)
        self.automatic_deck_list_translation_enable = QtWidgets.QCheckBox(self.print_guessing_group_box)
        self.automatic_deck_list_translation_enable.setObjectName("automatic_deck_list_translation_enable")
        self.gridLayout_6.addWidget(self.automatic_deck_list_translation_enable, 3, 0, 1, 1)
        self.print_guessing_enable = QtWidgets.QCheckBox(self.print_guessing_group_box)
        self.print_guessing_enable.setObjectName("print_guessing_enable")
        self.gridLayout_6.addWidget(self.print_guessing_enable, 1, 0, 1, 1)
        self.gridLayout.addWidget(self.print_guessing_group_box, 2, 0, 1, 3)
        self.deck_list_search_path = QtWidgets.QLineEdit(DecklistImportSettingsPage)
        self.deck_list_search_path.setInputMethodHints(QtCore.Qt.ImhNoAutoUppercase)
        self.deck_list_search_path.setClearButtonEnabled(True)
        self.deck_list_search_path.setObjectName("deck_list_search_path")
        self.gridLayout.addWidget(self.deck_list_search_path, 1, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem, 4, 0, 1, 3)

        self.retranslateUi(DecklistImportSettingsPage)
        QtCore.QMetaObject.connectSlotsByName(DecklistImportSettingsPage)

    def retranslateUi(self, DecklistImportSettingsPage):
        _translate = QtCore.QCoreApplication.translate
        self.deck_list_search_path_browse_button.setToolTip(_translate("DecklistImportSettingsPage", "Browse …"))
        self.deck_list_search_path_label.setText(_translate("DecklistImportSettingsPage", "Deck list search path"))
        self.basic_land_removal_group_box.setToolTip(_translate("DecklistImportSettingsPage", "The import wizard can remove basic lands fully- or semi-automatic.\n"
"These settings control the removal behavior."))
        self.basic_land_removal_group_box.setTitle(_translate("DecklistImportSettingsPage", "Control the one-click or automatic basic land removal"))
        self.automatic_basics_removal_enable.setToolTip(_translate("DecklistImportSettingsPage", "If enabled, basic lands are automatically removed from deck lists.\n"
"If disabled, the deck import wizard keeps them by default,\n"
"but offers the removal via a single button click."))
        self.automatic_basics_removal_enable.setText(_translate("DecklistImportSettingsPage", "Fully automatically remove basic lands"))
        self.remove_basic_wastes_enable.setToolTip(_translate("DecklistImportSettingsPage", "When enabled, treat Wastes like any other basic land"))
        self.remove_basic_wastes_enable.setText(_translate("DecklistImportSettingsPage", "Removal includes Wastes"))
        self.remove_snow_basics_enable.setToolTip(_translate("DecklistImportSettingsPage", "When enabled, treat Snow-Covered basic lands like any other basic land"))
        self.remove_snow_basics_enable.setText(_translate("DecklistImportSettingsPage", "Removal includes Snow-Covered Basic lands"))
        self.label.setText(_translate("DecklistImportSettingsPage", "These options control the deck list import function."))
        self.print_guessing_group_box.setToolTip(_translate("DecklistImportSettingsPage", "Not all deck list formats always contain complete data.\n"
"These options set the default behavior when encountering ambiguous card"))
        self.print_guessing_group_box.setTitle(_translate("DecklistImportSettingsPage", "Control print selection in ambiguous cases"))
        self.print_guessing_prefer_already_downloaded.setToolTip(_translate("DecklistImportSettingsPage", "When automatically selecting a printing, prefer printings with already downloaded images over other possible printings."))
        self.print_guessing_prefer_already_downloaded.setText(_translate("DecklistImportSettingsPage", "Prefer printings with already downloaded images"))
        self.automatic_deck_list_translation_enable.setToolTip(_translate("DecklistImportSettingsPage", "Always enable automatic deck list translation when importing deck lists.\n"
"This avoids adding foreign language cards, if the deck list happens to contain some."))
        self.automatic_deck_list_translation_enable.setText(_translate("DecklistImportSettingsPage", "Enable translating imported deck lists by default"))
        self.print_guessing_enable.setToolTip(_translate("DecklistImportSettingsPage", "Not all deck list formats always contain complete data to identify exact printings.\n"
"If enabled, choose an arbitrary printing, instead of failing to identify such cards.\n"
"With some deck list formats, this option is always enabled."))
        self.print_guessing_enable.setText(_translate("DecklistImportSettingsPage", "Automatically select a printing"))
        self.deck_list_search_path.setToolTip(_translate("DecklistImportSettingsPage", "If set, use this as the default location for loading deck lists. Your webbrowser’s download directory is a good choice."))
        self.deck_list_search_path.setPlaceholderText(_translate("DecklistImportSettingsPage", "Path to a directory"))
