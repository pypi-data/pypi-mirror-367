[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-code-security-auditor"
version = "2.0.0"
description = "AI-powered security scanner with multi-model LLM integration for comprehensive code vulnerability detection and automated patch generation"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "AI Security Team", email = "security@aiauditor.com"},
]
keywords = [
    "security", "vulnerability", "scanner", "ai", "llm", "openrouter", 
    "bandit", "semgrep", "cli", "analytics", "monitoring", "devops"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment", 
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.20.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "bandit>=1.7.5",
    "semgrep>=1.45.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0", 
    "langgraph>=0.0.40",
    "chromadb>=0.4.15",
    "sentence-transformers>=2.2.2",
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "pydantic-settings>=2.0.0",
    "langchain-community>=0.0.20",
    "langchain-core>=0.1.0",
    "langchain-deepseek>=0.1.0",
    "click>=8.1.7",
    "gunicorn>=21.2.0",
    "prometheus-client>=0.18.0",
    "pathlib2>=2.3.7",
    "redis>=4.5.0",
    "celery[redis]>=5.3.0",
    "kombu>=5.3.0",
    "websockets>=11.0.3",
    "python-socketio[asyncio-client]>=5.9.0",
    "eventlet>=0.33.3",
    "flower>=2.0.1",
    "GitPython>=3.1.0",
    "tqdm>=4.65.0",
    "colorama>=0.4.6",
    "pyyaml>=6.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.1",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.3.3",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "pytest-mock>=3.11.1",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocs-mermaid2-plugin>=1.1.1",
]

[project.urls]
Homepage = "https://github.com/ai-security-team/ai-code-security-auditor"
Documentation = "https://ai-code-security-auditor.readthedocs.io"
Repository = "https://github.com/ai-security-team/ai-code-security-auditor.git"
"Bug Reports" = "https://github.com/ai-security-team/ai-code-security-auditor/issues"
Changelog = "https://github.com/ai-security-team/ai-code-security-auditor/blob/main/CHANGELOG.md"

[project.scripts]
auditor = "auditor.cli:main"
ai-security-auditor = "auditor.cli:main"

[tool.setuptools.packages.find]
include = ["app*", "auditor*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
app = ["*.yaml", "*.yml", "*.json"]
auditor = ["*.yaml", "*.yml", "*.json"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "cli: marks tests as CLI tests",
]

[tool.coverage.run]
source = ["app", "auditor"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true