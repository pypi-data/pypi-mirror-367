"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from anncsu.pa.errors import AnncsuError
from anncsu.pa.types import BaseModel
import httpx
from typing import Optional


class PrognazaccGetQueryParamInternalServerErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazaccGetQueryParamInternalServerError(AnncsuError):
    r"""Internal Server Error"""

    data: PrognazaccGetQueryParamInternalServerErrorData

    def __init__(
        self,
        data: PrognazaccGetQueryParamInternalServerErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazaccGetQueryParamUnprocessableEntityErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazaccGetQueryParamUnprocessableEntityError(AnncsuError):
    r"""Unprocessable Entity - error in json"""

    data: PrognazaccGetQueryParamUnprocessableEntityErrorData

    def __init__(
        self,
        data: PrognazaccGetQueryParamUnprocessableEntityErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazaccGetQueryParamMethodNotAllowedErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazaccGetQueryParamMethodNotAllowedError(AnncsuError):
    r"""Method Not Allowed"""

    data: PrognazaccGetQueryParamMethodNotAllowedErrorData

    def __init__(
        self,
        data: PrognazaccGetQueryParamMethodNotAllowedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazaccGetQueryParamNotFoundErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazaccGetQueryParamNotFoundError(AnncsuError):
    r"""Not found"""

    data: PrognazaccGetQueryParamNotFoundErrorData

    def __init__(
        self,
        data: PrognazaccGetQueryParamNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazaccGetQueryParamBadRequestErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazaccGetQueryParamBadRequestError(AnncsuError):
    r"""Bad Request"""

    data: PrognazaccGetQueryParamBadRequestErrorData

    def __init__(
        self,
        data: PrognazaccGetQueryParamBadRequestErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
