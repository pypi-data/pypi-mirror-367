"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from anncsu.pa.errors import AnncsuError
from anncsu.pa.types import BaseModel
import httpx
from typing import Optional


class EsisteAccessoGetQueryParamInternalServerErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetQueryParamInternalServerError(AnncsuError):
    r"""Internal Server Error"""

    data: EsisteAccessoGetQueryParamInternalServerErrorData

    def __init__(
        self,
        data: EsisteAccessoGetQueryParamInternalServerErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class EsisteAccessoGetQueryParamUnprocessableEntityErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetQueryParamUnprocessableEntityError(AnncsuError):
    r"""Unprocessable Entity - error in json"""

    data: EsisteAccessoGetQueryParamUnprocessableEntityErrorData

    def __init__(
        self,
        data: EsisteAccessoGetQueryParamUnprocessableEntityErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class EsisteAccessoGetQueryParamMethodNotAllowedErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetQueryParamMethodNotAllowedError(AnncsuError):
    r"""Method Not Allowed"""

    data: EsisteAccessoGetQueryParamMethodNotAllowedErrorData

    def __init__(
        self,
        data: EsisteAccessoGetQueryParamMethodNotAllowedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class EsisteAccessoGetQueryParamBadRequestErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetQueryParamBadRequestError(AnncsuError):
    r"""Bad Request"""

    data: EsisteAccessoGetQueryParamBadRequestErrorData

    def __init__(
        self,
        data: EsisteAccessoGetQueryParamBadRequestErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
