"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from anncsu.pa.errors import AnncsuError
from anncsu.pa.types import BaseModel
import httpx
from typing import Optional


class PrognazareaGetQueryParamInternalServerErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazareaGetQueryParamInternalServerError(AnncsuError):
    r"""Internal Server Error"""

    data: PrognazareaGetQueryParamInternalServerErrorData

    def __init__(
        self,
        data: PrognazareaGetQueryParamInternalServerErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazareaGetQueryParamUnprocessableEntityErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazareaGetQueryParamUnprocessableEntityError(AnncsuError):
    r"""Unprocessable Entity - error in json"""

    data: PrognazareaGetQueryParamUnprocessableEntityErrorData

    def __init__(
        self,
        data: PrognazareaGetQueryParamUnprocessableEntityErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazareaGetQueryParamMethodNotAllowedErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazareaGetQueryParamMethodNotAllowedError(AnncsuError):
    r"""Method Not Allowed"""

    data: PrognazareaGetQueryParamMethodNotAllowedErrorData

    def __init__(
        self,
        data: PrognazareaGetQueryParamMethodNotAllowedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazareaGetQueryParamNotFoundErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazareaGetQueryParamNotFoundError(AnncsuError):
    r"""Not found"""

    data: PrognazareaGetQueryParamNotFoundErrorData

    def __init__(
        self,
        data: PrognazareaGetQueryParamNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class PrognazareaGetQueryParamBadRequestErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class PrognazareaGetQueryParamBadRequestError(AnncsuError):
    r"""Bad Request"""

    data: PrognazareaGetQueryParamBadRequestErrorData

    def __init__(
        self,
        data: PrognazareaGetQueryParamBadRequestErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
