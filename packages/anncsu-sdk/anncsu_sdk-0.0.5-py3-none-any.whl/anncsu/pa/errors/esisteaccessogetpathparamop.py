"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from anncsu.pa.errors import AnncsuError
from anncsu.pa.types import BaseModel
import httpx
from typing import Optional


class EsisteAccessoGetPathParamInternalServerErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetPathParamInternalServerError(AnncsuError):
    r"""Internal Server Error"""

    data: EsisteAccessoGetPathParamInternalServerErrorData

    def __init__(
        self,
        data: EsisteAccessoGetPathParamInternalServerErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class EsisteAccessoGetPathParamUnprocessableEntityErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetPathParamUnprocessableEntityError(AnncsuError):
    r"""Unprocessable Entity - error in json"""

    data: EsisteAccessoGetPathParamUnprocessableEntityErrorData

    def __init__(
        self,
        data: EsisteAccessoGetPathParamUnprocessableEntityErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class EsisteAccessoGetPathParamMethodNotAllowedErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetPathParamMethodNotAllowedError(AnncsuError):
    r"""Method Not Allowed"""

    data: EsisteAccessoGetPathParamMethodNotAllowedErrorData

    def __init__(
        self,
        data: EsisteAccessoGetPathParamMethodNotAllowedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class EsisteAccessoGetPathParamBadRequestErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class EsisteAccessoGetPathParamBadRequestError(AnncsuError):
    r"""Bad Request"""

    data: EsisteAccessoGetPathParamBadRequestErrorData

    def __init__(
        self,
        data: EsisteAccessoGetPathParamBadRequestErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
