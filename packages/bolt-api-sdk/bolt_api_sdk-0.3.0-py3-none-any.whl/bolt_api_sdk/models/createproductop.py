"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .product import Product, ProductTypedDict
from bolt_api_sdk.types import BaseModel
from enum import Enum
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class CreateProductFrequencyUnit(str, Enum):
    r"""Unit of frequency (e.g., day, week, month, Month, year, one_time)."""

    DAY = "day"
    WEEK = "week"
    MONTH_LOWER = "month"
    MONTH_MIXED = "Month"
    YEAR = "year"
    ONE_TIME = "one_time"


class CreateProductPlanTypedDict(TypedDict):
    sku: str
    r"""SKU of the plan."""
    name: str
    r"""Name of the plan."""
    frequency: int
    r"""Frequency of the plan."""
    frequency_unit: CreateProductFrequencyUnit
    r"""Unit of frequency (e.g., day, week, month, Month, year, one_time)."""


class CreateProductPlan(BaseModel):
    sku: str
    r"""SKU of the plan."""

    name: str
    r"""Name of the plan."""

    frequency: int
    r"""Frequency of the plan."""

    frequency_unit: CreateProductFrequencyUnit
    r"""Unit of frequency (e.g., day, week, month, Month, year, one_time)."""


class CreateProductRequestTypedDict(TypedDict):
    name: str
    r"""Name of the product."""
    description: str
    r"""Description of the product."""
    brand: str
    r"""Brand of the product."""
    sku: str
    r"""SKU of the product."""
    unit_price: int
    r"""Unit price of the product in cents."""
    plans: List[CreateProductPlanTypedDict]
    merchant_product_id: NotRequired[str]
    r"""ID for the product; if missing, global plans are created"""
    merchant_variant_id: NotRequired[str]
    r"""ID for the product variant"""
    images: NotRequired[List[str]]
    r"""Array of image URLs for the product."""


class CreateProductRequest(BaseModel):
    name: str
    r"""Name of the product."""

    description: str
    r"""Description of the product."""

    brand: str
    r"""Brand of the product."""

    sku: str
    r"""SKU of the product."""

    unit_price: int
    r"""Unit price of the product in cents."""

    plans: List[CreateProductPlan]

    merchant_product_id: Optional[str] = None
    r"""ID for the product; if missing, global plans are created"""

    merchant_variant_id: Optional[str] = None
    r"""ID for the product variant"""

    images: Optional[List[str]] = None
    r"""Array of image URLs for the product."""


class CreateProductResponseTypedDict(TypedDict):
    r"""Product created successfully."""

    product: NotRequired[ProductTypedDict]
    r"""Product object."""


class CreateProductResponse(BaseModel):
    r"""Product created successfully."""

    product: Optional[Product] = None
    r"""Product object."""
