Metadata-Version: 2.4
Name: ABayes
Version: 0.0.2
Summary: High-performance Python library for AB testing analysis with JAX and FastAPI
Project-URL: Homepage, https://github.com/your-org/abayes
Project-URL: Documentation, https://abayes.readthedocs.io
Project-URL: Repository, https://github.com/your-org/abayes
Project-URL: Bug Tracker, https://github.com/your-org/abayes/issues
Author: ABayes Team
License-Expression: MIT
Keywords: ab-testing,cuped,jax,statistics,variance-reduction
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.11
Requires-Dist: beartype>=0.21.0
Requires-Dist: fastapi>=0.100.0
Requires-Dist: hydra-core>=1.3.2
Requires-Dist: jax<0.5.0,>=0.4.20
Requires-Dist: jaxlib<0.5.0,>=0.4.20
Requires-Dist: jaxtyping>=0.3.2
Requires-Dist: numpy>=1.24.0
Requires-Dist: numpyro<0.16.0,>=0.13.0
Requires-Dist: optax>=0.2.5
Requires-Dist: pandas>=2.3.1
Requires-Dist: polars>=0.19.0
Requires-Dist: pydantic>=2.0
Requires-Dist: scipy>=1.10.0
Requires-Dist: uvicorn[standard]>=0.20.0
Provides-Extra: all
Requires-Dist: jupyter>=1.0; extra == 'all'
Requires-Dist: matplotlib>=3.6; extra == 'all'
Requires-Dist: myst-parser>=2.0; extra == 'all'
Requires-Dist: nbsphinx>=0.9; extra == 'all'
Requires-Dist: plotly>=5.0; extra == 'all'
Requires-Dist: seaborn>=0.12; extra == 'all'
Requires-Dist: sphinx-rtd-theme>=1.2; extra == 'all'
Requires-Dist: sphinx>=6.0; extra == 'all'
Provides-Extra: docs
Requires-Dist: myst-parser>=2.0; extra == 'docs'
Requires-Dist: nbsphinx>=0.9; extra == 'docs'
Requires-Dist: sphinx-rtd-theme>=1.2; extra == 'docs'
Requires-Dist: sphinx>=6.0; extra == 'docs'
Provides-Extra: jupyter
Requires-Dist: jupyter>=1.0; extra == 'jupyter'
Requires-Dist: matplotlib>=3.6; extra == 'jupyter'
Requires-Dist: plotly>=5.0; extra == 'jupyter'
Requires-Dist: seaborn>=0.12; extra == 'jupyter'
Description-Content-Type: text/markdown

# ABayes

[![Release](https://img.shields.io/github/v/release/thomaspinder/ABayes)](https://img.shields.io/github/v/release/thomaspinder/ABayes)
[![Build status](https://img.shields.io/github/actions/workflow/status/thomaspinder/ABayes/main.yml?branch=main)](https://github.com/thomaspinder/ABayes/actions/workflows/main.yml?query=branch%3Amain)
[![codecov](https://codecov.io/gh/thomaspinder/ABayes/branch/main/graph/badge.svg)](https://codecov.io/gh/thomaspinder/ABayes)
[![Commit activity](https://img.shields.io/github/commit-activity/m/thomaspinder/ABayes)](https://img.shields.io/github/commit-activity/m/thomaspinder/ABayes)
[![License](https://img.shields.io/github/license/thomaspinder/ABayes)](https://img.shields.io/github/license/thomaspinder/ABayes)

AB testing with JAX

- **Github repository**: <https://github.com/thomaspinder/ABayes/>
- **Documentation** <https://thomaspinder.github.io/ABayes/>

## Getting started with your project

### 1. Create a New Repository

First, create a repository on GitHub with the same name as this project, and then run the following commands:

```bash
git init -b main
git add .
git commit -m "init commit"
git remote add origin git@github.com:thomaspinder/ABayes.git
git push -u origin main
```

### 2. Set Up Your Development Environment

Then, install the environment and the pre-commit hooks with

```bash
make install
```

This will also generate your `uv.lock` file

### 3. Run the pre-commit hooks

Initially, the CI/CD pipeline might be failing due to formatting issues. To resolve those run:

```bash
uv run pre-commit run -a
```

### 4. Commit the changes

Lastly, commit the changes made by the two steps above to your repository.

```bash
git add .
git commit -m 'Fix formatting issues'
git push origin main
```

You are now ready to start development on your project!
The CI/CD pipeline will be triggered when you open a pull request, merge to main, or when you create a new release.

To finalize the set-up for publishing to PyPI, see [here](https://fpgmaas.github.io/cookiecutter-uv/features/publishing/#set-up-for-pypi).
For activating the automatic documentation with MkDocs, see [here](https://fpgmaas.github.io/cookiecutter-uv/features/mkdocs/#enabling-the-documentation-on-github).
To enable the code coverage reports, see [here](https://fpgmaas.github.io/cookiecutter-uv/features/codecov/).

## Releasing a new version

- Create an API Token on [PyPI](https://pypi.org/).
- Add the API Token to your projects secrets with the name `PYPI_TOKEN` by visiting [this page](https://github.com/thomaspinder/ABayes/settings/secrets/actions/new).
- Create a [new release](https://github.com/thomaspinder/ABayes/releases/new) on Github.
- Create a new tag in the form `*.*.*`.

For more details, see [here](https://fpgmaas.github.io/cookiecutter-uv/features/cicd/#how-to-trigger-a-release).

---

Repository initiated with [fpgmaas/cookiecutter-uv](https://github.com/fpgmaas/cookiecutter-uv).
