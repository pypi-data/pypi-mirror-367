[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "huntglitch-python"
version = "1.2.0"
description = "Send Python exceptions and logs to HuntGlitch"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "HuntGlitch", email = "support@huntglitch.com"}
]
maintainers = [
    {name = "HuntGlitch", email = "support@huntglitch.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["logging", "error tracking", "monitoring", "debugging", "huntglitch"]
requires-python = ">=3.7"
dependencies = [
    "requests>=2.25.0,<3.0.0",
]

[project.optional-dependencies]
env = [
    "python-dotenv>=0.19.0,<2.0.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.910",
]

[project.urls]
Homepage = "https://github.com/huntglitch-npm/huntglitch-python"
Documentation = "https://github.com/huntglitch-npm/huntglitch-python#readme"
Repository = "https://github.com/huntglitch-npm/huntglitch-python.git"
"Bug Tracker" = "https://github.com/huntglitch-npm/huntglitch-python/issues"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--strict-markers --strict-config --cov=huntglitch_python --cov-report=term-missing"

[tool.coverage.run]
source = ["huntglitch_python"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]