{"version":3,"file":"issueSummaryTableView.js","names":["RB","ReviewRequestPage","IssueSummaryTableView","Backbone","View","extend","events","stateToSelectorMap","open","dropped","resolved","verifying","all","statusIconsMap","COLUMN_DESCRIPTION","COLUMN_REVIEWER","COLUMN_LAST_UPDATED","_noIssuesTemplate","_","template","initialize","statusFilterState","reviewerFilterState","reviewerToSelectorMap","commentIDToRowMap","_lastWindowWidth","_$window","$","window","_$currentTab","bindAll","render","$issueSummaryTable","console","assert","length","_$header","children","_$tabs","_$filters","_$reviewerFilter","_$table","_$thead","_$tbody","_$reviewerHeader","find","_$noIssues","hasExistingState","data","removeClass","addClass","_buildMaps","val","_resetFilters","_applyFilters","_checkIssues","stopListening","model","listenTo","_onIssueStatusChanged","off","_onWindowResize","on","user_infobox","timesince","_getIssueRows","filter","sel","not","_updateReviewersPos","is","css","left","offset","getExtents","remove","show","reviewerFilter","statusFilter","text","interpolate","gettext","hide","appendTo","_sortByCol","colIndex","ascending","html","sort","issueA","issueB","$issueA","$issueB","$columnA","$columnB","value1","value2","attr","trim","toLowerCase","issueID1","issueID2","result","each","issueEl","$issue","reviewer","has","append","comment","oldStatus","timestamp","$entry","id","newStatus","get","scrollManager","markForUpdate","$el","$oldCounter","$newCounter","parseInt","Date","toISOString","markUpdated","_onHeaderClicked","evt","stopPropagation","target","parent","index","shiftKey","_onIssueClicked","tagName","currentTarget","trigger","commentType","commentID","commentURL","_onTabChanged","$tab","_onReviewerChanged","winWidth","width"],"sources":["../../../../../../static/rb/js/reviewRequestPage/views/issueSummaryTableView.es6.js"],"sourcesContent":["/**\n * View that manages a display of issues filed on a review request.\n *\n * This displays all the issues filed against a review request, and allows\n * sorting by state and reviewer. As issues are updated on reviews, the\n * table is updated to reflect the new states.\n */\nRB.ReviewRequestPage.IssueSummaryTableView = Backbone.View.extend({\n    events: {\n        'change .rb-c-issue-summary-table__reviewer-filter':\n            '_onReviewerChanged',\n        'click thead th': '_onHeaderClicked',\n        'click .rb-c-tabs__tab': '_onTabChanged',\n        'click tbody tr[data-issue-id]': '_onIssueClicked',\n    },\n\n    /** Maps a status filter state to its corresponding selector. */\n    stateToSelectorMap: {\n        open: '.-is-open',\n        dropped: '.-is-dropped',\n        resolved: '.-is-resolved',\n        verifying: '.-is-verifying-resolved, .-is-verifying-dropped',\n        all: '',\n    },\n\n    /** Maps an issue status type to its corresponding icon. */\n    statusIconsMap: {\n        open: 'rb-icon-issue-open',\n        dropped: 'rb-icon-issue-dropped',\n        resolved: 'rb-icon-issue-resolved',\n        verifying: 'rb-icon-issue-verifying',\n    },\n\n    COLUMN_DESCRIPTION: 1,\n    COLUMN_REVIEWER: 2,\n    COLUMN_LAST_UPDATED: 3,\n\n    _noIssuesTemplate: _.template(dedent`\n        <tr class=\"rb-c-issue-summary-table__no-issues\">\n         <td colspan=\"5\"><em><%- text %></em></td>\n        </tr>\n    `),\n\n    /**\n     * Initialize the issue summary table.\n     */\n    initialize() {\n        this.statusFilterState = null;\n        this.reviewerFilterState = null;\n\n        // Maps a reviewer name to issues issued by the reviewer.\n        this.reviewerToSelectorMap = null;\n\n        // Maps comment IDs to rows in the table.\n        this.commentIDToRowMap = {};\n\n        this._lastWindowWidth = null;\n        this._$window = $(window);\n        this._$currentTab = null;\n\n        _.bindAll(this, '_onWindowResize');\n    },\n\n    /**\n     * Render the issue summary table.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.IssueSummaryTableView:\n     *     This instance, for chaining.\n     */\n    render() {\n        const $issueSummaryTable = this.$('.rb-c-issue-summary-table');\n        console.assert($issueSummaryTable.length === 1);\n\n        this._$header = $issueSummaryTable.children(\n            '.rb-c-review-request-field-tabular__header');\n        this._$tabs = this._$header.children('.rb-c-tabs');\n        this._$filters = this._$header.children(\n            '.rb-c-review-request-field-tabular__filters');\n        this._$reviewerFilter = this._$filters.children(\n            '.rb-c-issue-summary-table__reviewer-filter');\n        this._$table = $issueSummaryTable.children(\n            '.rb-c-review-request-field-tabular__data');\n        this._$thead = this._$table.children('thead');\n        this._$tbody = this._$table.children('tbody');\n        this._$reviewerHeader = this._$thead.find(\n            `tr :nth-child(${this.COLUMN_REVIEWER})`);\n        this._$noIssues = null;\n\n        let hasExistingState = false;\n\n        if (this.statusFilterState === null) {\n            this._$currentTab = this.$('.rb-c-tabs__tab.-is-active');\n            console.assert(this._$currentTab.length === 1);\n\n            this.statusFilterState = this._$currentTab.data('issue-state');\n        } else {\n            this.$('.rb-c-tabs__tab.-is-active').removeClass('-is-active');\n            this._$currentTab =\n                this.$('.rb-c-tabs__tab' +\n                       `[data-issue-state=${this.statusFilterState}]`)\n                    .addClass('-is-active');\n            hasExistingState = true;\n        }\n\n        this._buildMaps();\n\n        if (this.reviewerFilterState === null) {\n            this.reviewerFilterState = this._$reviewerFilter.val();\n        } else {\n            this._$reviewerFilter.val(this.reviewerFilterState);\n            hasExistingState = true;\n        }\n\n        if (hasExistingState) {\n            this._resetFilters();\n            this._applyFilters();\n        } else {\n            this._checkIssues();\n        }\n\n        this.stopListening(this.model, 'issueStatusUpdated');\n        this.listenTo(this.model, 'issueStatusUpdated',\n                      this._onIssueStatusChanged);\n\n        this._$window.off('resize', this._onWindowResize);\n        this._$window.on('resize', this._onWindowResize);\n        this._onWindowResize();\n\n        this.$('.user').user_infobox();\n        this.$('time.timesince').timesince();\n\n        return this;\n    },\n\n    /**\n     * Reset the filters on the list.\n     *\n     * This will unhide all rows, preparing the list for a new filter.\n     */\n    _resetFilters() {\n        this._getIssueRows().filter('.-is-hidden').removeClass('-is-hidden');\n    },\n\n    /**\n     * Apply the filters on the list.\n     *\n     * This will show or hide rows, based on the current state and reviewer\n     * filters.\n     */\n    _applyFilters() {\n        const sel = this.stateToSelectorMap[this.statusFilterState] +\n                    this.reviewerToSelectorMap[this.reviewerFilterState];\n\n        if (sel) {\n            this._getIssueRows()\n                .not(sel)\n                .addClass('-is-hidden');\n        }\n\n        this._checkIssues();\n        this._updateReviewersPos();\n    },\n\n    /**\n     * Update the position of the reviewers filter.\n     *\n     * The filter will be aligned with the header column in the table.\n     */\n    _updateReviewersPos() {\n        if (this._$reviewerHeader.is(':visible')) {\n            this._$filters.css({\n                left: this._$reviewerHeader.offset().left -\n                      this._$table.offset().left +\n                      this._$reviewerHeader.getExtents('p', 'l'),\n            });\n        } else {\n            this._$filters.css('left', '');\n        }\n    },\n\n    /**\n     * Update the UI to reflect whether the issue list is empty.\n     *\n     * If the issue list is empty, this will add a row saying there are no\n     * issues, using wording that reflects the current filter state.\n     */\n    _checkIssues() {\n        if (this._$noIssues !== null) {\n            this._$noIssues.remove();\n            this._$noIssues = null;\n        }\n\n        this._$thead.show();\n\n        if (this._getIssueRows().not('.-is-hidden').length === 0) {\n            const reviewerFilter = this.reviewerFilterState;\n            const statusFilter = this.statusFilterState;\n            let text;\n\n            if (reviewerFilter !== 'all') {\n                if (statusFilter === 'open') {\n                    text = interpolate(\n                        gettext('There are no open issues from %s'),\n                        [reviewerFilter]);\n                } else if (statusFilter === 'verifying') {\n                    text = interpolate(\n                        gettext('There are no issues waiting for verification from %s'),\n                        [reviewerFilter]);\n                } else if (statusFilter === 'dropped') {\n                    text = interpolate(\n                        gettext('There are no dropped issues from %s'),\n                        [reviewerFilter]);\n                } else if (statusFilter === 'resolved') {\n                    text = interpolate(\n                        gettext('There are no resolved issues from %s'),\n                        [reviewerFilter]);\n                }\n            } else {\n                if (statusFilter === 'open') {\n                    text = gettext('There are no open issues');\n                } else if (statusFilter === 'verifying') {\n                    text = gettext('There are no issues waiting for verification');\n                } else if (statusFilter === 'dropped') {\n                    text = gettext('There are no dropped issues');\n                } else if (statusFilter === 'resolved') {\n                    text = gettext('There are no resolved issues');\n                }\n            }\n\n            this._$thead.hide();\n\n            this._$noIssues =\n                $(this._noIssuesTemplate({\n                    text: text,\n                }))\n                .appendTo(this._$tbody);\n        }\n    },\n\n    /**\n     * Return the table rows containing issues.\n     *\n     * Returns:\n     *     jQuery:\n     *     A selector for the rows containing issues.\n     */\n    _getIssueRows() {\n        return this._$tbody\n            .children()\n            .not('.rb-c-issue-summary-table__no-issues');\n    },\n\n    /**\n     * Sort the issues by the selected column in ascending order.\n     *\n     * The Last Updated column will be sorted based on its timestamp. All\n     * other columns will be sorted based on their normalized text contents.\n     *\n     * Args:\n     *     colIndex (number):\n     *         The 0-based index of the column clicked.\n     *\n     *     ascending (boolean):\n     *         Whether to sort by ascending order.\n     */\n    _sortByCol(colIndex, ascending) {\n        this._$tbody.html(this._getIssueRows().sort((issueA, issueB) => {\n            const $issueA = $(issueA);\n            const $issueB = $(issueB);\n            const $columnA = $issueA.children(`td:nth-child(${colIndex})`);\n            const $columnB = $issueB.children(`td:nth-child(${colIndex})`);\n            let value1;\n            let value2;\n\n            if (colIndex === this.COLUMN_LAST_UPDATED) {\n                /*\n                 * Note that we're reversing the values here. We want newer\n                 * timestamps (which is \"greater\", comparison-wise).\n                 */\n                value1 = $columnB.children('time').attr('datetime');\n                value2 = $columnA.children('time').attr('datetime');\n            } else {\n                value1 = $columnA.text().trim().toLowerCase();\n                value2 = $columnB.text().trim().toLowerCase();\n            }\n\n            /*\n             * If the two values are the same, we'll want to order by\n             * issue ID instead, helping to keep ordering consistent within\n             * an author or published timestamp.\n             *\n             * They should always be in ascending order, relative to the\n             * column being sorted.\n             */\n            if (value1 === value2) {\n                const issueID1 = $issueA.data('issue-id');\n                const issueID2 = $issueB.data('issue-id');\n\n                if (ascending) {\n                    value1 = issueID1;\n                    value2 = issueID2;\n                } else {\n                    value1 = issueID2;\n                    value2 = issueID1;\n                }\n            }\n\n            /*\n             * Compute an initial value intended for ascending order. Then\n             * we'll negate it if sorting in descending order.\n             */\n            let result;\n\n            if (value1 < value2) {\n                result = -1;\n            } else if (value1 > value2) {\n                result = 1;\n            } else {\n                result = 0;\n            }\n\n            if (!ascending) {\n                result = -result;\n            }\n\n            return result;\n        }));\n    },\n\n    /**\n     * Build maps for looking up issue rows based on state.\n     *\n     * This will build a map (and filter entries) for reviewers, and build\n     * a map of comment IDs to rows.\n     */\n    _buildMaps() {\n        this._$reviewerFilter.children().not('[value=\"all\"]').remove();\n\n        this.reviewerToSelectorMap = {\n            all: '',\n        };\n\n        _.each(this._getIssueRows(), issueEl => {\n            const $issue = $(issueEl);\n\n            this.commentIDToRowMap[$issue.data('issue-id')] = $issue;\n\n            const reviewer = $issue.data('reviewer');\n\n            if (!_.has(this.reviewerToSelectorMap, reviewer)) {\n                this.reviewerToSelectorMap[reviewer] =\n                    `[data-reviewer=\"${reviewer}\"]`;\n                this._$reviewerFilter.append(\n                    $('<option>').text(reviewer).val(reviewer));\n            }\n        });\n    },\n\n    /**\n     * Handler for when the issue status of a comment changes.\n     *\n     * Updates the display of the table to reflect the state of that issue.\n     *\n     * Args:\n     *     comment (RB.BaseComment):\n     *         The comment whose issue has changed.\n     *\n     *     oldStatus (string):\n     *         The old status.\n     *\n     *     timestamp (Date):\n     *         The new timestamp for the comment.\n     */\n    _onIssueStatusChanged(comment, oldStatus, timestamp) {\n        const $entry = this.commentIDToRowMap[comment.id];\n        const newStatus = comment.get('issueStatus');\n\n        RB.scrollManager.markForUpdate(this.$el);\n\n        /* Update the icon for this entry to reflect the new status. */\n        $entry\n            .removeClass(`-is-${oldStatus}`)\n            .addClass(`-is-${newStatus}`)\n            .find('.rb-icon')\n                .removeClass(this.statusIconsMap[oldStatus])\n                .addClass(this.statusIconsMap[newStatus]);\n\n        /* Show or hide the entry according to the current filter state. */\n        if (this.statusFilterState !== newStatus &&\n            this.statusFilterState !== 'all') {\n            $entry.addClass('-is-hidden');\n        } else {\n            $entry.removeClass('-is-hidden');\n        }\n\n        /* Update the displayed counters for this issue type. */\n        const $oldCounter =\n            this._$tabs\n            .children(`[data-issue-state=${oldStatus}]`)\n            .find('.rb-c-issue-summary-table__counter');\n        const $newCounter =\n            this._$tabs\n            .children(`[data-issue-state=${newStatus}]`)\n            .find('.rb-c-issue-summary-table__counter');\n\n        $oldCounter.text(parseInt($oldCounter.text(), 10) - 1);\n        $newCounter.text(parseInt($newCounter.text(), 10) + 1);\n\n        /* Update the timestamp for this issue's entry. */\n        $entry.find('time')\n            .attr('datetime', new Date(timestamp).toISOString())\n            .text(timestamp)\n            .timesince();\n\n        /*\n         * If we're no longer showing any issues for this filter, update\n         * the table accordingly.\n         */\n        this._checkIssues();\n\n        /*\n         * The updates may have impacted the reviewers filter, so update its\n         * position.\n         */\n        this._updateReviewersPos();\n\n        /*\n         * Update the scroll position to counteract the addition/deletion\n         * of the entry in the issue summary table, so the page doesn't\n         * appear to jump.\n         */\n        RB.scrollManager.markUpdated(this.$el);\n    },\n\n    /**\n     * Handler for when a header on the table is clicked.\n     *\n     * This will sort the table by the header.\n     *\n     * Args:\n     *     evt (Event):\n     *         The click event.\n     */\n    _onHeaderClicked(evt) {\n        evt.stopPropagation();\n\n        if (this._getIssueRows().not('.-is-hidden').length !== 0) {\n            this._sortByCol(\n                $(evt.target).parent().children().index(evt.target) + 1,\n                !evt.shiftKey);\n        }\n    },\n\n    /**\n     * Handler for when an issue is clicked.\n     *\n     * This will notify any listeners to the ``issueClicked`` event that the\n     * issue has been clicked, providing the comment type and the issue ID.\n     *\n     * It will then navigate to the URL for that particular comment.\n     *\n     * Args:\n     *     evt (Event):\n     *         The click event.\n     */\n    _onIssueClicked(evt) {\n        if (evt.target.tagName === 'A') {\n            /* Allow the link to go through. */\n            return;\n        }\n\n        evt.stopPropagation();\n\n        /*\n         * Extract the comment's attributes from the issue element and trigger\n         * the issueClicked event so the page can navigate the user to the\n         * relevant issue comment.\n         */\n        const $el = $(evt.currentTarget);\n\n        this.trigger('issueClicked', {\n            commentType: $el.data('comment-type'),\n            commentID: $el.data('issue-id'),\n            commentURL: $el.data('comment-href'),\n        });\n    },\n\n    /**\n     * Handler for when the tab has changed.\n     *\n     * This will switch the view to show the issues that match the tab's\n     * issue state and the current reviewer filter.\n     *\n     * Args:\n     *     evt (Event):\n     *         The click event.\n     */\n    _onTabChanged(evt) {\n        const $tab = $(evt.currentTarget);\n\n        this._$currentTab.removeClass('-is-active');\n\n        this._resetFilters();\n        this.statusFilterState = $tab.data('issue-state');\n        this._applyFilters();\n\n        $tab.addClass('-is-active');\n        this._$currentTab = $tab;\n    },\n\n    /**\n     * Handler for when the reviewer filter changes.\n     *\n     * This will switch the view to show issues that match the reviewer\n     * and the current issue filter state.\n     */\n    _onReviewerChanged() {\n        this._resetFilters();\n        this.reviewerFilterState = this._$reviewerFilter.val();\n        this._applyFilters();\n    },\n\n    /**\n     * Handler for when the window resizes.\n     *\n     * Updates the calculated position of the reviewers filter.\n     */\n    _onWindowResize() {\n        const winWidth = this._$window.width();\n\n        if (winWidth !== this._lastWindowWidth) {\n            this._updateReviewersPos();\n        }\n\n        this._lastWindowWidth = winWidth;\n    }\n});\n"],"mappings":"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","ignoreList":[]}