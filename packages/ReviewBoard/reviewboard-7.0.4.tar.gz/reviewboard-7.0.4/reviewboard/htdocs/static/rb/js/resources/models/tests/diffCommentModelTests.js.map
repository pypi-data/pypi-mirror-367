{"version":3,"file":"diffCommentModelTests.js","names":["suite","model","beforeEach","RB","DiffComment","fileDiffID","parentObject","BaseResource","it","set","beginLineNum","endLineNum","expect","getNumLines","toBe","describe","data","parse","stat","diff_comment","id","issue_opened","issue_status","text_type","text","first_line","num_lines","filediff","source_file","interfilediff","not","undefined","issueOpened","issueStatus","BaseComment","STATE_RESOLVED","richText","fileDiff","get","interFileDiff","spyOn","prototype","and","callThrough","toJSON","toHaveBeenCalled","force_text_type","include_text_types","filediff_id","interfilediff_id","validate","strings","BEGINLINENUM_GTE_0","ENDLINENUM_GTE_0","BEGINLINENUM_LTE_ENDLINENUM","INVALID_FILEDIFF_ID"],"sources":["../../../../../../../static/rb/js/resources/models/tests/diffCommentModelTests.es6.js"],"sourcesContent":["suite('rb/resources/models/DiffComment', function() {\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.DiffComment({\n            fileDiffID: 16,\n            parentObject: new RB.BaseResource({\n                'public': true,\n            })\n        });\n    });\n\n    it('getNumLines', function() {\n        model.set({\n            beginLineNum: 5,\n            endLineNum: 10,\n        });\n\n        expect(model.getNumLines()).toBe(6);\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                diff_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                    first_line: 10,\n                    num_lines: 5,\n                    filediff: {\n                        id: 1,\n                        source_file: 'my-file',\n                    },\n                    interfilediff: {\n                        id: 2,\n                        source_file: 'my-file',\n                    },\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n            expect(data.beginLineNum).toBe(10);\n            expect(data.endLineNum).toBe(14);\n            expect(data.fileDiff).not.toBe(undefined);\n            expect(data.fileDiff.id).toBe(1);\n            expect(data.fileDiff.get('sourceFilename')).toBe('my-file');\n            expect(data.interFileDiff).not.toBe(undefined);\n            expect(data.interFileDiff.id).toBe(2);\n            expect(data.interFileDiff.get('sourceFilename')).toBe('my-file');\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n\n        it('first_line field', function() {\n            model.set({\n                beginLineNum: 100,\n                endLineNum: 100\n            });\n\n            const data = model.toJSON();\n            expect(data.first_line).toBe(100);\n        });\n\n        it('num_lines field', function() {\n            model.set({\n                beginLineNum: 100,\n                endLineNum: 105\n            });\n\n            const data = model.toJSON();\n            expect(data.num_lines).toBe(6);\n        });\n\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        describe('filediff_id field', function() {\n            it('When loaded', function() {\n                model.set('loaded', true);\n                const data = model.toJSON();\n                expect(data.filediff_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                const data = model.toJSON();\n                expect(data.filediff_id).toBe(16);\n            });\n        });\n\n        describe('interfilediff_id field', function() {\n            it('When loaded', function() {\n                model.set('loaded', true);\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                model.set('interFileDiffID', 50);\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(50);\n            });\n\n            it('When not loaded and unset', function() {\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(undefined);\n            });\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n\n        describe('beginLineNum/endLineNum', function() {\n            describe('Valid values', function() {\n                it('beginLineNum == 0, endLineNum == 0', function() {\n                    expect(model.validate({\n                        beginLineNum: 0,\n                        endLineNum: 0,\n                    })).toBe(undefined);\n                });\n\n                it('beginLineNum > 0, endLineNum == beginLineNum', function() {\n                    expect(model.validate({\n                        beginLineNum: 10,\n                        endLineNum: 10,\n                    })).toBe(undefined);\n                });\n\n                it('beginLineNum > 0, endLineNum > 0', function() {\n                    expect(model.validate({\n                        beginLineNum: 10,\n                        endLineNum: 11,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('beginLineNum < 0', function() {\n                    expect(model.validate({\n                        beginLineNum: -1,\n                    })).toBe(RB.DiffComment.strings.BEGINLINENUM_GTE_0);\n                });\n\n                it('endLineNum < 0', function() {\n                    expect(model.validate({\n                        endLineNum: -1,\n                    })).toBe(RB.DiffComment.strings.ENDLINENUM_GTE_0);\n                });\n\n                it('endLineNum < beginLineNum', function() {\n                    expect(model.validate({\n                        beginLineNum: 20,\n                        endLineNum: 10,\n                    })).toBe(\n                        RB.DiffComment.strings.BEGINLINENUM_LTE_ENDLINENUM);\n                });\n            });\n        });\n\n        describe('fileDiffID', function() {\n            it('With value', function() {\n                expect(model.validate({\n                    fileDiffID: 42,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    fileDiffID: null,\n                })).toBe(RB.DiffComment.strings.INVALID_FILEDIFF_ID);\n            });\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}