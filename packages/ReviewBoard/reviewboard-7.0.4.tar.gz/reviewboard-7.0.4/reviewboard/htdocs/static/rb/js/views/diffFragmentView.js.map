{"version":3,"file":"diffFragmentView.js","names":["RB","DiffFragmentView","Backbone","View","extend","events","COLLAPSED_HEADERS_HEIGHT","_controlsHoverTimeout","initialize","options","_loadDiff","loadDiff","_collapsible","collapsible","_$table","_$thead","_$diffHeaders","_$controls","_centeredMgr","_contextExpanded","render","$el","removeClass","children","find","is","hideControls","showControls","_","defer","addClass","css","animate","$firstDiffHeader","eq","hasClass","translateY","height","each","diffHeaderEl","$diffHeader","$","scale","_expandOrCollapse","$btn","linesOfContext","data","onDone","_onExpandOrCollapseFinished","bind","_tryShowControlsDelayed","delay","_tryHideControlsDelayed","setActivityIndicator","remove","$collapseButtons","length","CenteredElementManager","elements","Map","Array","prototype","map","call","el","$chunks","closest","not","$top","$bottom","updatePosition","_onExpandButtonClicked","e","preventDefault","stopPropagation","currentTarget","_onCollapseButtonClicked"],"sources":["../../../../../static/rb/js/views/diffFragmentView.es6.js"],"sourcesContent":["/**\n * A view for managing a loaded diff fragment and its state.\n *\n * This displays a fragment of a diff, offering options for expanding and\n * collapsing content.\n */\nRB.DiffFragmentView = Backbone.View.extend({\n    events: {\n        'click .diff-expand-btn': '_onExpandButtonClicked',\n        'click .rb-c-diff-collapse-button': '_onCollapseButtonClicked',\n        'mouseenter': '_tryShowControlsDelayed',\n        'mouseleave': '_tryHideControlsDelayed',\n    },\n\n    /** The exposed headers height to show when collapsed. */\n    COLLAPSED_HEADERS_HEIGHT: 4,\n\n    /** The timeout for a mouseout event to fire after it actually occurs. */\n    _controlsHoverTimeout: 250,\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options that control the view. This must at least provide\n     *         ``loadDiff``.\n     *\n     * Option Args:\n     *     collapsible (bool, optional):\n     *         Whether or not the controls on the view can be collapsed. If\n     *         collapsible, they will also start collapsed. This defaults to\n     *         ``false``.\n     *\n     *     loadDiff (function):\n     *         The function to call to load more of the diff. This must be\n     *         provided by the caller.\n     */\n    initialize(options={}) {\n        this._loadDiff = options.loadDiff;\n        this._collapsible = !!options.collapsible;\n\n        this._$table = null;\n        this._$thead = null;\n        this._$diffHeaders = null;\n        this._$controls = null;\n\n        this._centeredMgr = null;\n        this._contextExpanded = false;\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will start the view off in a collapsed mode.\n     *\n     * Returns:\n     *     RB.DiffFragmentView:\n     *     This instance, for chaining.\n     */\n    render() {\n        /*\n         * Make sure this class isn't on the fragment, in case we're\n         * reloading content.\n         */\n        this.$el.removeClass('allow-transitions');\n\n        this._$table = this.$el.children('table');\n        this._$diffHeaders = this._$table.find('.diff-header');\n        this._$thead = this._$table.children('thead');\n        this._$controls = this._$diffHeaders.find('td > div');\n\n        if (this._collapsible && this.$el.is(':visible')) {\n            this.hideControls();\n        } else {\n            /*\n             * If we're not collapsible, then we're always expanded\n             * by default.\n             */\n            this.showControls();\n        }\n\n        if (this._collapsible) {\n            /*\n             * Once we've hidden the controls, we want to enable transitions for\n             * hovering. We don't apply this before (or make it implicit)\n             * because we don't want all the transitions to take place on page\n             * load, as it's both visually weird and messes with the height\n             * calculation for the collapsed areas.\n             */\n            _.defer(() => this.$el.addClass('allow-transitions'));\n        }\n\n        return this;\n    },\n\n    /**\n     * Show the controls on the specified comment container.\n     */\n    showControls() {\n        /* This will effectively control the opacity of the controls. */\n        this._$table\n            .removeClass('collapsed')\n            .addClass('expanded');\n\n        /*\n         * Undo all the transforms, so that these animate to their normal\n         * positions.\n         */\n        this._$thead.css('transform', '');\n        this._$diffHeaders.css('transform', '');\n    },\n\n    /**\n     * Hide the controls on the specified comment container.\n     *\n     * Args:\n     *     animate (boolean, optional):\n     *         Whether to animate hiding the controls. By default, this is\n     *         ``true``.\n     */\n    hideControls(animate) {\n        /*\n         * Never hide the controls when context has been expanded. It creates\n         * a sort of jarring initial effect.\n         */\n        if (this._contextExpanded) {\n            return;\n        }\n\n        if (animate === false) {\n            this.$el.removeClass('allow-transitions');\n        }\n\n        this._$table\n            .removeClass('expanded')\n            .addClass('collapsed');\n\n        const $firstDiffHeader = this._$diffHeaders.eq(0);\n\n        if ($firstDiffHeader.hasClass('diff-header-above')) {\n            /*\n             * If the first diff header is present, we'll need to transition\n             * the header down to be flush against the collapsed header.\n             */\n            const translateY = $firstDiffHeader.height() -\n                               this.COLLAPSED_HEADERS_HEIGHT;\n\n            this._$thead.css('transform', `translateY(${translateY}px)`);\n        }\n\n        /*\n         * The diff headers won't have the same heights exactly. We need to\n         * compute the proper scale for the correct size per-header.\n         */\n        _.each(this._$diffHeaders, diffHeaderEl => {\n            const $diffHeader = $(diffHeaderEl);\n            const scale = this.COLLAPSED_HEADERS_HEIGHT / $diffHeader.height();\n\n            $diffHeader.css('transform', `scaleY(${scale})`);\n        });\n\n        if (animate === false) {\n            _.defer(() => this.$el.addClass('allow-transitions'));\n        }\n    },\n\n    /*\n     * Common functionality around expand or collapsing the diff fragment.\n     *\n     * This will grab information from the expand/collapse button provided\n     * and load a new diff fragment representing the state described in that\n     * button. The new diff will represent either an expanded or collapsed\n     * state.\n     *\n     * Args:\n     *     $btn (jQuery):\n     *         The button element that triggered the event leading to this\n     *         function call.\n     */\n    _expandOrCollapse($btn) {\n        this._loadDiff({\n            linesOfContext: $btn.data('lines-of-context'),\n            onDone: this._onExpandOrCollapseFinished.bind(this),\n        });\n    },\n\n    /**\n     * Attempt to hide the controls in the given container after a delay.\n     */\n    _tryShowControlsDelayed() {\n        if (this._collapsible) {\n            _.delay(() => {\n                if (this.$el.is(':hover')) {\n                    this.showControls();\n                }\n            }, this._controlsHoverTimeout);\n        }\n    },\n\n    /**\n     * Attempt to hide the controls in the given container after a delay.\n     */\n    _tryHideControlsDelayed() {\n        if (this._collapsible) {\n            _.delay(() => {\n                if (!this.$el.is(':hover')) {\n                    this.hideControls();\n                }\n            }, this._controlsHoverTimeout);\n        }\n    },\n\n    /*\n     * Handler for when an expanded or collapsed fragment has loaded.\n     *\n     * This will reset the state of the view, based on the new fragment, and\n     * re-render the view.\n     */\n    _onExpandOrCollapseFinished() {\n        RB.setActivityIndicator(false, {});\n\n        /* All our HTML has changed, so clean up and re-render everything. */\n        if (this._centeredMgr !== null) {\n            this._centeredMgr.remove();\n            this._centeredMgr = null;\n        }\n\n        const $collapseButtons = this.$('.rb-c-diff-collapse-button');\n\n        /*\n         * Check if we have any collapse buttons. If so, we'll need to track\n         * them in a CenteredElementManager.\n         */\n        if ($collapseButtons.length > 0) {\n            this._centeredMgr = new RB.CenteredElementManager({\n                elements: new Map(Array.prototype.map.call(\n                    $collapseButtons,\n                    el => {\n                        const $chunks = $(el)\n                            .closest('.sidebyside')\n                            .children('tbody')\n                            .not('.diff-header');\n\n                        return [el, {\n                            $top: $chunks.eq(0),\n                            $bottom: $chunks.eq(-1),\n                        }];\n                    }))\n            });\n            this._centeredMgr.updatePosition();\n\n            this._contextExpanded = true;\n        } else {\n            this._contextExpanded = false;\n        }\n\n        this.render();\n\n        if (!this._contextExpanded) {\n            this._tryHideControlsDelayed();\n        }\n    },\n\n    /**\n     * Expand a diff fragment.\n     *\n     * When the expand button is clicked, this will trigger loading of a\n     * new diff fragment containing the context as defined by the data\n     * attributes on the button.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onExpandButtonClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._expandOrCollapse($(e.currentTarget), e);\n    },\n\n    /**\n     * Collapse an expanded diff fragment.\n     *\n     * When the collapse button is clicked, this will trigger loading of a\n     * new diff fragment containing the context as defined by the data\n     * attributes on the button.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onCollapseButtonClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._expandOrCollapse($(e.currentTarget), e);\n    },\n});\n"],"mappings":"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","ignoreList":[]}