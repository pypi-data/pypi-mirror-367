{"version":3,"file":"reviewReplyEditorModel.js","names":["RB","ReviewRequestPage","ReviewReplyEditor","Backbone","Model","extend","defaults","anchorPrefix","contextID","contextType","commentID","hasDraft","replyObject","review","reviewReply","richText","text","replyClasses","diff_comments","DiffCommentReply","screenshot_comments","ScreenshotCommentReply","file_attachment_comments","FileAttachmentCommentReply","general_comments","GeneralCommentReply","initialize","on","_setupReviewReply","save","get","valueAttr","richTextAttr","obj","ReplyClass","console","assert","parentObject","replyToID","id","set","trigger","ready","forceTextType","includeTextTypes","attrs","resetStateIfEmpty","trim","isNew","_resetState","destroy","oldReviewReply","previous","off","listenTo","shouldDiscardIfEmpty","discardIfEmpty"],"sources":["../../../../../../static/rb/js/reviewRequestPage/models/reviewReplyEditorModel.es6.js"],"sourcesContent":["/**\n * An editor for replying to parts of a review.\n *\n * This will track the editing state of a reply to the body top/bottom of\n * a review or a comment, and handles saving of the reply.\n */\nRB.ReviewRequestPage.ReviewReplyEditor = Backbone.Model.extend({\n    defaults: {\n        anchorPrefix: null,\n        contextID: null,\n        contextType: null,\n        commentID: null,\n        hasDraft: false,\n        replyObject: null,\n        review: null,\n        reviewReply: null,\n        richText: null,\n        text: '',\n    },\n\n    replyClasses: {\n        diff_comments: RB.DiffCommentReply,\n        screenshot_comments: RB.ScreenshotCommentReply,\n        file_attachment_comments: RB.FileAttachmentCommentReply,\n        general_comments: RB.GeneralCommentReply,\n    },\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        this.on('change:reviewReply', this._setupReviewReply, this);\n        this._setupReviewReply();\n    },\n\n    /**\n     * Save the current reply.\n     *\n     * This will trigger the \"saving\" event before saving, and will trigger\n     * \"saved\" after it succeeds.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async save() {\n        const contextType = this.get('contextType');\n        const reviewReply = this.get('reviewReply');\n        let valueAttr;\n        let richTextAttr;\n        let obj;\n\n        if (contextType === 'body_top') {\n            valueAttr = 'bodyTop';\n            richTextAttr = 'bodyTopRichText';\n            obj = reviewReply;\n        } else if (contextType === 'body_bottom') {\n            valueAttr = 'bodyBottom';\n            richTextAttr = 'bodyBottomRichText';\n            obj = reviewReply;\n        } else {\n            valueAttr = 'text';\n            richTextAttr = 'richText';\n            obj = this.get('replyObject');\n\n            if (!obj) {\n                const ReplyClass = this.replyClasses[contextType];\n\n                console.assert(ReplyClass,\n                               \"Unexpected context type '%s'\",\n                               contextType);\n\n                obj = new ReplyClass({\n                    parentObject: reviewReply,\n                    replyToID: this.get('contextID'),\n                    id: this.get('commentID'),\n                });\n            }\n        }\n\n        this.set('replyObject', obj);\n\n        this.trigger('saving');\n\n        await obj.ready();\n\n        const text = this.get('text');\n\n        if (text) {\n            obj.set(valueAttr, text);\n            obj.set(richTextAttr, this.get('richText'));\n            obj.set({\n                forceTextType: 'html',\n                includeTextTypes: 'raw',\n            });\n\n            await obj.save({\n                attrs: [valueAttr, richTextAttr, 'forceTextType',\n                        'includeTextTypes', 'replyToID'],\n            });\n\n            this.set({\n                hasDraft: true,\n                text: obj.get(valueAttr),\n                richText: true,\n            });\n            this.trigger('textUpdated');\n            this.trigger('saved');\n        } else {\n            await this.resetStateIfEmpty();\n        }\n    },\n\n    /**\n     * Reset the editor state, if the text isn't set.\n     *\n     * If the text attribute has a value, this will do nothing.\n     * Otherwise, it will destroy the reply or the comment (depending on\n     * what is being replied to), and then trigger \"resetState\".\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async resetStateIfEmpty() {\n        const text = this.get('text');\n\n        if (text.trim() !== '') {\n            return;\n        }\n\n        const replyObject = this.get('replyObject');\n\n        if (!replyObject || replyObject.isNew()) {\n            await this._resetState();\n        } else {\n            const contextType = this.get('contextType');\n\n            if (contextType === 'body_top' ||\n                contextType === 'body_bottom') {\n                await this._resetState(true);\n            } else {\n                await replyObject.destroy();\n                await this._resetState();\n            }\n        }\n    },\n\n    /**\n     * Set up a new ReviewReply for this editor.\n     *\n     * This will first stop listening to any events on an old reviewReply.\n     *\n     * It will then listen for \"destroy\" and \"published\" events on the new\n     * reply. If either triggers, the \"discarded\" or \"published\" signals\n     * (respectively) will be triggered, and the state of the editor will reset.\n     */\n    _setupReviewReply() {\n        const reviewReply = this.get('reviewReply');\n        const oldReviewReply = this.previous('reviewReply');\n\n        if (oldReviewReply) {\n            oldReviewReply.off(null, null, this);\n        }\n\n        this.listenTo(reviewReply, 'destroyed', async () => {\n            this.trigger('discarded');\n            await this._resetState();\n            this.trigger('discarded-finished');\n        });\n\n        this.listenTo(reviewReply, 'published', async () => {\n            this.trigger('published');\n            await this._resetState(false);\n            this.trigger('published-finished');\n        });\n    },\n\n    /**\n     * Resets the state of the editor.\n     *\n     * Args:\n     *     shouldDiscardIfEmpty (boolean):\n     *         Whether to discard the entire reply if there are no individual\n     *         comments.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async _resetState(shouldDiscardIfEmpty) {\n        this.set({\n            commentID: null,\n            hasDraft: false,\n            replyObject: null,\n        });\n\n        if (shouldDiscardIfEmpty === false) {\n            this.trigger('resetState');\n        } else {\n            await this.get('reviewReply').discardIfEmpty();\n            this.trigger('resetState');\n        }\n    },\n});\n"],"mappings":"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","ignoreList":[]}