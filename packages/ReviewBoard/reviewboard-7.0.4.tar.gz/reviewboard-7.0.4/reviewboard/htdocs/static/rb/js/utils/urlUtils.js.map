{"version":3,"file":"urlUtils.js","names":["RB","getLocationHash","url","undefined","window","location","href","rawHash","split","decodedHash","decodeURIComponent","match","console","warn","navigateTo","options","replace","reload"],"sources":["../../../../../static/rb/js/utils/urlUtils.es6.js"],"sourcesContent":["/**\n * Return the location hash in a safe manner.\n *\n * If the hash does not look like it can be trusted, we will instead return\n * the empty string.\n *\n * Args:\n *     url (string, optional):\n *         An optional URL to parse the hash out of. If not provided,\n *         ``window.location.href`` is used instead.\n *\n * Returns:\n *     string:\n *     The location hash.\n */\nRB.getLocationHash = function(url) {\n    if (url === undefined) {\n        url = window.location.href;\n    }\n\n    const rawHash = url.split('#')[1] || '';\n    const decodedHash = decodeURIComponent(rawHash);\n\n    if (!decodedHash.match(/^[A-Za-z0-9,_\\.-]*$/)) {\n        /*\n         * This hash contains characters we cannot necessarily trust.\n         * Instead of hoping we can trust it or attempting to sanitize it,\n         * we are going to ignore it.\n         */\n        console.warn('Ignoring location hash \"%s\".', rawHash);\n        return '';\n    }\n\n    return decodedHash;\n};\n\n\n/**\n * Navigate to a new URL.\n *\n * This is preferable over setting ``window.location``, as the operation can\n * be spied upon in unit tests.\n *\n * Version Added:\n *     4.0.12, 5.0.2\n *\n * Args:\n *     url (string):\n *         The URL to navigate to.\n *\n *     options (object, optional):\n *         Options for the operation.\n *\n * Option Args:\n *     replace (boolean):\n *         Whether to replace the current history entry.\n */\nRB.navigateTo = function(url, options={}) {\n    if (options && options.replace) {\n        window.location.replace(url);\n    } else {\n        window.location = url;\n    }\n};\n\n\n/**\n * Reload the page.\n *\n * This wrapper exists so the operation can be spied on in unit tests.\n *\n * Version Added:\n *     6.0\n */\nRB.reload = function() {\n    window.location.reload();\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,eAAe,GAAG,UAASC,GAAG,EAAE;EAC/B,IAAIA,GAAG,KAAKC,SAAS,EAAE;IACnBD,GAAG,GAAGE,MAAM,CAACC,QAAQ,CAACC,IAAI;EAC9B;EAEA,MAAMC,OAAO,GAAGL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACvC,MAAMC,WAAW,GAAGC,kBAAkB,CAACH,OAAO,CAAC;EAE/C,IAAI,CAACE,WAAW,CAACE,KAAK,CAAC,qBAAqB,CAAC,EAAE;IAC3C;AACR;AACA;AACA;AACA;IACQC,OAAO,CAACC,IAAI,CAAC,8BAA8B,EAAEN,OAAO,CAAC;IACrD,OAAO,EAAE;EACb;EAEA,OAAOE,WAAW;AACtB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,EAAE,CAACc,UAAU,GAAG,UAASZ,GAAG,EAAEa,OAAO,GAAC,CAAC,CAAC,EAAE;EACtC,IAAIA,OAAO,IAAIA,OAAO,CAACC,OAAO,EAAE;IAC5BZ,MAAM,CAACC,QAAQ,CAACW,OAAO,CAACd,GAAG,CAAC;EAChC,CAAC,MAAM;IACHE,MAAM,CAACC,QAAQ,GAAGH,GAAG;EACzB;AACJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,EAAE,CAACiB,MAAM,GAAG,YAAW;EACnBb,MAAM,CAACC,QAAQ,CAACY,MAAM,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]}