{"version":3,"file":"fileAttachmentCommentModel.js","names":["RB","FileAttachmentComment","BaseComment","extend","defaults","_","diffAgainstFileAttachmentID","diffAgainstFileAttachment","fileAttachmentID","fileAttachment","linkText","reviewURL","thumbnailHTML","prototype","rspNamespace","expandedFields","attrToJsonMap","serializedAttrs","concat","deserializedAttrs","serializers","JSONSerializers","onlyIfUnloaded","onlyIfUnloadedAndValue","parseResourceData","rsp","result","call","FileAttachment","file_attachment","parse","id","diff_against_file_attachment","validate","attrs","options","has","strings","INVALID_FILE_ATTACHMENT_ID","_super"],"sources":["../../../../../../static/rb/js/resources/models/fileAttachmentCommentModel.es6.js"],"sourcesContent":["/**\n * A comment on a file attachment.\n *\n * Model Attributes:\n *     diffAgainstFileAttachmentID (number):\n *         The ID of the file attachment that is the \"new\" side of a comment on\n *         a file diff.\n *\n *     diffAgainstFileAttachment (RB.FileAttachment):\n *         The file attachment that is the \"new\" side of a comment on a file\n *         diff.\n *\n *     fileAttachmentID (number):\n *         The ID of the file attachment that the comment is on, or the ID of\n *         the file attachment that is the \"old\" side of a comment on a file\n *         diff.\n *\n *     fileAttachment (RB.FileAttachment):\n *         The file attachment that the comment is on, or the ID of the file\n *         attachment that is the \"old\" side of a comment on a file diff.\n *\n *     linkText (string):\n *         The text used to describe a link to the file. This may differ\n *         depending on the comment.\n *\n *     reviewURL (string):\n *         The URL for the file attachment review UI for the comment.\n *\n *     thumbnailHTML (string):\n *         The HTML representing a thumbnail, if any, for this comment.\n */\nRB.FileAttachmentComment = RB.BaseComment.extend({\n    defaults: _.defaults({\n        diffAgainstFileAttachmentID: null,\n        diffAgainstFileAttachment: null,\n        fileAttachmentID: null,\n        fileAttachment: null,\n        linkText: null,\n        reviewURL: null,\n        thumbnailHTML: null\n    }, RB.BaseComment.prototype.defaults()),\n\n    rspNamespace: 'file_attachment_comment',\n    expandedFields: ['diff_against_file_attachment', 'file_attachment'],\n\n    attrToJsonMap: _.defaults({\n        diffAgainstFileAttachmentID: 'diff_against_file_attachment_id',\n        fileAttachmentID: 'file_attachment_id',\n        linkText: 'link_text',\n        reviewURL: 'review_url',\n        thumbnailHTML: 'thumbnail_html'\n    }, RB.BaseComment.prototype.attrToJsonMap),\n\n    serializedAttrs: [\n        'diffAgainstFileAttachmentID',\n        'fileAttachmentID'\n    ].concat(RB.BaseComment.prototype.serializedAttrs),\n\n    deserializedAttrs: [\n        'linkText',\n        'thumbnailHTML',\n        'reviewURL'\n    ].concat(RB.BaseComment.prototype.deserializedAttrs),\n\n    serializers: _.defaults({\n        fileAttachmentID: RB.JSONSerializers.onlyIfUnloaded,\n        diffAgainstFileAttachmentID: RB.JSONSerializers.onlyIfUnloadedAndValue\n    }, RB.BaseComment.prototype.serializers),\n\n    /**\n     * Deserialize comment data from an API payload.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attribute values to set on the model.\n     */\n    parseResourceData(rsp) {\n        const result = RB.BaseComment.prototype.parseResourceData.call(\n            this, rsp);\n\n        result.fileAttachment = new RB.FileAttachment(rsp.file_attachment, {\n            parse: true\n        });\n        result.fileAttachmentID = result.fileAttachment.id;\n\n        if (rsp.diff_against_file_attachment) {\n            result.diffAgainstFileAttachment = new RB.FileAttachment(\n                rsp.diff_against_file_attachment, {\n                    parse: true\n                });\n\n            result.diffAgainstFileAttachmentID =\n                result.diffAgainstFileAttachment.id;\n        }\n\n        return result;\n    },\n\n    /**\n     * Perform validation on the attributes of the model.\n     *\n     * This will check the file attachment ID along with the default\n     * comment validation.\n     *\n     * Args:\n     *     attrs (object):\n     *         Model attributes to validate.\n     *\n     *     options (object):\n     *         Additional options for the operation.\n     *\n     * Returns:\n     *     string:\n     *     An error string, if appropriate.\n     */\n    validate(attrs, options) {\n        if (_.has(attrs, 'fileAttachmentID') && !attrs.fileAttachmentID) {\n            return RB.FileAttachmentComment.strings.INVALID_FILE_ATTACHMENT_ID;\n        }\n\n        return _super(this).validate.call(this, attrs, options);\n    }\n}, {\n    strings: {\n        INVALID_FILE_ATTACHMENT_ID: 'fileAttachmentID must be a valid ID'\n    }\n});\n"],"mappings":"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","ignoreList":[]}