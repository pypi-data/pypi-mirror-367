{"version":3,"file":"uploadDiffModel.js","names":["RB","UploadDiffModel","Backbone","Model","extend","defaults","basedir","changeNumber","diffFile","diffValid","error","parentDiffFile","repository","reviewRequest","state","State","PROMPT_FOR_DIFF","PROMPT_FOR_BASEDIR","PROMPT_FOR_CHANGE_NUMBER","PROCESSING_DIFF","UPLOADING","PROMPT_FOR_PARENT_DIFF","ERROR","initialize","prototype","apply","arguments","on","_updateState","startOver","set","handleFiles","files","get","console","assert","diff","parentDiff","requiresBasedir","requiresChangeNumber","_tryValidate","_createReviewRequest","_createDiff","uploader","ValidateDiffModel","localSitePrefix","save","_onValidateSuccess","err","_onValidateError","modelOrCollection","xhr","model","rsp","$","parseJSON","responseText","newState","code","APIErrors","REPO_FILE_NOT_FOUND","revision","length","gettext","interpolate","file","DIFF_PARSE_ERROR","msg","line","linenum","reason","ReviewRequest","commitID","createDiff","url","diffs","href","navigateTo"],"sources":["../../../../../static/rb/js/models/uploadDiffModel.es6.js"],"sourcesContent":["/**\n * A model for uploading diffs (either to an existing review request, or\n * creating a new review request).\n */\nRB.UploadDiffModel = Backbone.Model.extend({\n    defaults: {\n        basedir: null,\n        changeNumber: null,\n        diffFile: null,\n        diffValid: false,\n        error: null,\n        parentDiffFile: null,\n        repository: null,\n        reviewRequest: null,\n        state: 0,\n    },\n\n    State: {\n        PROMPT_FOR_DIFF: 0,\n        PROMPT_FOR_BASEDIR: 1,\n        PROMPT_FOR_CHANGE_NUMBER: 2,\n        PROCESSING_DIFF: 3,\n        UPLOADING: 4,\n        PROMPT_FOR_PARENT_DIFF: 5,\n        ERROR: 6,\n    },\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        Backbone.Model.prototype.initialize.apply(this, arguments);\n\n        this.on('change:diffFile change:parentDiffFile change:basedir ' +\n                'change:changeNumber change:diffValid',\n                this._updateState, this);\n    },\n\n    /**\n     * Reset the various state of the pre-commit creator.\n     *\n     * This is used when the user clicks \"start over\" in the middle of the\n     * process.\n     */\n    startOver() {\n        this.set({\n            basedir: null,\n            changeNumber: null,\n            diffFile: null,\n            diffValid: false,\n            error: null,\n            parentDiffFile: null,\n            state: this.State.PROMPT_FOR_DIFF,\n        });\n    },\n\n    /**\n     * Handle a selected diff file.\n     *\n     * In the case where the current state is PROMPT_FOR_DIFF or\n     * PROMPT_FOR_PARENT_DIFF, this will take the diff file and set the\n     * relevant attribute, triggering the validation stage.\n     *\n     * Args:\n     *     files (FileList):\n     *         The selected file list from the input element.\n     */\n    handleFiles(files) {\n        switch (this.get('state')) {\n            case this.State.PROMPT_FOR_DIFF:\n                this.set('diffFile', files[0]);\n                break;\n\n            case this.State.PROMPT_FOR_PARENT_DIFF:\n                this.set('parentDiffFile', files[0]);\n                break;\n\n            default:\n                console.assert('File received in wrong state');\n                break;\n        }\n    },\n\n    /**\n     * Perform a state transition, based on the current state and attributes.\n     */\n    _updateState() {\n        const basedir = this.get('basedir');\n        const changeNumber = this.get('changeNumber');\n        const diff = this.get('diffFile');\n        const diffValid = this.get('diffValid');\n        const parentDiff = this.get('parentDiffFile');\n        const repository = this.get('repository');\n        const requiresBasedir = repository.get('requiresBasedir');\n        const requiresChangeNumber = repository.get('requiresChangeNumber');\n        const state = this.get('state');\n\n        switch (state) {\n            case this.State.PROMPT_FOR_DIFF:\n                if (diff) {\n                    if (requiresBasedir && !basedir) {\n                        this.set('state', this.State.PROMPT_FOR_BASEDIR);\n                    } else if (requiresChangeNumber && !changeNumber) {\n                        this.set('state', this.State.PROMPT_FOR_CHANGE_NUMBER);\n                    } else {\n                        this.set('state', this.State.PROCESSING_DIFF);\n                        this._tryValidate();\n                    }\n                }\n                break;\n\n            case this.State.PROMPT_FOR_PARENT_DIFF:\n                if (diff && parentDiff) {\n                    this.set('state', this.State.PROCESSING_DIFF);\n                    this._tryValidate();\n                }\n\n                break;\n\n            case this.State.PROMPT_FOR_BASEDIR:\n                console.assert(\n                    diff, 'cannot be in basedir prompt state without a diff');\n\n                if (basedir) {\n                    if (requiresChangeNumber && !changeNumber) {\n                        /*\n                         * Right now we don't have anything that requires both a\n                         * basedir and a change number, but that might change in\n                         * the future.\n                         */\n                        this.set('state', this.State.PROMPT_FOR_CHANGE_NUMBER);\n                    } else {\n                        this.set('state', this.State.PROCESSING_DIFF);\n                        this._tryValidate();\n                    }\n                }\n                break;\n\n            case this.State.PROMPT_FOR_CHANGE_NUMBER:\n                console.assert(\n                    diff, 'cannot be in changenum prompt state without a diff');\n\n                if (changeNumber) {\n                    this.set('state', this.State.PROCESSING_DIFF);\n                    this._tryValidate();\n                }\n\n                break;\n\n            case this.State.PROCESSING_DIFF:\n                if (diffValid) {\n                    this.set('state', this.State.UPLOADING);\n\n                    if (this.get('reviewRequest') === null) {\n                        this._createReviewRequest();\n                    } else {\n                        this._createDiff();\n                    }\n                }\n                break;\n\n            case this.State.UPLOADING:\n                break;\n\n            case this.State.ERROR:\n                break;\n        }\n    },\n\n    /**\n     * Do a test validation of the selected diff and provided options.\n     *\n     * This starts an asynchronous process. When this process is completed\n     * successfully, the 'diffValid' attribute will be set to true. If the\n     * validation fails, the state will be set to State.ERROR and the 'state'\n     * attribute will be set to HTML with a user-visible error.\n     */\n    async _tryValidate() {\n        this.set('diffValid', false);\n\n        const diff = this.get('diffFile');\n        console.assert(diff);\n\n        const parentDiff = this.get('parentDiffFile');\n        const repository = this.get('repository');\n        const uploader = new RB.ValidateDiffModel();\n\n        uploader.set({\n            repository: repository.get('id'),\n            localSitePrefix: repository.get('localSitePrefix'),\n            basedir: this.get('basedir'),\n            diff: diff,\n            parentDiff: parentDiff,\n        });\n\n        try {\n            await uploader.save();\n            this._onValidateSuccess();\n        } catch (err) {\n            this._onValidateError(err.modelOrCollection, err.xhr);\n        }\n    },\n\n    /**\n     * Callback for when validation succeeds.\n     */\n    _onValidateSuccess() {\n        this.set('diffValid', true);\n    },\n\n    /**\n     * Callback for when validation fails.\n     */\n    _onValidateError(model, xhr) {\n        const rsp = $.parseJSON(xhr.responseText);\n        let newState = this.State.ERROR;\n        let error;\n\n        if (rsp !== null) {\n            switch (rsp.err.code) {\n                case RB.APIErrors.REPO_FILE_NOT_FOUND:\n                    if (this.get('repository').get('scmtoolName') === 'Git' &&\n                        rsp.revision.length !== 40) {\n                        error = gettext('The uploaded diff uses short revisions, but Review Board requires full revisions.<br>Please generate a new diff using the <code>--full-index</code> parameter.');\n                    } else {\n                        error = interpolate(\n                            gettext('The file \"%(file)s\" (revision %(revision)s) was not found in the repository.'),\n                            {\n                                file: rsp.file,\n                                revision: rsp.revision,\n                            },\n                            true);\n\n                        if (this.get('parentDiffFile') === null) {\n                            // Allow the user to try providing a parent diff.\n                            newState = this.State.PROMPT_FOR_PARENT_DIFF;\n                        }\n                    }\n\n                    break;\n\n                case RB.APIErrors.DIFF_PARSE_ERROR:\n                    error = interpolate(\n                        gettext('%(error)s<br>Line %(line)s: %(reason)s'),\n                        {\n                            error: rsp.err.msg,\n                            line: rsp.linenum,\n                            reason: rsp.reason,\n                        },\n                        true);\n                    break;\n\n                default:\n                    error = rsp.err.msg;\n                    break;\n            }\n        } else {\n            error = gettext('Unknown error');\n        }\n\n        if (error) {\n            this.set({\n                state: newState,\n                error: error,\n            });\n        }\n    },\n\n    /**\n     * Actually create the review request.\n     *\n     * This should be all but guaranteed to succeed, since we've already\n     * determined that the supplied parameters ought to work through the\n     * ValidateDiffModel.\n     */\n    async _createReviewRequest() {\n        const repository = this.get('repository');\n        const reviewRequest = new RB.ReviewRequest({\n            commitID: this.get('changeNumber'),\n            localSitePrefix: repository.get('localSitePrefix'),\n            repository: repository.get('id'),\n        });\n\n        try {\n            await reviewRequest.save();\n            this.set('reviewRequest', reviewRequest);\n            this._createDiff();\n        } catch (err) {\n            this._onValidateError(err.modelOrCollection, err.xhr);\n        }\n    },\n\n    /**\n     * Create the diff.\n     *\n     * This requires that the review request object already exists.\n     */\n    async _createDiff() {\n        const reviewRequest = this.get('reviewRequest');\n        const diff = reviewRequest.createDiff();\n\n        diff.set({\n            basedir: this.get('basedir'),\n            diff: this.get('diffFile'),\n            parentDiff: this.get('parentDiffFile'),\n        });\n        diff.url = reviewRequest.get('links').diffs.href;\n\n        try {\n            await diff.save();\n            RB.navigateTo(reviewRequest.get('reviewURL'));\n        } catch (err) {\n            this._onValidateError(err.modelOrCollection, err.xhr);\n        }\n    },\n});\n"],"mappings":"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","ignoreList":[]}