{"version":3,"file":"reviewReplyEditorView.js","names":["RB","ReviewRequestPage","ReviewReplyEditorView","Backbone","View","extend","commentTemplate","_","template","events","initialize","options","_$addCommentLink","_$draftComment","_$editor","_$commentsList","_inlineEditorView","render","$","$draftComment","children","length","$time","find","$reviewText","model","set","commentID","data","text","html","timestamp","Date","attr","richText","hasClass","hasDraft","_createCommentEditor","listenTo","reviewRequest","get","formatText","newText","bugTrackerURL","on","fadeOut","remove","fadeIn","_onPublished","openCommentEditor","_makeCommentElement","startEdit","needsSave","isDirty","save","value","submit","preventEvents","reviewRequestEditor","decr","textEditor","inlineEditorView","RichTextInlineEditorView","editIconClass","el","formClass","hasRawValue","multiline","notifyUnchangedCompletion","rawValue","textEditorOptions","incr","resetStateIfEmpty","removeAttr","hide","userSession","UserSession","instance","now","moment","utcOffset","$el","anchorName","id","uniqueId","userPageURL","fullName","avatarHTML","getAvatarHTML","isDraft","timestampISO","format","hour","user_infobox","end","timesince","appendTo","_onAddCommentClicked","e","preventDefault","stopPropagation","contextType","replaceWith"],"sources":["../../../../../../static/rb/js/reviewRequestPage/views/reviewReplyEditorView.es6.js"],"sourcesContent":["/**\n * Handles editing a reply to a comment in a review.\n *\n * This will handle the \"New Comment\" link and the draft banners for the\n * review.\n */\nRB.ReviewRequestPage.ReviewReplyEditorView = Backbone.View.extend({\n    commentTemplate: _.template(dedent`\n        <li <% if (isDraft) { %>class=\"draft\"<% } %>\n            <% if (commentID) { %>data-comment-id=\"<%= commentID %>\"<% } %>>\n         <% if (anchorName) { %>\n          <a class=\"comment-anchor\" name=\"<%- anchorName %>\"></a>\n          <div class=\"floating-anchor\">\n           <a href=\"#<%- anchorName %>\"\n              class=\"fa fa-link fa-flip-horizontal\"></a>\n          </div>\n         <% } %>\n         <div class=\"comment-author\">\n          <label for=\"<%= id %>\">\n           <div class=\"avatar-container\"><%= avatarHTML %></div>\n           <div class=\"user-reply-info\">\n            <a href=\"<%= userPageURL %>\" class=\"user\"><%- fullName %></a>\n        <% if (timestamp) { %>\n            <span class=\"timestamp\">\n             <time class=\"timesince\" datetime=\"<%= timestampISO %>\">\n        <%= timestamp %></time>\n            </span>\n        <% } %>\n           </div>\n          </label>\n         </div>\n         <div>\n          <pre id=\"<%= id %>\" class=\"comment-text reviewtext\"><%- text %></pre>\n         </div>\n        </li>\n    `),\n\n    events: {\n        'click .add_comment_link': '_onAddCommentClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The editor model.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$addCommentLink = null;\n        this._$draftComment = null;\n        this._$editor = null;\n        this._$commentsList = null;\n        this._inlineEditorView = null;\n    },\n\n    /**\n     * Render the comment section.\n     *\n     * If there were any draft comments found, then editors will be\n     * created for them, the New Comment link will be hidden.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyEditorView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$addCommentLink = this.$('.add_comment_link');\n        this._$commentsList = this.$('.reply-comments');\n\n        /* See if there's a draft comment to import from the page. */\n        const $draftComment = this._$commentsList.children('.draft');\n\n        if ($draftComment.length !== 0) {\n            const $time = $draftComment.find('time');\n            const $reviewText = $draftComment.find('.reviewtext');\n\n            this.model.set({\n                commentID: $draftComment.data('comment-id'),\n                text: $reviewText.html(),\n                timestamp: new Date($time.attr('datetime')),\n                richText: $reviewText.hasClass('rich-text'),\n                hasDraft: true,\n            });\n            this._createCommentEditor($draftComment);\n        }\n\n        this.listenTo(this.model, 'textUpdated', () => {\n            if (this._$editor) {\n                const reviewRequest =\n                    this.model.get('review').get('parentObject');\n\n                RB.formatText(this._$editor, {\n                    newText: this.model.get('text'),\n                    richText: this.model.get('richText'),\n                    bugTrackerURL: reviewRequest.get('bugTrackerURL'),\n                });\n            }\n        });\n\n        this.model.on('resetState', () => {\n            if (this._$draftComment) {\n                this._$draftComment.fadeOut(() => {\n                    this._$draftComment.remove();\n                    this._$draftComment = null;\n                });\n            }\n\n            this._$addCommentLink.fadeIn();\n        });\n\n        this.model.on('published', this._onPublished, this);\n    },\n\n    /**\n     * Open the comment editor for a new comment.\n     */\n    openCommentEditor() {\n        this._createCommentEditor(this._makeCommentElement());\n        this._inlineEditorView.startEdit();\n    },\n\n    /**\n     * Return whether this editor needs to be saved.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether the comment editor has unsaved content.\n     */\n    needsSave() {\n        return this._inlineEditorView && this._inlineEditorView.isDirty();\n    },\n\n    /**\n     * Save the editor.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the save is complete.\n     */\n    async save() {\n        const value = this._inlineEditorView.submit({\n            preventEvents: true,\n        });\n\n        if (value) {\n            const reviewRequestEditor = this.options.reviewRequestEditor;\n\n            if (reviewRequestEditor) {\n                reviewRequestEditor.decr('editCount');\n            }\n\n            this.model.set({\n                richText: this._inlineEditorView.textEditor.richText,\n                text: value,\n            });\n\n            await this.model.save();\n        }\n    },\n\n    /**\n     * Create a comment editor for an element.\n     *\n     * Args:\n     *     $draftComment (jQuery):\n     *         The draft comment element.\n     */\n    _createCommentEditor($draftComment) {\n        const reviewRequestEditor = this.options.reviewRequestEditor;\n\n        this._$draftComment = $draftComment;\n\n        this._$editor = $draftComment.find('pre.reviewtext');\n        const inlineEditorView = new RB.RichTextInlineEditorView({\n            editIconClass: 'rb-icon rb-icon-edit',\n            el: this._$editor,\n            formClass: 'inline-comment-editor',\n            hasRawValue: true,\n            multiline: true,\n            notifyUnchangedCompletion: true,\n            rawValue: this._$editor.data('raw-value') || '',\n            textEditorOptions: {\n                richText: this._$editor.hasClass('rich-text'),\n            },\n        });\n        inlineEditorView.render();\n\n        this.listenTo(inlineEditorView, 'beginEdit', () => {\n            if (reviewRequestEditor) {\n                reviewRequestEditor.incr('editCount');\n            }\n        });\n\n        this.listenTo(inlineEditorView, 'complete', value => {\n            if (reviewRequestEditor) {\n                reviewRequestEditor.decr('editCount');\n            }\n\n            this.model.set({\n                richText: inlineEditorView.textEditor.richText,\n                text: value,\n            });\n            this.model.save();\n        });\n\n        this.listenTo(inlineEditorView, 'cancel', () => {\n            if (reviewRequestEditor) {\n                reviewRequestEditor.decr('editCount');\n            }\n\n            this.model.resetStateIfEmpty();\n        });\n\n        this._inlineEditorView = inlineEditorView;\n\n        this._$editor.removeAttr('data-raw-value');\n\n        this._$addCommentLink.hide();\n    },\n\n    /**\n     * Create an element for the comment form.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the comment element.\n     *\n     * Option Args:\n     *     now (Moment):\n     *         The current time.\n     *\n     *     richText (boolean):\n     *         Whether the text is in a rich-text format.\n     *\n     *     text (string):\n     *         The text for the comment.\n     *\n     * Returns:\n     *     jQuery:\n     *     The newly-created element.\n     */\n    _makeCommentElement(options={}) {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('review').get('parentObject');\n\n        const now = (\n            options.now ||\n            moment().utcOffset(userSession.get('timezoneOffset')));\n\n        const $el = $(this.commentTemplate(_.extend({\n                anchorName: null,\n                id: _.uniqueId('draft_comment_'),\n                text: '',\n                commentID: null,\n                userPageURL: userSession.get('userPageURL'),\n                fullName: userSession.get('fullName'),\n                avatarHTML: userSession.getAvatarHTML(32),\n                isDraft: true,\n                timestampISO: now.format(),\n\n                /*\n                 * Note that we format the a.m./p.m. this way to match\n                 * what's coming from the Django templates.\n                 */\n                timestamp: now.format('MMMM Do, YYYY, h:mm ') +\n                           (now.hour() < 12 ? 'a.m.' : 'p.m.'),\n            }, options)))\n            .find('.user')\n                .user_infobox()\n            .end()\n            .find('time.timesince')\n                .timesince()\n            .end();\n\n        if (options.text) {\n            RB.formatText($el.find('.reviewtext'), {\n                newText: options.text,\n                richText: options.richText,\n                bugTrackerURL: reviewRequest.get('bugTrackerURL'),\n            });\n        }\n\n        $el.appendTo(this._$commentsList);\n\n        return $el;\n    },\n\n    /**\n     * Handler for when the New Comment link is clicked.\n     *\n     * Creates a new comment form and editor.\n     *\n     * Args:\n     *     e (Event):\n     *         The event that triggered the callback.\n     */\n    _onAddCommentClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.openCommentEditor();\n    },\n\n    /**\n     * Handler for when the reply is published.\n     *\n     * Updates the draft comment to be a standard comment, and brings back\n     * the New Comment link.\n     */\n    _onPublished() {\n        if (this._$draftComment) {\n            const model = this.model;\n            const contextType = model.get('contextType');\n\n            this._$draftComment.replaceWith(this._makeCommentElement({\n                anchorName: model.get('anchorPrefix') +\n                            model.get('replyObject').id,\n                commentID: model.get('commentID'),\n                text: model.get('text'),\n                richText: model.get('richText'),\n                isDraft: false,\n            }));\n\n            this._$draftComment = null;\n        }\n    },\n});\n"],"mappings":"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","ignoreList":[]}