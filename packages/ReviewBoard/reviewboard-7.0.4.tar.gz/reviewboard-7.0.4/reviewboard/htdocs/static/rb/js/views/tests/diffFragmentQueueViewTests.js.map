{"version":3,"file":"diffFragmentQueueViewTests.js","names":["suite","URL_PREFIX","fragmentQueue","beforeEach","RB","DiffFragmentQueueView","containerPrefix","reviewRequestPath","queueName","describe","$container1","$container2","$container3","$container4","$","appendTo","window","$testsScratch","queueLoad","it","queue","_queue","expect","length","not","toBe","key1","toContain","commentID","onFragmentRendered","key2","done","spyOn","and","callFake","options","dataType","url","blob","html1","Blob","html2","html3","DataUtils","buildBlob","type","values","size","html","fail","readBlobAsArrayBuffer","success","loadFragments","ajax","calls","count","data","toBeTruthy","arrayBuffer","buildArrayBuffer","view1","DiffFragmentView","view2","view3","saveFragment","removeData","_saved","toEqual"],"sources":["../../../../../../static/rb/js/views/tests/diffFragmentQueueViewTests.es6.js"],"sourcesContent":["suite('rb/views/DiffFragmentQueueView', function() {\n    const URL_PREFIX = '/r/123/_fragments/diff-comments/';\n\n    let fragmentQueue;\n\n    beforeEach(function() {\n        fragmentQueue = new RB.DiffFragmentQueueView({\n            containerPrefix: 'container1',\n            reviewRequestPath: '/r/123/',\n            queueName: 'diff_fragments'\n        });\n    });\n\n    describe('Diff fragment loading', function() {\n        let $container1;\n        let $container2;\n        let $container3;\n        let $container4;\n\n        beforeEach(function() {\n            $container1 = $('<div id=\"container1_123\">')\n                .appendTo(window.$testsScratch);\n            $container2 = $('<div id=\"container1_124\">')\n                .appendTo(window.$testsScratch);\n            $container3 = $('<div id=\"container1_125\">')\n                .appendTo(window.$testsScratch);\n            $container4 = $('<div id=\"container1_126\">')\n                .appendTo(window.$testsScratch);\n\n            fragmentQueue.queueLoad('123', 'key1');\n            fragmentQueue.queueLoad('124', 'key1');\n            fragmentQueue.queueLoad('125', 'key1');\n            fragmentQueue.queueLoad('126', 'key2');\n        });\n\n        it('Fragment queueing', function() {\n            const queue = fragmentQueue._queue;\n\n            expect(queue.length).not.toBe(0);\n\n            expect(queue.key1.length).toBe(3);\n            expect(queue.key1).toContain({\n                commentID: '123',\n                onFragmentRendered: null,\n            });\n            expect(queue.key1).toContain({\n                commentID: '124',\n                onFragmentRendered: null,\n            });\n            expect(queue.key1).toContain({\n                commentID: '125',\n                onFragmentRendered: null,\n            });\n            expect(queue.key2.length).toBe(1);\n            expect(queue.key2).toContain({\n                commentID: '126',\n                onFragmentRendered: null,\n            });\n        });\n\n        it('Batch loading', function(done) {\n            spyOn($, 'ajax').and.callFake(function(options) {\n                expect(options.dataType).toBe('arraybuffer');\n\n                const url = options.url;\n                let blob;\n\n                if (url === `${URL_PREFIX}123,124,125/`) {\n                    const html1 = new Blob(['<span>Comment one</span>']);\n                    const html2 = new Blob(['<span>Comment two</span>']);\n                    const html3 = new Blob(['<span>Comment three</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [123, html1.size],\n                        }],\n                        html1,\n                        [{\n                            type: 'uint32',\n                            values: [124, html2.size],\n                        }],\n                        html2,\n                        [{\n                            type: 'uint32',\n                            values: [125, html3.size],\n                        }],\n                        html3,\n                    ]);\n                } else if (url === `${URL_PREFIX}126/`) {\n                    const html = new Blob(['<span>Comment 4</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [126, html.size],\n                        }],\n                        html,\n                    ]);\n                } else {\n                    fail(`Unexpected URL ${url}`);\n                    return;\n                }\n\n                RB.DataUtils.readBlobAsArrayBuffer(blob, options.success);\n            });\n\n            fragmentQueue.loadFragments(() => {\n                expect($.ajax.calls.count()).toBe(2);\n\n                expect($container1.data('diff-fragment-view')).toBeTruthy();\n                expect($container1.html()).toBe('<span>Comment one</span>');\n\n                expect($container2.data('diff-fragment-view')).toBeTruthy();\n                expect($container2.html()).toBe('<span>Comment two</span>');\n\n                expect($container3.data('diff-fragment-view')).toBeTruthy();\n                expect($container3.html()).toBe('<span>Comment three</span>');\n\n                expect($container4.data('diff-fragment-view')).toBeTruthy();\n                expect($container4.html()).toBe('<span>Comment 4</span>');\n\n                done();\n            });\n        });\n\n        it('With Unicode content', function(done) {\n            spyOn($, 'ajax').and.callFake(function(options) {\n                expect(options.dataType).toBe('arraybuffer');\n\n                const url = options.url;\n                let arrayBuffer;\n\n                if (url === `${URL_PREFIX}123,124,125/`) {\n                    /* UTF-8 bytes for \"<span>√°√©√≠√≥√∫ üî•</span>\" */\n                    const html1 = [\n                        60, 115, 112, 97, 110, 62, 195, 161, 195, 169,\n                        195, 173, 195, 179, 195, 186, 32, 240, 159, 148,\n                        165, 60, 47, 115, 112, 97, 110, 62,\n                    ];\n\n                    /* UTF-8 bytes for \"<span>√Ñ√ã√è√ñ√ú≈∏ üò±</span>\" */\n                    const html2 = [\n                        60, 115, 112, 97, 110, 62, 195, 132, 195, 139,\n                        195, 143, 195, 150, 195, 156, 197, 184, 32, 240,\n                        159, 152, 177, 60, 47, 115, 112, 97, 110, 62,\n                    ];\n\n                    /* UTF-8 bytes for \"<span>üî•üò±</span>\" */\n                    const html3 = [\n                        60, 115, 112, 97, 110, 62, 240, 159, 148, 165, 240,\n                        159, 152, 177, 60, 47, 115, 112, 97, 110, 62,\n                    ];\n\n                    expect(html1.length).toBe(28);\n                    expect(html2.length).toBe(30);\n                    expect(html3.length).toBe(21);\n\n                    arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                        {\n                            type: 'uint32',\n                            values: [123, html1.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html1,\n                        },\n                        {\n                            type: 'uint32',\n                            values: [124, html2.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html2,\n                        },\n                        {\n                            type: 'uint32',\n                            values: [125, html3.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html3,\n                        },\n                    ]);\n                } else if (url === `${URL_PREFIX}126/`) {\n                    /* UTF-8 bytes for \"<span>ƒÄƒíƒ™≈å üëø</span>\" */\n                    const html = [\n                        60, 115, 112, 97, 110, 62, 196, 128, 196, 146,\n                        196, 170, 197, 140, 32, 240, 159, 145, 191, 60,\n                        47, 115, 112, 97, 110, 62,\n                    ];\n\n                    expect(html.length).toBe(26);\n\n                    arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                        {\n                            type: 'uint32',\n                            values: [126, html.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html,\n                        },\n                    ]);\n                } else {\n                    fail(`Unexpected URL ${url}`);\n                    return;\n                }\n\n                options.success(arrayBuffer);\n            });\n\n            fragmentQueue.loadFragments(() => {\n                expect($.ajax.calls.count()).toBe(2);\n\n                expect($container1.data('diff-fragment-view')).toBeTruthy();\n                expect($container1.html()).toBe('<span>√°√©√≠√≥√∫ üî•</span>');\n\n                expect($container2.data('diff-fragment-view')).toBeTruthy();\n                expect($container2.html()).toBe('<span>√Ñ√ã√è√ñ√ú≈∏ üò±</span>');\n\n                expect($container3.data('diff-fragment-view')).toBeTruthy();\n                expect($container3.html()).toBe('<span>üî•üò±</span>');\n\n                expect($container4.data('diff-fragment-view')).toBeTruthy();\n                expect($container4.html()).toBe('<span>ƒÄƒíƒ™≈å üëø</span>');\n\n                done();\n            });\n        });\n\n        it('With saved fragments', function(done) {\n            spyOn($, 'ajax').and.callFake(function(options) {\n                expect(options.dataType).toBe('arraybuffer');\n\n                const url = options.url;\n                let blob;\n\n                if (url === `${URL_PREFIX}124/`) {\n                    const html = new Blob(['<span>New comment 2</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [124, html.size],\n                        }],\n                        html,\n                    ]);\n                } else if (url === `${URL_PREFIX}126/`) {\n                    const html = new Blob(['<span>New comment 4</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [126, html.size],\n                        }],\n                        html,\n                    ]);\n                } else {\n                    fail(`Unexpected URL ${url}`);\n                    return;\n                }\n\n                RB.DataUtils.readBlobAsArrayBuffer(blob, options.success);\n            });\n\n            /*\n             * We'll set up three containers, with the third being having its\n             * view disassociated and the fourth as a completely new container.\n             * The unsaved pre-loaded containers (2) and the new container (4)\n             * will be loaded. The disassociated container (3) will have a\n             * new view set up.\n             */\n            const view1 = new RB.DiffFragmentView();\n            $container1\n                .html('<span>Comment 1</span>')\n                .data('diff-fragment-view', view1);\n\n            const view2 = new RB.DiffFragmentView();\n            $container2\n                .html('<span>Comment 2</span>')\n                .data('diff-fragment-view', view2);\n\n            const view3 = new RB.DiffFragmentView();\n            $container3\n                .html('<span>Comment 3</span>')\n                .data('diff-fragment-view', view3);\n\n            /*\n             * We're going to save 123, 125, and 126 (which is not loaded).\n             * Only 123 and 125 will actually be saved.\n             */\n            fragmentQueue.saveFragment('123');\n            fragmentQueue.saveFragment('125');\n            fragmentQueue.saveFragment('126');\n\n            /* Disassociate container 3's view. */\n            $container3.removeData('diff-fragment-view');\n\n            fragmentQueue.loadFragments(() => {\n                expect($.ajax.calls.count()).toBe(2);\n\n                expect($container1.data('diff-fragment-view')).toBe(view1);\n                expect($container1.html()).toBe('<span>Comment 1</span>');\n\n                expect($container2.data('diff-fragment-view')).toBe(view2);\n                expect($container2.html()).toBe('<span>New comment 2</span>');\n\n                expect($container3.data('diff-fragment-view')).toBeTruthy();\n                expect($container3.data('diff-fragment-view')).not.toBe(view3);\n                expect($container3.html()).toBe('<span>Comment 3</span>');\n\n                expect($container4.data('diff-fragment-view')).toBeTruthy();\n                expect($container4.html()).toBe('<span>New comment 4</span>');\n\n                expect(fragmentQueue._saved).toEqual({});\n\n                done();\n            });\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}