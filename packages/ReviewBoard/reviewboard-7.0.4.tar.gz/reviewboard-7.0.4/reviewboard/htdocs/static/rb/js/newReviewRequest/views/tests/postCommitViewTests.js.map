{"version":3,"file":"postCommitViewTests.js","names":["suite","repository","commits","model","view","beforeEach","RB","Repository","name","supportsPostCommit","spyOn","branches","and","callFake","method","collection","options","success","stat","commit","RepositoryCommits","urlBase","_","result","start","branch","authorName","date","id","message","parent","PostCommitModel","PostCommitView","$scrollContainer","$","prototype","callThrough","expect","sync","toHaveBeenCalled","it","render","_branchesView","$el","children","length","toBe","_commitsView","done","ReviewRequest","resolveTo","_onCreateReviewRequest","save","calls","count","call","mostRecent","object","get","models","trigger","describe","errorText","returnError","Promise","reject","BackboneError","resolve","_loadBranches","fetch","_showLoadError","argsFor","css","_errorView","toBeTruthy","toBeFalsy","find","text","trim","finally","not","delegateEvents","$reload","click","_loadCommits","_commitsCollection","display"],"sources":["../../../../../../../static/rb/js/newReviewRequest/views/tests/postCommitViewTests.es6.js"],"sourcesContent":["suite('rb/newReviewRequest/views/PostCommitView', function() {\n    let repository;\n    let commits;\n    let model;\n    let view;\n\n    beforeEach(function() {\n        repository = new RB.Repository({\n            name: 'Repo',\n            supportsPostCommit: true,\n        });\n\n        spyOn(repository.branches, 'sync').and.callFake(\n            (method, collection, options) => {\n                options.success({\n                    stat: 'ok',\n                    branches: [\n                        {\n                            name: 'master',\n                            commit: '859d4e148ce3ce60bbda6622cdbe5c2c2f8d9817',\n                            'default': true,\n                        },\n                        {\n                            name: 'release-1.7.x',\n                            commit: '92463764015ef463b4b6d1a1825fee7aeec8cb15',\n                            'default': false,\n                        },\n                        {\n                            name: 'release-1.6.x',\n                            commit: 'a15d0e635064a2e1929ce1bf3bc8d4aa65738b64',\n                            'default': false,\n                        },\n                    ],\n                });\n            }\n        );\n\n        spyOn(repository, 'getCommits').and.callFake(options => {\n            commits = new RB.RepositoryCommits([], {\n                urlBase: _.result(this, 'url') + 'commits/',\n                start: options.start,\n                branch: options.branch,\n            });\n\n            spyOn(commits, 'sync').and.callFake(\n                (method, collection, options) => {\n                    options.success({\n                        stat: 'ok',\n                        commits: [\n                            {\n                                authorName: 'Author 1',\n                                date: '2013-07-22T03:51:50Z',\n                                id: '3',\n                                message: 'Summary 1\\n\\nMessage 1',\n                                parent: '2',\n                            },\n                            {\n                                authorName: 'Author 2',\n                                date: '2013-07-22T03:50:46Z',\n                                id: '2',\n                                message: 'Summary 2\\n\\nMessage 2',\n                                parent: '1',\n                            },\n                            {\n                                authorName: 'Author 3',\n                                date: '2013-07-21T08:05:45Z',\n                                id: '1',\n                                message: 'Summary 3\\n\\nMessage 3',\n                                parent: '',\n                            },\n                        ],\n                    });\n                }\n            );\n\n            return commits;\n        });\n\n        model = new RB.PostCommitModel({ repository: repository });\n        view = new RB.PostCommitView({\n            model: model,\n            $scrollContainer: $('<div>'),\n        });\n\n        spyOn(RB.PostCommitView.prototype, '_onCreateReviewRequest')\n            .and.callThrough();\n\n        expect(repository.branches.sync).toHaveBeenCalled();\n    });\n\n    it('Render', function() {\n        view.render();\n\n        expect(commits.sync).toHaveBeenCalled();\n\n        expect(view._branchesView.$el.children().length).toBe(3);\n        expect(view._commitsView.$el.children().length).toBe(3);\n    });\n\n    it('Create', function(done) {\n        view.render();\n\n        let commit;\n\n        spyOn(RB.ReviewRequest.prototype, 'save').and.resolveTo();\n        spyOn(RB, 'navigateTo').and.callFake(() => {\n            expect(RB.PostCommitView.prototype._onCreateReviewRequest)\n                .toHaveBeenCalled();\n            expect(RB.ReviewRequest.prototype.save).toHaveBeenCalled();\n\n            expect(RB.ReviewRequest.prototype.save.calls.count()).toBe(1);\n\n            const call = RB.ReviewRequest.prototype.save.calls.mostRecent();\n            expect(call.object.get('commitID')).toBe(commit.get('id'));\n\n            done();\n        });\n\n        commit = commits.models[1];\n        commit.trigger('create', commit);\n    });\n\n    describe('Error handling', function() {\n        describe('Branches', function() {\n            const errorText = 'Oh no';\n            let returnError;\n\n            beforeEach(async function() {\n                spyOn(repository.branches, 'fetch').and.callFake(\n                    () => returnError\n                        ? Promise.reject(\n                            new BackboneError(model, { errorText }, {}))\n                        : Promise.resolve());\n\n                returnError = true;\n\n                spyOn(RB.PostCommitView.prototype, '_showLoadError')\n                    .and.callThrough();\n\n                await view._loadBranches();\n            });\n\n            it('UI state', function() {\n                expect(repository.branches.fetch).toHaveBeenCalled();\n\n                expect(view._showLoadError).toHaveBeenCalled();\n                expect(view._showLoadError.calls.argsFor(0)[1]).toBe(errorText);\n\n                expect(view._branchesView.$el.css('display')).toBe('none');\n                expect(view._errorView).toBeTruthy();\n                expect(view._commitsView).toBeFalsy();\n                expect(view._errorView.$el.find('.error-text').text().trim())\n                    .toBe('Oh no');\n            });\n\n            it('Reloading', function(done) {\n                spyOn(view, '_onReloadBranchesClicked').and.callFake(() => {\n                    view._loadBranches().finally(() => {\n                        expect(view._errorView).toBe(null);\n                        expect(view._branchesView.$el.css('display'))\n                            .not.toBe('none');\n\n                        done();\n                    });\n                });\n\n                /* Make sure the spy is called from the event handler. */\n                view.delegateEvents();\n\n                returnError = false;\n\n                expect(view._errorView).toBeTruthy();\n                const $reload = view._errorView.$el.find('.ink-c-button');\n                expect($reload.length).toBe(1);\n                $reload.click();\n            });\n        });\n\n        describe('Commits', function() {\n            const errorText = 'Oh no';\n            let returnError;\n\n            beforeEach(async function() {\n                view.render();\n\n                spyOn(RB.RepositoryCommits.prototype, 'fetch').and.callFake(\n                    () => returnError\n                        ? Promise.reject(\n                            new BackboneError(model, { errorText }, {}))\n                        : Promise.resolve());\n\n                returnError = true;\n\n                spyOn(RB.PostCommitView.prototype, '_showLoadError')\n                    .and.callThrough();\n\n                await view._loadCommits();\n            });\n\n            it('UI state', function() {\n                expect(view._commitsCollection.fetch).toHaveBeenCalled();\n\n                expect(view._showLoadError).toHaveBeenCalled();\n                expect(view._showLoadError.calls.argsFor(0)[1]).toBe(errorText);\n\n                expect(view._commitsView.$el.css('display')).toBe('none');\n                expect(view._errorView).toBeTruthy();\n                expect(view._commitsView).toBeTruthy();\n                expect(view._commitsView.$el.css('display')).toBe('none');\n                expect(view._errorView.$el.find('.error-text').text().trim())\n                    .toBe('Oh no');\n            });\n\n            it('Reloading', function(done) {\n                spyOn(view, '_onReloadCommitsClicked').and.callFake(() => {\n                    view._loadCommits().finally(() => {\n                        expect(view._errorView).toBe(null);\n\n                        /*\n                         * Chrome returns an empty string, while Firefox\n                         * returns \"block\".\n                         */\n                        const display = view._commitsView.$el.css('display');\n                        expect(display === 'block' || display === '')\n                            .toBe(true);\n\n                        done();\n                    });\n                });\n\n                /* Make sure the spy is called from the event handler. */\n                view.delegateEvents();\n\n                returnError = false;\n\n                expect(view._errorView).toBeTruthy();\n                const $reload = view._errorView.$el.find('.ink-c-button');\n                expect($reload.length).toBe(1);\n                $reload.click();\n            });\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}