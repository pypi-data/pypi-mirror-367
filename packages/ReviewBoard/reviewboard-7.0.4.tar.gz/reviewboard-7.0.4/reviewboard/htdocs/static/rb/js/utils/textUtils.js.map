{"version":3,"file":"textUtils.js","names":["RB","formatText","$el","options","richText","newText","undefined","html","addClass","find","attr","LinkifyUtils","linkifyChildren","bugTrackerURL","linkifyText","isHTMLEncoded","removeClass","length"],"sources":["../../../../../static/rb/js/utils/textUtils.es6.js"],"sourcesContent":["/**\n * Format the given text and put it into an element.\n *\n * If the given element is expected to be rich text, this will put the contents\n * of the new text directly into the element (since it has already been\n * rendered using Markdown).\n *\n * Otherwise, this will add links to review requests and bug trackers but\n * otherwise leave the text alone.\n *\n * Args:\n *     $el (jQuery):\n *         The element to put the text into\n *\n *     options (object):\n *          Options for the format operation.\n *\n * Option Args:\n *     newText (string):\n *         The text to format.\n *\n *     richText (boolean):\n *         Whether the new text is already formatted from Markdown.\n *\n *     bugTrackerURL (string):\n *         The bug tracker URL to use when linking bugs.\n *\n *     isHTMLEncoded (string):\n *         Whether the new text has already had dangerous characters (like <\n *         and >) escaped to their entities.\n */\nRB.formatText = function($el, options={}) {\n    if (options.richText) {\n        if (options.newText !== undefined) {\n            $el.html(options.newText);\n        }\n\n        $el\n            .addClass('rich-text')\n            .find('a')\n                .attr('target', '_blank');\n\n        RB.LinkifyUtils.linkifyChildren($el[0], options.bugTrackerURL);\n    } else if (options.newText !== undefined) {\n        $el\n            .html(RB.LinkifyUtils.linkifyText(options.newText || '',\n                                              options.bugTrackerURL,\n                                              options.isHTMLEncoded))\n            .removeClass('rich-text');\n    } else if ($el !== undefined && $el.length !== 0) {\n        RB.LinkifyUtils.linkifyChildren($el[0], options.bugTrackerURL);\n    }\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,UAAU,GAAG,UAASC,GAAG,EAAEC,OAAO,GAAC,CAAC,CAAC,EAAE;EACtC,IAAIA,OAAO,CAACC,QAAQ,EAAE;IAClB,IAAID,OAAO,CAACE,OAAO,KAAKC,SAAS,EAAE;MAC/BJ,GAAG,CAACK,IAAI,CAACJ,OAAO,CAACE,OAAO,CAAC;IAC7B;IAEAH,GAAG,CACEM,QAAQ,CAAC,WAAW,CAAC,CACrBC,IAAI,CAAC,GAAG,CAAC,CACLC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAEjCV,EAAE,CAACW,YAAY,CAACC,eAAe,CAACV,GAAG,CAAC,CAAC,CAAC,EAAEC,OAAO,CAACU,aAAa,CAAC;EAClE,CAAC,MAAM,IAAIV,OAAO,CAACE,OAAO,KAAKC,SAAS,EAAE;IACtCJ,GAAG,CACEK,IAAI,CAACP,EAAE,CAACW,YAAY,CAACG,WAAW,CAACX,OAAO,CAACE,OAAO,IAAI,EAAE,EACrBF,OAAO,CAACU,aAAa,EACrBV,OAAO,CAACY,aAAa,CAAC,CAAC,CACxDC,WAAW,CAAC,WAAW,CAAC;EACjC,CAAC,MAAM,IAAId,GAAG,KAAKI,SAAS,IAAIJ,GAAG,CAACe,MAAM,KAAK,CAAC,EAAE;IAC9CjB,EAAE,CAACW,YAAY,CAACC,eAAe,CAACV,GAAG,CAAC,CAAC,CAAC,EAAEC,OAAO,CAACU,aAAa,CAAC;EAClE;AACJ,CAAC","ignoreList":[]}