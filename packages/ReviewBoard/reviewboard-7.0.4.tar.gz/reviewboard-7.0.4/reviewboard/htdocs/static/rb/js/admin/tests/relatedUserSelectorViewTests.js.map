{"version":3,"file":"relatedUserSelectorViewTests.js","names":["suite","describe","it","view","RB","RelatedUserSelectorView","$input","$","initialOptions","useAvatars","multivalued","expect","options","toBe","render","$el","find","length","username","fullname","id","avatarHTML","siblings","val","_selectedIDs","size","beforeEach","done","$testsScratch","append","spyOn","and","callFake","query","callback","selectize","focus","setTimeout","click","loadOptions","toHaveBeenCalled"],"sources":["../../../../../../static/rb/js/admin/tests/relatedUserSelectorViewTests.es6.js"],"sourcesContent":["suite('rb/admin/views/relatedUserSelectorView', function() {\n    describe('Rendering', function() {\n        it('when empty', function() {\n            let view = new RB.RelatedUserSelectorView({\n                $input: $('<input id=\"id_people\" type=\"hidden\">'),\n                initialOptions: [],\n                useAvatars: true,\n                multivalued: true\n            });\n            expect(view.options.useAvatars).toBe(true);\n            expect(view.options.multivalued).toBe(true);\n            view.render();\n\n            expect(view.$el.find('.related-object-selected li').length)\n                .toBe(0);\n        });\n    });\n\n    describe('Rendering', function() {\n        it('with initial options', function() {\n            let view = new RB.RelatedUserSelectorView({\n                $input: $('<input id=\"id_people\" type=\"hidden\">'),\n                initialOptions: [{\n                    username: 'admin',\n                    fullname: 'Admin User',\n                    id: 1,\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Admin User\"></div>',\n                    },\n                }, {\n                    username: 'doc',\n                    fullname: \"Doc Dwarf\",\n                    id: 2,\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Doc Dwarf\"></div>',\n                    },\n                }, {\n                    username: 'dopey',\n                    fullname: 'Dopey Dwarf',\n                    id: 3,\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Dopey Dwarf\"></div>',\n                    },\n                }],\n                useAvatars: true,\n                multivalued: true,\n            });\n            view.render();\n            expect(view.options.useAvatars).toBe(true);\n            expect(view.options.multivalued).toBe(true);\n\n            expect(view.$el.find('.related-object-selected tr').length)\n                .toBe(3);\n            expect(view.$el.siblings('#id_people').val()).toBe('');\n            /* The input element value should be empty, since the widget will\n               not fill in the values from the objects if the objects are\n               passed through initialOptions. */\n            expect(view._selectedIDs.size).toBe(3);\n        });\n    });\n\n    describe('Select item', function() {\n        let view;\n\n        beforeEach(function(done) {\n            $testsScratch.append('<input id=\"id_people\" type=\"hidden\">');\n            view = new RB.RelatedUserSelectorView({\n                $input: $('#id_people'),\n                initialOptions: [],\n                useAvatars: true,\n                multivalued: true\n            });\n            view.render();\n\n            /* These are the fake users, that will be displayed in the\n               dropdown */\n            spyOn(view, 'loadOptions').and.callFake(function(query, callback) {\n                callback([{\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Admin User\"></div>',\n                    },\n                    fullname: 'Admin User',\n                    id: 1,\n                    username: 'admin',\n                }, {\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Doc Dwarf\"></div>',\n                    },\n                    fullname: 'Doc Dwarf',\n                    id: 2,\n                    username: 'doc',\n                }]);\n            });\n\n            $('select')[0].selectize.focus();\n            /* The focus() method is being called asynchronously, so it\n              doesn't actually call the loadOptions() method here\n              instantly. That's why I use setTimeout to wait for it to\n              finish. */\n            setTimeout(function() {\n                $testsScratch.find('div .selectize-input.items.not-full input').click();\n                done();\n            }, 4000);\n            /* I probably shouldn't be doing this, but I\n            don't know how else to get it to work. */\n        });\n\n        it('from dropdown', function(done) {\n            expect(view.loadOptions).toHaveBeenCalled();\n            $(\"div[data-value='admin']\").click();\n            $(\"div[data-value='doc']\").click();\n            expect(view.$el.siblings('#id_people').val()).toBe('1,2');\n            done();\n        });\n    });\n\n\n});\n"],"mappings":"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","ignoreList":[]}