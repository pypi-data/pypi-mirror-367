{"version":3,"file":"diffRevisionModelTests.js","names":["suite","describe","it","data","RB","DiffRevision","prototype","parse","call","undefined","revision","latest_revision","interdiff_revision","is_interdiff","is_draft_diff","expect","not","toBe","latestRevision","interdiffRevision","isInterdiff","isDraftDiff","baseCommitID","tipCommitID","base_commit_id","tip_commit_id"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffRevisionModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffRevision', function() {\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = RB.DiffRevision.prototype.parse.call(undefined, {\n                revision: 2,\n                latest_revision: 3,\n                interdiff_revision: 4,\n                is_interdiff: true,\n                is_draft_diff: true,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.revision).toBe(2);\n            expect(data.latestRevision).toBe(3);\n            expect(data.interdiffRevision).toBe(4);\n            expect(data.isInterdiff).toBe(true);\n            expect(data.isDraftDiff).toBe(true);\n            expect(data.baseCommitID).toBe(null);\n            expect(data.tipCommitID).toBe(null);\n        });\n\n        it('API payloads with base/tip commit IDs', function() {\n            const data = RB.DiffRevision.prototype.parse.call(undefined, {\n                revision: 4,\n                latest_revision: 7,\n                interdiff_revision: null,\n                is_interdiff: false,\n                is_draft_diff: false,\n                base_commit_id: 3,\n                tip_commit_id: 4,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.revision).toBe(4);\n            expect(data.latestRevision).toBe(7);\n            expect(data.interdiffRevision).toBe(null);\n            expect(data.isInterdiff).toBe(false);\n            expect(data.isDraftDiff).toBe(false);\n            expect(data.baseCommitID).toBe(3);\n            expect(data.tipCommitID).toBe(4);\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,mCAAmC,EAAE,YAAW;EAClDC,QAAQ,CAAC,OAAO,EAAE,YAAW;IACzBC,EAAE,CAAC,cAAc,EAAE,YAAW;MAC1B,MAAMC,IAAI,GAAGC,EAAE,CAACC,YAAY,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE;QACzDC,QAAQ,EAAE,CAAC;QACXC,eAAe,EAAE,CAAC;QAClBC,kBAAkB,EAAE,CAAC;QACrBC,YAAY,EAAE,IAAI;QAClBC,aAAa,EAAE;MACnB,CAAC,CAAC;MAEFC,MAAM,CAACZ,IAAI,CAAC,CAACa,GAAG,CAACC,IAAI,CAACR,SAAS,CAAC;MAChCM,MAAM,CAACZ,IAAI,CAACO,QAAQ,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC;MAC7BF,MAAM,CAACZ,IAAI,CAACe,cAAc,CAAC,CAACD,IAAI,CAAC,CAAC,CAAC;MACnCF,MAAM,CAACZ,IAAI,CAACgB,iBAAiB,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC;MACtCF,MAAM,CAACZ,IAAI,CAACiB,WAAW,CAAC,CAACH,IAAI,CAAC,IAAI,CAAC;MACnCF,MAAM,CAACZ,IAAI,CAACkB,WAAW,CAAC,CAACJ,IAAI,CAAC,IAAI,CAAC;MACnCF,MAAM,CAACZ,IAAI,CAACmB,YAAY,CAAC,CAACL,IAAI,CAAC,IAAI,CAAC;MACpCF,MAAM,CAACZ,IAAI,CAACoB,WAAW,CAAC,CAACN,IAAI,CAAC,IAAI,CAAC;IACvC,CAAC,CAAC;IAEFf,EAAE,CAAC,uCAAuC,EAAE,YAAW;MACnD,MAAMC,IAAI,GAAGC,EAAE,CAACC,YAAY,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE;QACzDC,QAAQ,EAAE,CAAC;QACXC,eAAe,EAAE,CAAC;QAClBC,kBAAkB,EAAE,IAAI;QACxBC,YAAY,EAAE,KAAK;QACnBC,aAAa,EAAE,KAAK;QACpBU,cAAc,EAAE,CAAC;QACjBC,aAAa,EAAE;MACnB,CAAC,CAAC;MAEFV,MAAM,CAACZ,IAAI,CAAC,CAACa,GAAG,CAACC,IAAI,CAACR,SAAS,CAAC;MAChCM,MAAM,CAACZ,IAAI,CAACO,QAAQ,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC;MAC7BF,MAAM,CAACZ,IAAI,CAACe,cAAc,CAAC,CAACD,IAAI,CAAC,CAAC,CAAC;MACnCF,MAAM,CAACZ,IAAI,CAACgB,iBAAiB,CAAC,CAACF,IAAI,CAAC,IAAI,CAAC;MACzCF,MAAM,CAACZ,IAAI,CAACiB,WAAW,CAAC,CAACH,IAAI,CAAC,KAAK,CAAC;MACpCF,MAAM,CAACZ,IAAI,CAACkB,WAAW,CAAC,CAACJ,IAAI,CAAC,KAAK,CAAC;MACpCF,MAAM,CAACZ,IAAI,CAACmB,YAAY,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;MACjCF,MAAM,CAACZ,IAAI,CAACoB,WAAW,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}