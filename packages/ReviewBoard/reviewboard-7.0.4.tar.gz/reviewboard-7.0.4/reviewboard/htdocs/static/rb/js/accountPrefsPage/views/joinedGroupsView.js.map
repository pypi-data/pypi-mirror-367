{"version":3,"file":"joinedGroupsView.js","names":["GroupMembershipItem","Djblets","Config","ListItem","extend","defaults","_","localSiteName","displayName","groupName","joined","showRemove","url","prototype","initialize","apply","arguments","name","get","set","text","editURL","group","RB","ReviewGroup","id","localSitePrefix","on","_updateActions","joinGroup","addUser","UserSession","instance","leaveGroup","removeUser","actions","label","gettext","trigger","GroupMembershipItemView","ListItemView","actionHandlers","template","join","_onJoinClicked","model","_onLeaveClicked","SiteGroupsView","Backbone","View","options","collection","FilteredCollection","Collection","groups","groupList","List","render","_listView","ListView","ItemView","$el","html","appendTo","$","filterBy","setFilters","toggle","length","JoinedGroupsView","events","_$listsContainer","_$search","_searchText","_groupViews","Object","entries","view","push","_onGroupSearchChanged","val","forEach","_onSubmit","e","preventDefault"],"sources":["../../../../../../static/rb/js/accountPrefsPage/views/joinedGroupsView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An item representing the user's membership with a group.\n *\n * This keeps track of the group's information and the membership state\n * for the user. It also allows changing that membership.\n *\n * This provides two actions: 'Join', and 'Leave'.\n */\nconst GroupMembershipItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        localSiteName: null,\n        displayName: null,\n        groupName: null,\n        joined: false,\n        showRemove: false,\n        url: null\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /**\n     * Initialize the item.\n     *\n     * The item's name and URL will be taken from the serialized group\n     * information, and a proxy ReviewGroup will be created to handle\n     * membership.\n     */\n    initialize() {\n        Djblets.Config.ListItem.prototype.initialize.apply(this, arguments);\n\n        const name = this.get('name');\n        const localSiteName = this.get('localSiteName');\n\n        this.set({\n            text: name,\n            editURL: this.get('url')\n        });\n\n        this.group = new RB.ReviewGroup({\n            id: this.get('reviewGroupID'),\n            name: name,\n            localSitePrefix: (localSiteName ? 's/' + localSiteName + '/' : '')\n        });\n\n        this.on('change:joined', this._updateActions, this);\n        this._updateActions();\n    },\n\n    /**\n     * Join the group.\n     *\n     * This will add the user to the group, and set the 'joined' property\n     * to true upon completion.\n     */\n    async joinGroup() {\n        await this.group.addUser(RB.UserSession.instance.get('username'));\n        this.set('joined', true);\n    },\n\n    /**\n     * Leave the group.\n     *\n     * This will remove the user from the group, and set the 'joined' property\n     * to false upon completion.\n     */\n    async leaveGroup() {\n        await this.group.removeUser(RB.UserSession.instance.get('username'));\n        this.set('joined', false);\n    },\n\n    /**\n     * Update the list of actions.\n     *\n     * This will replace the existing action, if any, with a new action\n     * allowing the user to join or leave the group, depending on their\n     * current membership status.\n     */\n    _updateActions() {\n        if (this.get('joined')) {\n            this.actions = [{\n                id: 'leave',\n                label: gettext('Leave')\n            }];\n        } else {\n            this.actions = [{\n                id: 'join',\n                label: gettext('Join')\n            }];\n        }\n\n        this.trigger('actionsChanged');\n    }\n});\n\n\n/**\n * Provides UI for showing a group membership.\n *\n * This will display the group information and provide buttons for\n * the Join/Leave actions.\n */\nconst GroupMembershipItemView = Djblets.Config.ListItemView.extend({\n    actionHandlers: {\n        'join': '_onJoinClicked',\n        'leave': '_onLeaveClicked'\n    },\n\n    template: _.template([\n        '<span class=\"config-group-name\">',\n        ' <a href=\"<%- editURL %>\"><%- text %></a>',\n        '</span>',\n        '<span class=\"config-group-display-name\"><%- displayName %></span>'\n    ].join('')),\n\n    /**\n     * Handler for when Join is clicked.\n     *\n     * Tells the model to join the group.\n     */\n    _onJoinClicked() {\n        this.model.joinGroup();\n    },\n\n    /**\n     * Handler for when Leave is clicked.\n     *\n     * Tells the model to leave the group.\n     */\n    _onLeaveClicked() {\n        this.model.leaveGroup();\n    }\n});\n\n\n/**\n * Displays a list of group membership items, globally or for a Local Site.\n *\n * If displaying for a Local Site, then the name of the site will be shown\n * before the list.\n *\n * Each group in the list will be shown as an item with Join/Leave buttons.\n *\n * The list of groups are filterable. When filtering, if there are no groups\n * that match the filter, then the whole view will be hidden.\n */\nconst SiteGroupsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <% if (name) { %>\n         <div class=\"djblets-l-config-forms-container\">\n          <h3><%- name %></h3>\n         </div>\n        <% } %>\n        <div class=\"groups\"></div>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * This will create a list for all groups in this view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for view construction.\n     *\n     * Option Args:\n     *     name (string):\n     *         The name of the local site, if any.\n     */\n    initialize(options) {\n        this.name = options.name;\n        this.collection = new RB.FilteredCollection(null, {\n            collection: new Backbone.Collection(options.groups, {\n                model: GroupMembershipItem\n            })\n        });\n        this.groupList = new Djblets.Config.List({}, {\n            collection: this.collection\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     SiteGroupsView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._listView = new Djblets.Config.ListView({\n            ItemView: GroupMembershipItemView,\n            model: this.groupList\n        });\n\n        this.$el.html(this.template({\n            name: this.name\n        }));\n\n        this._listView.render();\n        this._listView.$el.appendTo(this.$('.groups'));\n\n        return this;\n    },\n\n    /**\n     * Filter the list of groups by name.\n     *\n     * If no groups are found, then the view will hide itself.\n     *\n     * Args:\n     *     name (string):\n     *         The group name to search for.\n     */\n    filterBy(name) {\n        this.collection.setFilters({\n            'name': name\n        });\n\n        this.$el.toggle(this.collection.length > 0);\n    }\n});\n\n\n/**\n * Provides UI for managing a user's group memberships.\n *\n * All accessible groups will be shown to the user, sectioned by\n * Local Site. This list is filterable through a search box at the top of\n * the view.\n *\n * Each group entry provides a button for joining or leaving the group,\n * allowing users to manage their memberships.\n */\nRB.JoinedGroupsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <div class=\"djblets-l-config-forms-container\">\n         <div class=\"rb-c-search-field\">\n          <span class=\"fa fa-search\"></span>\n          <input class=\"rb-c-search-field__input\" type=\"search\">\n         </div>\n        </div>\n        <div class=\"group-lists\"></div>\n    `),\n\n    events: {\n        'submit': '_onSubmit',\n        'keyup .rb-c-search-field__input': '_onGroupSearchChanged',\n        'change .rb-c-search-field__input': '_onGroupSearchChanged',\n    },\n\n    /*\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for view construction.\n     *\n     * Option Args:\n     *     groups (Array of object):\n     *         Initial set of groups.\n     */\n    initialize(options) {\n        this.groups = options.groups;\n\n        this._$listsContainer = null;\n        this._$search = null;\n        this._searchText = null;\n        this._groupViews = [];\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will set up the elements and the list of SiteGroupsViews.\n     *\n     * Returns:\n     *     RB.JoinedGroupsView.\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.html(this.template());\n\n        this._$listsContainer = this.$('.group-lists');\n        this._$search = this.$('.rb-c-search-field__input');\n\n        for (let [localSiteName, groups] of Object.entries(this.groups)) {\n            if (groups.length > 0) {\n                const view = new SiteGroupsView({\n                    name: localSiteName,\n                    groups: groups\n                });\n\n                view.$el.appendTo(this._$listsContainer);\n                view.render();\n\n                this._groupViews.push(view);\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Handler for when the search box changes.\n     *\n     * This will instruct the SiteGroupsViews to filter their contents\n     * by the text entered into the search box.\n     */\n    _onGroupSearchChanged() {\n        const text = this._$search.val();\n\n        if (text !== this._searchText) {\n            this._searchText = text;\n            this._groupViews.forEach(view => view.filterBy(this._searchText));\n        }\n    },\n\n    /**\n     * Prevent form submission.\n     *\n     * This form live updates based on the content of the <input> field and\n     * submitting it will result in a CSRF error.\n     *\n     * Args:\n     *     e (Event):\n     *         The form submission event.\n     */\n    _onSubmit(e) {\n        e.preventDefault();\n    }\n});\n\n\n})();\n"],"mappings":"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","ignoreList":[]}