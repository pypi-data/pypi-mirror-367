{"version":3,"file":"diffRevisionSelectorView.js","names":["RB","DiffRevisionSelectorView","RevisionSelectorView","extend","initialize","options","prototype","call","firstLabelActive","numHandles","render","labels","i","numDiffs","push","toString","_update","revision","model","get","interdiffRevision","_values","_rendered","_updateHandles","_onLabelClick","ev","$target","$","currentTarget","trigger","data"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffRevisionSelectorView.es6.js"],"sourcesContent":["/**\n * A view that allows users to select a revision of the diff to view.\n */\nRB.DiffRevisionSelectorView = RB.RevisionSelectorView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     numDiffs (number):\n     *         The total number of diff revisions available.\n     */\n    initialize: function(options) {\n        this.options = options;\n\n        RB.RevisionSelectorView.prototype.initialize.call(this, {\n            firstLabelActive: true,\n            numHandles: 2,\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DiffRevisionSelectorView:\n     *     This object, for chaining.\n     */\n    render: function() {\n        const labels = ['orig'];\n\n        for (let i = 1; i <= this.options.numDiffs; i++) {\n            labels.push(i.toString());\n        }\n\n        return RB.RevisionSelectorView.prototype.render.call(this, labels);\n    },\n\n    /**\n     * Update the displayed revision based on the model.\n     */\n    _update: function() {\n        const revision = this.model.get('revision');\n        const interdiffRevision = this.model.get('interdiffRevision');\n\n        this._values = [\n            interdiffRevision ? revision : 0,\n            interdiffRevision ? interdiffRevision : revision\n        ];\n\n        if (this._rendered) {\n            this._updateHandles();\n        }\n    },\n\n    /**\n     * Callback for when one of the labels is clicked.\n     *\n     * This will jump to the target revision.\n     *\n     * TODO: we should allow people to click and drag over a range of labels to\n     * select an interdiff.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    _onLabelClick: function(ev) {\n        const $target = $(ev.currentTarget);\n\n        this.trigger('revisionSelected', [0, $target.data('revision')]);\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACAA,EAAE,CAACC,wBAAwB,GAAGD,EAAE,CAACE,oBAAoB,CAACC,MAAM,CAAC;EACzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,EAAE,SAAAA,CAASC,OAAO,EAAE;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtBL,EAAE,CAACE,oBAAoB,CAACI,SAAS,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,EAAE;MACpDC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IAChB,CAAC,CAAC;EACN,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAM,EAAE,SAAAA,CAAA,EAAW;IACf,MAAMC,MAAM,GAAG,CAAC,MAAM,CAAC;IAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACP,OAAO,CAACQ,QAAQ,EAAED,CAAC,EAAE,EAAE;MAC7CD,MAAM,CAACG,IAAI,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC;IAC7B;IAEA,OAAOf,EAAE,CAACE,oBAAoB,CAACI,SAAS,CAACI,MAAM,CAACH,IAAI,CAAC,IAAI,EAAEI,MAAM,CAAC;EACtE,CAAC;EAED;AACJ;AACA;EACIK,OAAO,EAAE,SAAAA,CAAA,EAAW;IAChB,MAAMC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,UAAU,CAAC;IAC3C,MAAMC,iBAAiB,GAAG,IAAI,CAACF,KAAK,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAE7D,IAAI,CAACE,OAAO,GAAG,CACXD,iBAAiB,GAAGH,QAAQ,GAAG,CAAC,EAChCG,iBAAiB,GAAGA,iBAAiB,GAAGH,QAAQ,CACnD;IAED,IAAI,IAAI,CAACK,SAAS,EAAE;MAChB,IAAI,CAACC,cAAc,CAAC,CAAC;IACzB;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,EAAE,SAAAA,CAASC,EAAE,EAAE;IACxB,MAAMC,OAAO,GAAGC,CAAC,CAACF,EAAE,CAACG,aAAa,CAAC;IAEnC,IAAI,CAACC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAEH,OAAO,CAACI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EACnE;AACJ,CAAC,CAAC","ignoreList":[]}