{"version":3,"file":"repositoryform.js","names":["prevTypes","origRepoTypes","powerPackTemplate","gettext","gerritPluginRequiredTemplate","interpolate","MANUAL_URL","updatePlanEl","$row","$plan","serviceType","isFake","planTypes","HOSTING_SERVICES","plans","selectedPlan","val","empty","length","hide","i","planType","opt","$","type","text","label","appendTo","prop","show","triggerHandler","updateHostingForm","$hostingType","formPrefix","$forms","formID","updateRepositoryType","hostingType","newRepoTypes","scmtools","$repoTypes","currentRepoType","forEach","repoType","indexOf","value","updateAccountList","$hostingAccount","$authForm","hostingInfo","accounts","selectedAccount","parseInt","foundSelected","find","remove","needs_two_factor_auth_code","account","username","hosting_url","$opt","pk","data","document","ready","$hostingAuthForms","$hostingRepoForms","$hostingAccountRow","$hostingAccountRelink","addClass","$scmtoolAuthForms","$scmtoolRepoForms","$associateSshKeyFieldset","parents","$associateSshKey","associateSshKeyDisabled","$bugTrackerUseHosting","$bugTrackerUseHostingRow","$bugTrackerType","$bugTrackerHostingURLRow","$bugTrackerTypeRow","$bugTrackerPlan","$bugTrackerPlanRow","$bugTrackerURLRow","$bugTrackerUsernameRow","$repoPlanRow","$repoPlan","$publicAccess","$tool","$toolRow","$showSshKey","$publicKeyPopup","$bugTrackerForms","$submitButtons","$editHostingCredentials","$editHostingCredentialsLabel","$forceAuth","$hostingPowerPackAdvert","html","closest","$toolPowerPackAdvert","$gerritPluginInfo","bug_tracker_type","hosting_type","tool","each","el","$repoType","push","change","checked","plan","bugTrackerType","planInfo","toggle","bug_tracker_requires_username","isCustom","fake","supports_bug_trackers","disabled","supports_ssh_key_association","selectedIndex","$selectedOption","options","is_authorized","scmtoolID","$repoForm","toolInfo","TOOLS_INFO","name","self_hosted","visible","on","is","click"],"sources":["../../../../../static/rb/js/admin/repositoryform.es6.js"],"sourcesContent":["(function() {\n\n\nconst prevTypes = {};\nconst origRepoTypes = [];\nconst powerPackTemplate = dedent`\n    <h3>${gettext('Power Pack Required')}</h3>\n    <p>\n    ${gettext('<span class=\"power-pack-advert-hosting-type\"></span> support is available with <a href=\"https://www.reviewboard.org/powerpack/\">Power Pack</a>, an extension which also offers powerful reports, document review, and more.')}\n    </p>\n`;\nconst gerritPluginRequiredTemplate = dedent`\n    <h3>\n    ${gettext('Plugin Required')}\n    </h3>\n    <p>\n    ${interpolate(\n        gettext('The <code>gerrit-reviewboard</code> plugin is required for Gerrit integration. See the <a href=\"%s\" target=\"_blank\">instructions</a> for installing the plugin on your server.'),\n        [MANUAL_URL + 'admin/configuration/repositories/gerrit/'])}\n    </p>\n`;\n\n\nfunction updatePlanEl($row, $plan, serviceType, isFake) {\n    const planTypes = HOSTING_SERVICES[serviceType].plans;\n    const selectedPlan = $plan.val();\n\n    $plan.empty();\n\n    if (planTypes.length === 1 || isFake) {\n        $row.hide();\n    } else {\n        for (let i = 0; i < planTypes.length; i++) {\n            const planType = planTypes[i];\n            const opt = $('<option>')\n                .val(planType.type)\n                .text(planType.label)\n                .appendTo($plan);\n\n            if (planType.type === selectedPlan) {\n                opt.prop('selected', true);\n            }\n        }\n\n        $row.show();\n    }\n\n    $plan.triggerHandler('change');\n}\n\n\nfunction updateHostingForm($hostingType, formPrefix, $plan, $forms) {\n    const formID = `#${formPrefix}-${$hostingType.val()}-${$plan.val() || 'default'}`;\n\n    $forms.hide();\n    $(formID).show();\n}\n\n\nfunction updateRepositoryType() {\n    const hostingType = $('#id_hosting_type').val();\n    const newRepoTypes = (hostingType === 'custom'\n                          ? []\n                          : HOSTING_SERVICES[hostingType].scmtools);\n    const $repoTypes = $('#id_tool');\n    const currentRepoType = $repoTypes.val();\n\n    $repoTypes.empty();\n\n    origRepoTypes.forEach(repoType => {\n        if (newRepoTypes.length === 0 ||\n            newRepoTypes.indexOf(repoType.text) !== -1 ||\n            newRepoTypes.indexOf(repoType.value) !== -1) {\n            $('<option>')\n                .text(repoType.text)\n                .val(repoType.value)\n                .appendTo($repoTypes);\n\n            if (repoType.value === currentRepoType) {\n                $repoTypes.val(currentRepoType);\n            }\n        }\n    });\n\n    $repoTypes.triggerHandler('change');\n}\n\n\nfunction updateAccountList() {\n    const hostingType = $('#id_hosting_type').val();\n    const $hostingAccount = $('#id_hosting_account');\n    const $authForm = $('#hosting-auth-form-' + hostingType);\n    const hostingInfo = HOSTING_SERVICES[hostingType];\n    const accounts = hostingInfo.accounts;\n    const selectedAccount = parseInt($hostingAccount.val(), 10);\n    let foundSelected = false;\n\n    /* Rebuild the list of accounts. */\n    $hostingAccount.find('option[value!=\"\"]').remove();\n\n    if (hostingInfo.needs_two_factor_auth_code ||\n        $authForm.find('.errorlist').length > 0) {\n        /*\n         * The first one will be selected automatically, which\n         * we want. Don't select any below.\n         */\n        foundSelected = true;\n    }\n\n    accounts.forEach(account => {\n        let text = account.username;\n\n        if (account.hosting_url) {\n            text += ` (${account.hosting_url})`;\n        }\n\n        const $opt = $('<option>')\n            .val(account.pk)\n            .text(text)\n            .data('account', account)\n            .appendTo($hostingAccount);\n\n        if (account.pk === selectedAccount || !foundSelected) {\n            $opt.prop('selected', true);\n            foundSelected = true;\n            $hostingAccount.triggerHandler('change');\n        }\n    });\n}\n\n\n$(document).ready(function() {\n    const $hostingType = $('#id_hosting_type');\n    const $hostingAuthForms = $('.hosting-auth-form');\n    const $hostingRepoForms = $('.hosting-repo-form');\n    const $hostingAccount = $('#id_hosting_account');\n    const $hostingAccountRow = $('#row-hosting_account');\n    const $hostingAccountRelink = $('<p>')\n        .text(gettext('The authentication requirements for this account have changed. You will need to re-authenticate.'))\n        .addClass('errornote')\n        .hide()\n        .appendTo($hostingAccountRow);\n    const $scmtoolAuthForms = $('.scmtool-auth-form');\n    const $scmtoolRepoForms = $('.scmtool-repo-form');\n    const $associateSshKeyFieldset =\n        $('#row-associate_ssh_key').parents('fieldset');\n    const $associateSshKey = $('#id_associate_ssh_key');\n    const associateSshKeyDisabled = $associateSshKey.prop('disabled');\n    const $bugTrackerUseHosting = $('#id_bug_tracker_use_hosting');\n    const $bugTrackerUseHostingRow = $('#row-bug_tracker_use_hosting');\n    const $bugTrackerType = $('#id_bug_tracker_type');\n    const $bugTrackerHostingURLRow = $('#row-bug_tracker_hosting_url');\n    const $bugTrackerTypeRow = $('#row-bug_tracker_type');\n    const $bugTrackerPlan = $('#id_bug_tracker_plan');\n    const $bugTrackerPlanRow = $('#row-bug_tracker_plan');\n    const $bugTrackerURLRow = $('#row-bug_tracker');\n    const $bugTrackerUsernameRow =\n        $('#row-bug_tracker_hosting_account_username');\n    const $repoPlanRow = $('#row-repository_plan');\n    const $repoPlan = $('#id_repository_plan');\n    const $publicAccess = $('#id_public');\n    const $tool = $('#id_tool');\n    const $toolRow = $('#row-tool');\n    const $showSshKey = $('#show-ssh-key-link');\n    const $publicKeyPopup = $('#ssh-public-key-popup');\n    const $bugTrackerForms = $('.bug-tracker-form');\n    const $submitButtons = $('input[type=\"submit\"]');\n    const $editHostingCredentials = $('#repo-edit-hosting-credentials');\n    const $editHostingCredentialsLabel =\n        $('#repo-edit-hosting-credentials-label');\n    const $forceAuth = $('#id_force_authorize');\n    const $hostingPowerPackAdvert = $('<div class=\"powerpack-advert\">')\n        .html(powerPackTemplate)\n        .hide()\n        .appendTo($hostingType.closest('fieldset'));\n    const $toolPowerPackAdvert = $('<div class=\"powerpack-advert\">')\n        .html(powerPackTemplate)\n        .hide()\n        .appendTo($tool.closest('fieldset'));\n    const $gerritPluginInfo = $('<div class=\"gerrit-plugin-advert\">')\n        .html(gerritPluginRequiredTemplate)\n        .hide()\n        .appendTo($('#row-hosting_type'));\n\n    prevTypes.bug_tracker_type = 'none';\n    prevTypes.hosting_type = 'custom';\n    prevTypes.tool = 'none';\n\n    $tool.find('option').each((i, el) => {\n        const $repoType = $(el);\n\n        origRepoTypes.push({\n            value: $repoType.val(),\n            text: $repoType.text(),\n        });\n    });\n\n    $bugTrackerUseHosting\n        .change(function() {\n            if (this.checked) {\n                $bugTrackerTypeRow.hide();\n                $bugTrackerPlanRow.hide();\n                $bugTrackerUsernameRow.hide();\n                $bugTrackerURLRow.hide();\n                $bugTrackerForms.hide();\n            } else {\n                $bugTrackerTypeRow.show();\n                $bugTrackerType.triggerHandler('change');\n            }\n        })\n        .triggerHandler('change');\n\n    $repoPlan.change(() => updateHostingForm($hostingType, 'repo-form-hosting',\n                                             $repoPlan, $hostingRepoForms));\n\n    $bugTrackerPlan.change(() => {\n        const plan = $bugTrackerPlan.val() || 'default';\n        const bugTrackerType = $bugTrackerType.val();\n        const planInfo = HOSTING_SERVICES[bugTrackerType].planInfo[plan];\n\n        updateHostingForm($bugTrackerType, 'bug-tracker-form-hosting',\n                          $bugTrackerPlan, $bugTrackerForms);\n\n        $bugTrackerUsernameRow.toggle(\n            planInfo.bug_tracker_requires_username);\n    });\n\n    $hostingType\n        .change(() => {\n            const hostingType = $hostingType.val();\n            const isCustom = (hostingType === 'custom');\n            const isFake = (!isCustom &&\n                            HOSTING_SERVICES[hostingType].fake === true);\n\n            updateRepositoryType();\n\n            $gerritPluginInfo.toggle(hostingType === 'gerrit');\n\n            if (isCustom) {\n                $repoPlanRow.hide();\n            } else {\n                $scmtoolAuthForms.hide();\n                $scmtoolRepoForms.hide();\n\n                updatePlanEl($repoPlanRow, $repoPlan, hostingType, isFake);\n            }\n\n            $repoPlan.triggerHandler('change');\n\n            if (isCustom ||\n                isFake ||\n                !HOSTING_SERVICES[hostingType].supports_bug_trackers) {\n                $bugTrackerUseHostingRow.hide();\n                $bugTrackerUseHosting\n                    .prop({\n                        disabled: true,\n                        checked: false,\n                    })\n                    .triggerHandler('change');\n            } else {\n                $bugTrackerUseHosting.prop('disabled', false);\n                $bugTrackerUseHostingRow.show();\n            }\n\n            if (isCustom ||\n                !HOSTING_SERVICES[hostingType].supports_ssh_key_association) {\n                $associateSshKeyFieldset.hide();\n                $associateSshKey.prop({\n                    disabled: true,\n                    checked: false,\n                });\n            } else {\n                /*\n                 * Always use the original state of the checkbox (i.e. the\n                 * state on page load)\n                 */\n                $associateSshKey.prop('disabled', associateSshKeyDisabled);\n                $associateSshKeyFieldset.show();\n            }\n\n            if (isFake) {\n                $hostingPowerPackAdvert\n                    .find('.power-pack-advert-hosting-type')\n                    .text($hostingType.find(':selected').text());\n            }\n\n            $hostingAccountRow.toggle(!isFake);\n            $toolRow.toggle(!isFake);\n\n            $hostingPowerPackAdvert.toggle(isFake);\n            $submitButtons.prop('disabled', isFake);\n\n            if (!isCustom) {\n                updateAccountList();\n            }\n        })\n        .triggerHandler('change');\n\n    $([$hostingType[0], $hostingAccount[0]])\n        .change(() => {\n            $hostingAuthForms.hide();\n            $hostingAccountRelink.hide();\n            $editHostingCredentials\n                .hide()\n                .val(gettext('Edit credentials'));\n            $forceAuth.val('false');\n\n            const hostingType = $hostingType.val();\n\n            if (hostingType === 'custom') {\n                $hostingAccountRow.hide();\n            } else {\n                const hostingInfo = HOSTING_SERVICES[hostingType];\n\n                if (hostingInfo.fake !== true) {\n                    $hostingAccountRow.show();\n\n                    const $authForm = $('#hosting-auth-form-' + hostingType);\n\n                    /*\n                     * Hide any fields required for 2FA unless explicitly\n                     * needed.\n                     */\n                    $authForm.find('[data-required-for-2fa]').closest('.form-row')\n                        .toggle(hostingInfo.needs_two_factor_auth_code);\n\n                    if ($hostingAccount.val() === '') {\n                        /* Present fields for linking a new account. */\n                        $authForm.show();\n                    } else if (hostingInfo.needs_two_factor_auth_code) {\n                        /*\n                         * The user needs to enter a 2FA code. We need to\n                         * show the auth form, and ensure we will be forcing\n                         * authentication.\n                         */\n                        $forceAuth.val('true');\n                        $authForm.show();\n                    } else {\n                        /* An existing linked account has been selected. */\n                        const selectedIndex = $hostingAccount[0].selectedIndex;\n                        const $selectedOption =\n                            $($hostingAccount[0].options[selectedIndex]);\n                        const account = $selectedOption.data('account');\n\n                        if (account.is_authorized &&\n                            $authForm.find('.errorlist').length === 0) {\n                            $editHostingCredentials.show();\n                        } else {\n                            $authForm.show();\n                            $hostingAccountRelink.show();\n                        }\n                    }\n                }\n            }\n        })\n        .triggerHandler('change');\n\n    $tool\n        .change(() => {\n            if ($hostingType.val() === 'custom') {\n                const scmtoolID = $tool.val();\n                const $authForm = $('#auth-form-scm-' + scmtoolID);\n                const $repoForm = $('#repo-form-scm-' + scmtoolID);\n\n                const toolInfo = TOOLS_INFO[scmtoolID];\n                const isFake = (toolInfo.fake === true);\n\n                if (isFake) {\n                    $toolPowerPackAdvert\n                        .find('.power-pack-advert-hosting-type')\n                        .text(toolInfo.name);\n                }\n\n                $scmtoolAuthForms.hide();\n                $scmtoolRepoForms.hide();\n\n                $authForm.toggle(!isFake);\n                $repoForm.toggle(!isFake);\n                $toolPowerPackAdvert.toggle(isFake);\n                $submitButtons.prop('disabled', isFake);\n            }\n        })\n        .triggerHandler('change');\n\n    $bugTrackerType\n        .change(() => {\n            $bugTrackerForms.hide();\n\n            const bugTrackerType = $bugTrackerType.val();\n\n            if (bugTrackerType === 'custom' || bugTrackerType === 'none') {\n                $bugTrackerHostingURLRow.hide();\n                $bugTrackerPlanRow.hide();\n                $bugTrackerUsernameRow.hide();\n            }\n\n            if (bugTrackerType === 'custom') {\n                $bugTrackerURLRow.show();\n            } else if (bugTrackerType === 'none') {\n                $bugTrackerURLRow.hide();\n            } else {\n                $bugTrackerURLRow.hide();\n                updatePlanEl($bugTrackerPlanRow, $bugTrackerPlan,\n                             bugTrackerType, false);\n\n                $bugTrackerHostingURLRow.toggle(\n                    HOSTING_SERVICES[bugTrackerType].self_hosted);\n            }\n        })\n        .triggerHandler('change');\n\n    $publicAccess\n        .change(function() {\n            var visible = !this.checked;\n            $('#row-users').toggle(visible);\n            $('#row-review_groups').toggle(visible);\n        })\n        .triggerHandler('change');\n\n    $showSshKey.on('click', () => {\n        if ($publicKeyPopup.is(':visible')) {\n            $showSshKey.text(gettext('Show your SSH public key'));\n            $publicKeyPopup.hide();\n        } else {\n            $showSshKey.text(gettext('Hide your SSH public key'));\n            $publicKeyPopup.show();\n        }\n\n        return false;\n    });\n\n    $editHostingCredentials.click(() => {\n        let $authForm = $('#hosting-auth-form-' + $hostingType.val());\n\n        if ($forceAuth.val() === 'true') {\n            $editHostingCredentialsLabel.text(gettext('Edit credentials'));\n            $authForm.hide();\n            $forceAuth.val('false');\n        } else {\n            $editHostingCredentialsLabel.text(\n                gettext('Cancel editing credentials'));\n            $authForm = $('#hosting-auth-form-' + $hostingType.val()).show();\n            $authForm.show();\n            $forceAuth.val('true');\n        }\n\n        return false;\n    });\n});\n\n\n})();\n"],"mappings":"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","ignoreList":[]}