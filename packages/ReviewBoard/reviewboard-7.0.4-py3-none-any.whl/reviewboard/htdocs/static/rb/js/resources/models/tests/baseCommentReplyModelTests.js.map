{"version":3,"file":"baseCommentReplyModelTests.js","names":["suite","parentObject","model","beforeEach","RB","BaseResource","BaseCommentReply","expect","validate","attributes","toBe","undefined","describe","spyOn","it","set","destroyIfEmpty","destroy","toHaveBeenCalled","not","rspNamespace","data","parse","stat","my_comment","id","text","text_type","richText","toJSON","force_text_type","include_text_types","replyToID","loaded","reply_to_id","strings","UNSET_PARENT_OBJECT"],"sources":["../../../../../../../static/rb/js/resources/models/tests/baseCommentReplyModelTests.es6.js"],"sourcesContent":["suite('rb/resources/models/BaseCommentReply', function() {\n    let parentObject;\n    let model;\n\n    beforeEach(function() {\n        parentObject = new RB.BaseResource({\n            'public': true,\n        });\n\n        model = new RB.BaseCommentReply({\n            parentObject: parentObject,\n        });\n\n        expect(model.validate(model.attributes)).toBe(undefined);\n    });\n\n    describe('destroyIfEmpty', function() {\n        beforeEach(function() {\n            spyOn(model, 'destroy');\n        });\n\n        it('Destroying when text is empty', function() {\n            model.set('text', '');\n            model.destroyIfEmpty();\n            expect(model.destroy).toHaveBeenCalled();\n        });\n\n        it('Not destroying when text is not empty', function() {\n            model.set('text', 'foo');\n            model.destroyIfEmpty();\n            expect(model.destroy).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('parse', function() {\n        beforeEach(function() {\n            model.rspNamespace = 'my_comment';\n        });\n\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                my_comment: {\n                    id: 42,\n                    text: 'foo',\n                    text_type: 'markdown',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.text).toBe('foo');\n            expect(data.richText).toBe(true);\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        describe('reply_to_id field', function() {\n            it('When loaded', function() {\n                model.set({\n                    replyToID: 10,\n                    loaded: true,\n                });\n                const data = model.toJSON();\n                expect(data.reply_to_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                model.set({\n                    replyToID: 10,\n                    loaded: false,\n                });\n                const data = model.toJSON();\n                expect(data.reply_to_id).toBe(10);\n            });\n        });\n\n        describe('richText field', function() {\n            it('With true', function() {\n                model.set('richText', true);\n                const data = model.toJSON();\n                expect(data.text_type).toBe('markdown');\n            });\n\n            it('With false', function() {\n                model.set('richText', false);\n                const data = model.toJSON();\n                expect(data.text_type).toBe('plain');\n            });\n        });\n\n        describe('text field', function() {\n            it('With value', function() {\n                model.set('text', 'foo');\n                const data = model.toJSON();\n                expect(data.text).toBe('foo');\n            });\n        });\n    });\n\n    describe('validate', function() {\n        describe('parentObject', function() {\n            it('With value', function() {\n                expect(model.validate({\n                    parentObject: parentObject,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    parentObject: null,\n                })).toBe(RB.BaseResource.strings.UNSET_PARENT_OBJECT);\n            });\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}