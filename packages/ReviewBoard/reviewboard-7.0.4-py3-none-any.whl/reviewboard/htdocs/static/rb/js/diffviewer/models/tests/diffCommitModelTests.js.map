{"version":3,"file":"diffCommitModelTests.js","names":["suite","describe","it","model","RB","DiffCommit","author_name","commit_id","commit_message","id","parent_id","parse","expect","toBeTruthy","attributes","not","toBe","undefined","toEqual","authorName","commitID","commitMessage","commitMessageBody","parentID","summary","hasSummary","message","repeat","substr"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffCommitModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffCommit', function() {\n    describe('parse', function() {\n        it('Short commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: 'A commit message.\\n',\n                    id: 1,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: 'A commit message.',\n                commitMessageBody: null,\n                id: 1,\n                parentID: 'r122',\n                summary: 'A commit message.',\n            });\n            expect(model.hasSummary()).toBe(false);\n        });\n\n        it('Long commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: dedent`\n                        This is a long commit message.\n\n                        It spans several lines.\n                        It has trailing newlines as well.\n\n\n                    `,\n                    id: 2,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: (\n                    'This is a long commit message.\\n\\n' +\n                    'It spans several lines.\\n' +\n                    'It has trailing newlines as well.'\n                ),\n                commitMessageBody: (\n                    'It spans several lines.\\n' +\n                    'It has trailing newlines as well.'\n                ),\n                id: 2,\n                parentID: 'r122',\n                summary: 'This is a long commit message.',\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n\n        it('Commit message with overlong first line', function() {\n            const message = 'abcd'.repeat(100);\n            const summary = message.substr(0, 77) + '...';\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r234',\n                    commit_message: message,\n                    id: 3,\n                    parent_id: 'r233',\n                },\n                {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r234',\n                commitMessage: message,\n                commitMessageBody: null,\n                id: 3,\n                parentID: 'r233',\n                summary: summary,\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}