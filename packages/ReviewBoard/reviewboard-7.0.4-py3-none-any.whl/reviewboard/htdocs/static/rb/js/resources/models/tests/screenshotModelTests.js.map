{"version":3,"file":"screenshotModelTests.js","names":["suite","model","beforeEach","RB","Screenshot","parentObject","BaseResource","describe","it","set","expect","getDisplayName","toBe","caption","filename","data","parse","stat","screenshot","id","review_url","not","undefined","reviewURL","toJSON"],"sources":["../../../../../../../static/rb/js/resources/models/tests/screenshotModelTests.es6.js"],"sourcesContent":["suite('rb/resources/models/Screenshot', function() {\n    let model;\n\n    beforeEach(function(){\n        model = new RB.Screenshot({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('getDisplayName', function() {\n        it('With caption', function() {\n            model.set('caption', 'My Caption');\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n\n        it('With filename', function() {\n            model.set('filename', 'myfile.png');\n\n            expect(model.getDisplayName()).toBe('myfile.png');\n        });\n\n        it('With caption and filename', function() {\n            model.set({\n                caption: 'My Caption',\n                filename: 'myfile.png'\n            });\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                screenshot: {\n                    id: 42,\n                    caption: 'my-caption',\n                    filename: 'my-filename',\n                    review_url: '/review-ui/',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('my-caption');\n            expect(data.filename).toBe('my-filename');\n            expect(data.reviewURL).toBe('/review-ui/');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,gCAAgC,EAAE,YAAW;EAC/C,IAAIC,KAAK;EAETC,UAAU,CAAC,YAAU;IACjBD,KAAK,GAAG,IAAIE,EAAE,CAACC,UAAU,CAAC;MACtBC,YAAY,EAAE,IAAIF,EAAE,CAACG,YAAY,CAAC;QAC9B,QAAQ,EAAE;MACd,CAAC;IACL,CAAC,CAAC;EACN,CAAC,CAAC;EAEFC,QAAQ,CAAC,gBAAgB,EAAE,YAAW;IAClCC,EAAE,CAAC,cAAc,EAAE,YAAW;MAC1BP,KAAK,CAACQ,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC;MAElCC,MAAM,CAACT,KAAK,CAACU,cAAc,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY,CAAC;IACrD,CAAC,CAAC;IAEFJ,EAAE,CAAC,eAAe,EAAE,YAAW;MAC3BP,KAAK,CAACQ,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC;MAEnCC,MAAM,CAACT,KAAK,CAACU,cAAc,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY,CAAC;IACrD,CAAC,CAAC;IAEFJ,EAAE,CAAC,2BAA2B,EAAE,YAAW;MACvCP,KAAK,CAACQ,GAAG,CAAC;QACNI,OAAO,EAAE,YAAY;QACrBC,QAAQ,EAAE;MACd,CAAC,CAAC;MAEFJ,MAAM,CAACT,KAAK,CAACU,cAAc,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY,CAAC;IACrD,CAAC,CAAC;EACN,CAAC,CAAC;EAEFL,QAAQ,CAAC,OAAO,EAAE,YAAW;IACzBC,EAAE,CAAC,cAAc,EAAE,YAAW;MAC1B,MAAMO,IAAI,GAAGd,KAAK,CAACe,KAAK,CAAC;QACrBC,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE;UACRC,EAAE,EAAE,EAAE;UACNN,OAAO,EAAE,YAAY;UACrBC,QAAQ,EAAE,aAAa;UACvBM,UAAU,EAAE;QAChB;MACJ,CAAC,CAAC;MAEFV,MAAM,CAACK,IAAI,CAAC,CAACM,GAAG,CAACT,IAAI,CAACU,SAAS,CAAC;MAChCZ,MAAM,CAACK,IAAI,CAACI,EAAE,CAAC,CAACP,IAAI,CAAC,EAAE,CAAC;MACxBF,MAAM,CAACK,IAAI,CAACF,OAAO,CAAC,CAACD,IAAI,CAAC,YAAY,CAAC;MACvCF,MAAM,CAACK,IAAI,CAACD,QAAQ,CAAC,CAACF,IAAI,CAAC,aAAa,CAAC;MACzCF,MAAM,CAACK,IAAI,CAACQ,SAAS,CAAC,CAACX,IAAI,CAAC,aAAa,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,CAAC;EAEFL,QAAQ,CAAC,QAAQ,EAAE,YAAW;IAC1BA,QAAQ,CAAC,eAAe,EAAE,YAAW;MACjCC,EAAE,CAAC,YAAY,EAAE,YAAW;QACxBP,KAAK,CAACQ,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;QAC3B,MAAMM,IAAI,GAAGd,KAAK,CAACuB,MAAM,CAAC,CAAC;QAC3Bd,MAAM,CAACK,IAAI,CAACF,OAAO,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;MACpC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}