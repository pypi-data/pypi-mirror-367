{"version":3,"file":"apiUtils.js","names":["$","ajaxTransport","options","origOptions","jqXHR","window","FormData","xhr","send","headers","completeCB","addEventListener","result","dataType","response","status","statusText","getAllResponseHeaders","username","open","type","url","async","password","responseType","xhrFields","field","hasOwnProperty","crossDomain","key","setRequestHeader","e","hasContent","data","abort","readyState","RB","setActivityIndicator","enabled","$activityIndicator","_$activityIndicator","ajaxOptions","enableIndicator","noActivityIndicator","children","text","gettext","removeClass","show","hasClass","_activityIndicatorHideImmediately","hide","delay","fadeOut","apiCall","prefix","SITE_ROOT","path","showErrorPage","$iframe","width","requestData","param","appendTo","document","body","append","on","height","position","top","modalBox","stretchX","stretchY","title","doc","contentDocument","contentWindow","write","close","doCall","buttons","attr","defaultOptions","error","textStatus","errorThrown","responseText","rsp","JSON","parse","stat","_","isFunction","success","addClass","click","forcedOptions","complete","funcQueue","next","extend","undefined","Object","Blob","api_format","form","ajaxSubmit","ajax","UserSession","instance","get","console","enableQueuing","add","start","storeAPIError","errorPayload","errorText","err","msg","Backbone","BackboneError","Error","constructor","modelOrCollection","promiseToCallbacks","context","callable","ready","omit","then","call","catch","finally"],"sources":["../../../../../static/rb/js/utils/apiUtils.es6.js"],"sourcesContent":["/**\n * jQuery AJAX transport for receiving Blob and ArrayBuffer data.\n *\n * XMLHttpRequest2 supports receiving binary data represented by\n * :js:class:`Blob` and :js:class:`ArrayBuffer`. This transport enabled binary\n * data support through standard :js:func:`jQuery.ajax` calls.\n */\n$.ajaxTransport('arraybuffer blob', function(options, origOptions, jqXHR) {\n    if (!window.FormData) {\n        return null;\n    }\n\n    let xhr;\n\n    return {\n        send(headers, completeCB) {\n            xhr = options.xhr();\n            xhr.addEventListener('load', () => {\n                const result = {};\n                result[options.dataType] = xhr.response;\n\n                completeCB(xhr.status, xhr.statusText, result,\n                           xhr.getAllResponseHeaders());\n            });\n\n            if (options.username) {\n                xhr.open(options.type, options.url, options.async,\n                         options.username, options.password);\n            } else {\n                xhr.open(options.type, options.url, options.async);\n            }\n\n            xhr.responseType = options.dataType;\n\n            /* Apply any custom fields that may be provided. */\n            const xhrFields = options.xhrFields;\n\n            if (xhrFields) {\n                for (let field in xhrFields) {\n                    if (xhrFields.hasOwnProperty(field)) {\n                        xhr[field] = xhrFields[field];\n                    }\n                }\n            }\n\n            if (!options.crossDomain && !headers['X-Requested-With']) {\n                headers['X-Requested-With'] = 'XMLHttpRequest';\n            }\n\n            /*\n             * Catch errors with cross-domain requests, like jQuery does.\n             */\n            try {\n                for (let key in headers) {\n                    if (headers.hasOwnProperty(key)) {\n                        xhr.setRequestHeader(key, headers[key]);\n                    }\n                }\n            } catch (e) {}\n\n            xhr.send(options.hasContent ? options.data : null);\n        },\n\n        abort() {\n            if (xhr && xhr.readyState !== 4) {\n                xhr.abort();\n            }\n        },\n    };\n});\n\n\n/**\n * Enable or disable the activity indicator.\n *\n * Args:\n *     enabled (boolean):\n *         Whether the activity indicator should be enabled.\n *\n *     options (object):\n *         Additional options.\n *\n * Option Args:\n *     noActivityIndicator (boolean):\n *         True if the indicator should be suppressed, even if ``enabled`` is\n *         true.\n *\n *     type (string):\n *         The type of HTTP request that the indicator is representing. This\n *         will be either ``GET`` (loading) or ``POST`` (saving).\n */\nRB.setActivityIndicator = function(enabled, options) {\n    const $activityIndicator = options._$activityIndicator ||\n                               $('#activity-indicator');\n\n    if (enabled) {\n        if (RB.ajaxOptions.enableIndicator && !options.noActivityIndicator) {\n            $activityIndicator.children('.indicator-text')\n                .text((options.type && options.type === 'GET')\n                      ? gettext('Loading...') : gettext('Saving...'));\n\n            $activityIndicator\n                .removeClass('error')\n                .show();\n        }\n    } else if (RB.ajaxOptions.enableIndicator &&\n               !options.noActivityIndicator &&\n               !$activityIndicator.hasClass('error')) {\n        if (options._activityIndicatorHideImmediately) {\n            $activityIndicator.hide();\n        } else {\n            $activityIndicator\n                .delay(250)\n                .fadeOut('fast');\n        }\n    }\n};\n\n\n/**\n * Make an API request.\n *\n * This will handle any button disabling/enabling, write to the correct path\n * prefix, do form uploading, and display server errors.\n *\n * Args:\n *     options (object):\n *         Options for the API request.\n *\n * Option Args:\n *     buttons (jQuery):\n *         Any buttons to disable while the API request is in flight.\n *\n *     form (jQuery):\n *         A form to submit, if any.\n *\n *     type (string):\n *         The type of HTTP request to make. Defaults to ``POST``.\n *\n *     prefix (string):\n *         The prefix for the API path (after ``SITE_ROOT``, before ``api``).\n *\n *     path (string):\n *         The relative path from the server name to the Review Board API\n *         endpoint.\n *\n *     data (object):\n *         Additional data to send with the request.\n *\n *     success (function):\n *         An optional success callback. If not specified, the default handler\n *         will reload the page.\n *\n *     error (function):\n *         An optional error callback, to be called after the error banner is\n *         displayed.\n *\n *     complete (function):\n *         An optional complete callback, which is called after the success or\n *         error callbacks.\n */\nRB.apiCall = function(options) {\n    const prefix = options.prefix || '';\n    const url = options.url || (SITE_ROOT + prefix + 'api' + options.path);\n\n    function showErrorPage(xhr, data) {\n        const $iframe = $('<iframe>').width('100%');\n        const requestData = options.data ? $.param(options.data) : '(none)';\n\n        $('<div class=\"server-error-box\">')\n            .appendTo(document.body)\n            .append('<p><b>' + gettext('Error Code:') + '</b> ' + xhr.status + '</p>')\n            .append('<p><b>' + gettext('Error Text:') + '</b> ' + xhr.statusText + '</p>')\n            .append('<p><b>' + gettext('Request URL:') + '</b> ' + url + '</p>')\n            .append('<p><b>' + gettext('Request Data:') + '</b> ' + requestData + '</p>')\n            .append('<p class=\"response-data\"><b>' + gettext('Response Data:') + '</b></p>')\n            .append(gettext('<p>There may be useful error details below. The following error page may be useful to your system administrator or when <a href=\"https://www.reviewboard.org/bugs/new/\">reporting a bug</a>. To save the page, right-click the error below and choose \"Save Page As,\" if available, or \"View Source\" and save the result as a <tt>.html</tt> file.</p>'))\n            .append(gettext('<p><b>Warning:</b> Be sure to remove any sensitive material that may exist in the error page before reporting a bug!</p>'))\n            .append($iframe)\n            .on('resize', function() {\n                $iframe.height($(this).height() - $iframe.position().top);\n            })\n            .modalBox({\n                stretchX: true,\n                stretchY: true,\n                title: gettext('Server Error Details')\n            });\n\n        const doc = $iframe[0].contentDocument || $iframe[0].contentWindow.document;\n        doc.open();\n        doc.write(data);\n        doc.close();\n    }\n\n    function doCall() {\n        const $activityIndicator = options._$activityIndicator ||\n                                   $('#activity-indicator');\n\n        if (options.buttons) {\n            options.buttons.attr('disabled', true);\n        }\n\n        RB.setActivityIndicator(true, options);\n\n        const defaultOptions = {\n            url: url,\n            data: options.data,\n            dataType: options.dataType || 'json',\n            error: function(xhr, textStatus, errorThrown) {\n                /*\n                 * This is a fallback error handler, which the caller\n                 * may override (Backbone.sync always will, for example).\n                 *\n                 * This is responsible for trying to determine if what we\n                 * got was one of:\n                 *\n                 * 1. HTTP 204 (No Content -- in response to creating new\n                 *    objects)\n                 *\n                 *    If so, this is considered a successful result.\n                 *\n                 * 2. An API error object (in which case it may not be an\n                 *    \"error\" per se -- jQuery assumes anything not a 2xx\n                 *    or 304 is an error, but other things are perfectly\n                 *    valid responses to requests in our API).\n                 *\n                 *    If it has an API error code, we pass it up to the\n                 *    success() handler for further evaluation.\n                 *\n                 *    This is primarily here for legacy reasons, prior to the\n                 *    usage of Backbone (which should *never* end up\n                 *    triggering this particular handler, if ordering of\n                 *    callback registration is correct).\n                 *\n                 * 3. An unexpected error (proper HTTP 500, for instance).\n                 *\n                 *    This will display an error banner at the top of the\n                 *    page.\n                 *\n                 * In the future, we should consolidate the error handlers\n                 * in order to benefit from central management of errors and\n                 * the \"A server error has occurred\" banner. That is going to\n                 * require some careful thought, and likely opting into a\n                 * mode that uses the correct behavior.\n                 */\n                const responseText = xhr.responseText;\n\n                let rsp = null;\n                try {\n                    rsp = JSON.parse(responseText);\n                } catch (e) {\n                }\n\n                if ((rsp && rsp.stat) || xhr.status === 204) {\n                    /*\n                     * This either looks like an API error, or it's an HTTP\n                     * 204, which won't have a body.\n                     *\n                     * XXX Historically, we've treated anything with an API\n                     *     error payload as \"success\", to avoid triggering\n                     *     some older error handling behavior.\n                     *\n                     *     We'll continue to do so, but this is something we\n                     *     need to rethink at a later date.\n                     */\n                    if (_.isFunction(options.success)) {\n                        /*\n                         * Note that this is not the same signature as a\n                         * standard success call. That would be:\n                         *\n                         *     success(rsp, textStatus, xhr);\n                         *\n                         * This is a legacy wart, and is covered under unit\n                         * tests.\n                         */\n                        options.success(rsp, xhr.status);\n                    }\n\n                    return;\n                }\n\n                $activityIndicator\n                    .addClass('error')\n                    .text(gettext('A server error occurred.'))\n                    .append(\n                        $('<a href=\"#\">')\n                            .text(gettext('Show Details'))\n                            .click(() => showErrorPage(xhr, responseText))\n                    )\n                    .append(\n                        $('<a href=\"#\">')\n                            .text(gettext('Dismiss'))\n                            .click(function() {\n                                $activityIndicator.fadeOut('fast');\n                                return false;\n                            })\n                    );\n\n                /*\n                 * We actually probably shouldn't ever get here. This is\n                 * legacy code. It's being kept Just In Case (TM), but if\n                 * we're in this function right now, then options.error wasn't\n                 * set.\n                 *\n                 * This is a candidate for dead code elimination.\n                 */\n                if (_.isFunction(options.error)) {\n                    options.error(xhr, textStatus, errorThrown);\n                }\n            },\n        };\n\n        const forcedOptions = {\n            complete: function(xhr, status) {\n                /*\n                 * This complete handler will always be called before the\n                 * caller's handler. This ensures we're able to re-enable\n                 * any buttons, turn off the loading activity, call the\n                 * caller's handler, and then begin the next operation in\n                 * the queue.\n                 */\n                if (options.buttons) {\n                    options.buttons.attr('disabled', false);\n                }\n\n                RB.setActivityIndicator(false, options);\n\n                if (_.isFunction(options.complete)) {\n                    options.complete(xhr, status);\n                }\n\n                $.funcQueue('rbapicall').next();\n            }\n        };\n\n        /*\n         * Please note: Due to complex interactions with jQuery and Backbone,\n         * the order in which we build this is very important. Some of this is\n         * documented above, but to recap:\n         *\n         * 1. Options and a default error handler that should be used unless\n         *    the caller wants to override behavior.\n         *\n         * 2. All caller-provided options that may affect this request. This\n         *    will often include \"error\" and \"success\" handlers.\n         *\n         * 3. Options we want to ensure take precedence. This includes our\n         *    \"complete\" handler, which must *always* run before the caller's.\n         */\n        const data = $.extend(true, defaultOptions, options, forcedOptions);\n\n        if (data.data === null || data.data === undefined ||\n            (data.data instanceof Object &&\n             !(window.Blob && data.data instanceof Blob))) {\n            data.data = $.extend({\n                api_format: 'json'\n            }, data.data || {});\n        }\n\n        if (options.form) {\n            options.form.ajaxSubmit(data);\n        } else {\n            $.ajax(data);\n        }\n    }\n\n    options.type = options.type || 'POST';\n\n    if (options.type !== 'GET' && options.type !== 'HEAD' &&\n        RB.UserSession.instance.get('readOnly')) {\n        console.error('%s request not sent. Site is in read-only mode.',\n                      options.type);\n        return;\n    }\n\n    // We allow disabling the function queue for the sake of unit tests.\n    if (RB.ajaxOptions.enableQueuing && options.type !== 'GET') {\n        $.funcQueue('rbapicall').add(doCall);\n        $.funcQueue('rbapicall').start();\n    } else {\n        doCall();\n    }\n};\n\n/**\n * Parse API error information from a response and stores it.\n *\n * The xhr object provided will be extended with two new attributes:\n * 'errorText' and 'errorPayload'. These represent the response's error\n * message and full error payload, respectively.\n *\n * Args:\n *     xhr (jqXHR):\n *         The XMLHttpRequest object.\n */\nRB.storeAPIError = function(xhr) {\n    try {\n        const rsp = JSON.parse(xhr.responseText);\n        xhr.errorPayload = rsp;\n        xhr.errorText = rsp.err.msg;\n    } catch (e) {\n        xhr.errorPayload = null;\n        xhr.errorText = 'HTTP ' + xhr.status + ' ' + xhr.statusText;\n    }\n};\n\n\nRB.ajaxOptions = {\n    enableQueuing: true,\n    enableIndicator: true\n};\n\n\n/*\n * Call RB.apiCall instead of $.ajax.\n *\n * We wrap instead of assign for now so that we can hook in/override\n * RB.apiCall with unit tests.\n */\nBackbone.ajax = options => RB.apiCall(options);\n\n\n/**\n * An error class to wrap the error triplet that comes from Backbone calls.\n *\n * Version Added:\n *     5.0\n */\nclass BackboneError extends Error {\n    /**\n     * Initialize the error.\n     *\n     * Args:\n     *     modelOrCollection (Backbone.Model or Backbone.Collection):\n     *         The model or collection that the call was made on.\n     *\n     *     xhr (jQuery.XHR):\n     *         The XMLHttpRequest wrapper object.\n     *\n     *     options (object):\n     *         Any options that were passed to the call.\n     */\n    constructor(modelOrCollection, xhr, options) {\n        super(xhr.errorText);\n\n        this.modelOrCollection = modelOrCollection;\n        this.xhr = xhr;\n        this.options = options;\n    }\n}\n\n\n/**\n * Adapt promises to old-style callbacks.\n *\n * This is a utility method to wrap a callable that supports returning a\n * promise to continue to support old-style success/ready/error/complete\n * callbacks.\n *\n * Version Added:\n *     5.0\n *\n * Args:\n *     options (object):\n *         Options for the operation, including callbacks.\n *\n *     context (object):\n *         Context to be used when calling callback functions.\n *\n *     callable (function):\n *         The function to call.\n */\nRB.promiseToCallbacks = function(options, context, callable) {\n    const success = (\n        _.isFunction(options.success) ? options.success\n            : _.isFunction(options.ready) ? options.ready\n                : undefined);\n    const error = (\n        _.isFunction(options.error) ? options.error : undefined);\n    const complete = (\n        _.isFunction(options.complete) ? options.complete : undefined);\n\n    callable(_.omit(options, ['success', 'ready', 'error', 'complete']))\n        .then(result => {\n            if (success) {\n                success.call(context, result);\n            }\n        })\n        .catch(err => {\n            if (error) {\n                error.call(context, err.modelOrCollection,\n                           err.xhr, err.options);\n            }\n        })\n        .finally(() => {\n            if (complete) {\n                complete.call(context);\n            }\n        });\n};\n\n\n// vim: set et:sw=4:\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,CAAC,CAACC,aAAa,CAAC,kBAAkB,EAAE,UAASC,OAAO,EAAEC,WAAW,EAAEC,KAAK,EAAE;EACtE,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;IAClB,OAAO,IAAI;EACf;EAEA,IAAIC,GAAG;EAEP,OAAO;IACHC,IAAIA,CAACC,OAAO,EAAEC,UAAU,EAAE;MACtBH,GAAG,GAAGL,OAAO,CAACK,GAAG,CAAC,CAAC;MACnBA,GAAG,CAACI,gBAAgB,CAAC,MAAM,EAAE,MAAM;QAC/B,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjBA,MAAM,CAACV,OAAO,CAACW,QAAQ,CAAC,GAAGN,GAAG,CAACO,QAAQ;QAEvCJ,UAAU,CAACH,GAAG,CAACQ,MAAM,EAAER,GAAG,CAACS,UAAU,EAAEJ,MAAM,EAClCL,GAAG,CAACU,qBAAqB,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAIf,OAAO,CAACgB,QAAQ,EAAE;QAClBX,GAAG,CAACY,IAAI,CAACjB,OAAO,CAACkB,IAAI,EAAElB,OAAO,CAACmB,GAAG,EAAEnB,OAAO,CAACoB,KAAK,EACxCpB,OAAO,CAACgB,QAAQ,EAAEhB,OAAO,CAACqB,QAAQ,CAAC;MAChD,CAAC,MAAM;QACHhB,GAAG,CAACY,IAAI,CAACjB,OAAO,CAACkB,IAAI,EAAElB,OAAO,CAACmB,GAAG,EAAEnB,OAAO,CAACoB,KAAK,CAAC;MACtD;MAEAf,GAAG,CAACiB,YAAY,GAAGtB,OAAO,CAACW,QAAQ;;MAEnC;MACA,MAAMY,SAAS,GAAGvB,OAAO,CAACuB,SAAS;MAEnC,IAAIA,SAAS,EAAE;QACX,KAAK,IAAIC,KAAK,IAAID,SAAS,EAAE;UACzB,IAAIA,SAAS,CAACE,cAAc,CAACD,KAAK,CAAC,EAAE;YACjCnB,GAAG,CAACmB,KAAK,CAAC,GAAGD,SAAS,CAACC,KAAK,CAAC;UACjC;QACJ;MACJ;MAEA,IAAI,CAACxB,OAAO,CAAC0B,WAAW,IAAI,CAACnB,OAAO,CAAC,kBAAkB,CAAC,EAAE;QACtDA,OAAO,CAAC,kBAAkB,CAAC,GAAG,gBAAgB;MAClD;;MAEA;AACZ;AACA;MACY,IAAI;QACA,KAAK,IAAIoB,GAAG,IAAIpB,OAAO,EAAE;UACrB,IAAIA,OAAO,CAACkB,cAAc,CAACE,GAAG,CAAC,EAAE;YAC7BtB,GAAG,CAACuB,gBAAgB,CAACD,GAAG,EAAEpB,OAAO,CAACoB,GAAG,CAAC,CAAC;UAC3C;QACJ;MACJ,CAAC,CAAC,OAAOE,CAAC,EAAE,CAAC;MAEbxB,GAAG,CAACC,IAAI,CAACN,OAAO,CAAC8B,UAAU,GAAG9B,OAAO,CAAC+B,IAAI,GAAG,IAAI,CAAC;IACtD,CAAC;IAEDC,KAAKA,CAAA,EAAG;MACJ,IAAI3B,GAAG,IAAIA,GAAG,CAAC4B,UAAU,KAAK,CAAC,EAAE;QAC7B5B,GAAG,CAAC2B,KAAK,CAAC,CAAC;MACf;IACJ;EACJ,CAAC;AACL,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAE,CAACC,oBAAoB,GAAG,UAASC,OAAO,EAAEpC,OAAO,EAAE;EACjD,MAAMqC,kBAAkB,GAAGrC,OAAO,CAACsC,mBAAmB,IAC3BxC,CAAC,CAAC,qBAAqB,CAAC;EAEnD,IAAIsC,OAAO,EAAE;IACT,IAAIF,EAAE,CAACK,WAAW,CAACC,eAAe,IAAI,CAACxC,OAAO,CAACyC,mBAAmB,EAAE;MAChEJ,kBAAkB,CAACK,QAAQ,CAAC,iBAAiB,CAAC,CACzCC,IAAI,CAAE3C,OAAO,CAACkB,IAAI,IAAIlB,OAAO,CAACkB,IAAI,KAAK,KAAK,GAAA0B,OAAA,iBAAAA,OAAA,aACO,CAAC;MAEzDP,kBAAkB,CACbQ,WAAW,CAAC,OAAO,CAAC,CACpBC,IAAI,CAAC,CAAC;IACf;EACJ,CAAC,MAAM,IAAIZ,EAAE,CAACK,WAAW,CAACC,eAAe,IAC9B,CAACxC,OAAO,CAACyC,mBAAmB,IAC5B,CAACJ,kBAAkB,CAACU,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC9C,IAAI/C,OAAO,CAACgD,iCAAiC,EAAE;MAC3CX,kBAAkB,CAACY,IAAI,CAAC,CAAC;IAC7B,CAAC,MAAM;MACHZ,kBAAkB,CACba,KAAK,CAAC,GAAG,CAAC,CACVC,OAAO,CAAC,MAAM,CAAC;IACxB;EACJ;AACJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,EAAE,CAACkB,OAAO,GAAG,UAASpD,OAAO,EAAE;EAC3B,MAAMqD,MAAM,GAAGrD,OAAO,CAACqD,MAAM,IAAI,EAAE;EACnC,MAAMlC,GAAG,GAAGnB,OAAO,CAACmB,GAAG,IAAKmC,SAAS,GAAGD,MAAM,GAAG,KAAK,GAAGrD,OAAO,CAACuD,IAAK;EAEtE,SAASC,aAAaA,CAACnD,GAAG,EAAE0B,IAAI,EAAE;IAC9B,MAAM0B,OAAO,GAAG3D,CAAC,CAAC,UAAU,CAAC,CAAC4D,KAAK,CAAC,MAAM,CAAC;IAC3C,MAAMC,WAAW,GAAG3D,OAAO,CAAC+B,IAAI,GAAGjC,CAAC,CAAC8D,KAAK,CAAC5D,OAAO,CAAC+B,IAAI,CAAC,GAAG,QAAQ;IAEnEjC,CAAC,CAAC,gCAAgC,CAAC,CAC9B+D,QAAQ,CAACC,QAAQ,CAACC,IAAI,CAAC,CACvBC,MAAM,CAAC,QAAQ,GAAApB,OAAA,eAAyB,GAAG,OAAO,GAAGvC,GAAG,CAACQ,MAAM,GAAG,MAAM,CAAC,CACzEmD,MAAM,CAAC,QAAQ,GAAApB,OAAA,eAAyB,GAAG,OAAO,GAAGvC,GAAG,CAACS,UAAU,GAAG,MAAM,CAAC,CAC7EkD,MAAM,CAAC,QAAQ,GAAApB,OAAA,gBAA0B,GAAG,OAAO,GAAGzB,GAAG,GAAG,MAAM,CAAC,CACnE6C,MAAM,CAAC,QAAQ,GAAApB,OAAA,iBAA2B,GAAG,OAAO,GAAGe,WAAW,GAAG,MAAM,CAAC,CAC5EK,MAAM,CAAC,8BAA8B,GAAApB,OAAA,kBAA4B,GAAG,UAAU,CAAC,CAC/EoB,MAAM,CAAApB,OAAA,gWAAkW,CAAC,CACzWoB,MAAM,CAAApB,OAAA,4HAAoI,CAAC,CAC3IoB,MAAM,CAACP,OAAO,CAAC,CACfQ,EAAE,CAAC,QAAQ,EAAE,YAAW;MACrBR,OAAO,CAACS,MAAM,CAACpE,CAAC,CAAC,IAAI,CAAC,CAACoE,MAAM,CAAC,CAAC,GAAGT,OAAO,CAACU,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC;IAC7D,CAAC,CAAC,CACDC,QAAQ,CAAC;MACNC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAA5B,OAAA;IACT,CAAC,CAAC;IAEN,MAAM6B,GAAG,GAAGhB,OAAO,CAAC,CAAC,CAAC,CAACiB,eAAe,IAAIjB,OAAO,CAAC,CAAC,CAAC,CAACkB,aAAa,CAACb,QAAQ;IAC3EW,GAAG,CAACxD,IAAI,CAAC,CAAC;IACVwD,GAAG,CAACG,KAAK,CAAC7C,IAAI,CAAC;IACf0C,GAAG,CAACI,KAAK,CAAC,CAAC;EACf;EAEA,SAASC,MAAMA,CAAA,EAAG;IACd,MAAMzC,kBAAkB,GAAGrC,OAAO,CAACsC,mBAAmB,IAC3BxC,CAAC,CAAC,qBAAqB,CAAC;IAEnD,IAAIE,OAAO,CAAC+E,OAAO,EAAE;MACjB/E,OAAO,CAAC+E,OAAO,CAACC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1C;IAEA9C,EAAE,CAACC,oBAAoB,CAAC,IAAI,EAAEnC,OAAO,CAAC;IAEtC,MAAMiF,cAAc,GAAG;MACnB9D,GAAG,EAAEA,GAAG;MACRY,IAAI,EAAE/B,OAAO,CAAC+B,IAAI;MAClBpB,QAAQ,EAAEX,OAAO,CAACW,QAAQ,IAAI,MAAM;MACpCuE,KAAK,EAAE,SAAAA,CAAS7E,GAAG,EAAE8E,UAAU,EAAEC,WAAW,EAAE;QAC1C;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB,MAAMC,YAAY,GAAGhF,GAAG,CAACgF,YAAY;QAErC,IAAIC,GAAG,GAAG,IAAI;QACd,IAAI;UACAA,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC;QAClC,CAAC,CAAC,OAAOxD,CAAC,EAAE,CACZ;QAEA,IAAKyD,GAAG,IAAIA,GAAG,CAACG,IAAI,IAAKpF,GAAG,CAACQ,MAAM,KAAK,GAAG,EAAE;UACzC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACoB,IAAI6E,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAAC4F,OAAO,CAAC,EAAE;YAC/B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;YACwB5F,OAAO,CAAC4F,OAAO,CAACN,GAAG,EAAEjF,GAAG,CAACQ,MAAM,CAAC;UACpC;UAEA;QACJ;QAEAwB,kBAAkB,CACbwD,QAAQ,CAAC,OAAO,CAAC,CACjBlD,IAAI,CAAAC,OAAA,4BAAoC,CAAC,CACzCoB,MAAM,CACHlE,CAAC,CAAC,cAAc,CAAC,CACZ6C,IAAI,CAAAC,OAAA,gBAAwB,CAAC,CAC7BkD,KAAK,CAAC,MAAMtC,aAAa,CAACnD,GAAG,EAAEgF,YAAY,CAAC,CACrD,CAAC,CACArB,MAAM,CACHlE,CAAC,CAAC,cAAc,CAAC,CACZ6C,IAAI,CAAAC,OAAA,WAAmB,CAAC,CACxBkD,KAAK,CAAC,YAAW;UACdzD,kBAAkB,CAACc,OAAO,CAAC,MAAM,CAAC;UAClC,OAAO,KAAK;QAChB,CAAC,CACT,CAAC;;QAEL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;QACgB,IAAIuC,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAACkF,KAAK,CAAC,EAAE;UAC7BlF,OAAO,CAACkF,KAAK,CAAC7E,GAAG,EAAE8E,UAAU,EAAEC,WAAW,CAAC;QAC/C;MACJ;IACJ,CAAC;IAED,MAAMW,aAAa,GAAG;MAClBC,QAAQ,EAAE,SAAAA,CAAS3F,GAAG,EAAEQ,MAAM,EAAE;QAC5B;AAChB;AACA;AACA;AACA;AACA;AACA;QACgB,IAAIb,OAAO,CAAC+E,OAAO,EAAE;UACjB/E,OAAO,CAAC+E,OAAO,CAACC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QAC3C;QAEA9C,EAAE,CAACC,oBAAoB,CAAC,KAAK,EAAEnC,OAAO,CAAC;QAEvC,IAAI0F,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAACgG,QAAQ,CAAC,EAAE;UAChChG,OAAO,CAACgG,QAAQ,CAAC3F,GAAG,EAAEQ,MAAM,CAAC;QACjC;QAEAf,CAAC,CAACmG,SAAS,CAAC,WAAW,CAAC,CAACC,IAAI,CAAC,CAAC;MACnC;IACJ,CAAC;;IAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,MAAMnE,IAAI,GAAGjC,CAAC,CAACqG,MAAM,CAAC,IAAI,EAAElB,cAAc,EAAEjF,OAAO,EAAE+F,aAAa,CAAC;IAEnE,IAAIhE,IAAI,CAACA,IAAI,KAAK,IAAI,IAAIA,IAAI,CAACA,IAAI,KAAKqE,SAAS,IAC5CrE,IAAI,CAACA,IAAI,YAAYsE,MAAM,IAC3B,EAAElG,MAAM,CAACmG,IAAI,IAAIvE,IAAI,CAACA,IAAI,YAAYuE,IAAI,CAAE,EAAE;MAC/CvE,IAAI,CAACA,IAAI,GAAGjC,CAAC,CAACqG,MAAM,CAAC;QACjBI,UAAU,EAAE;MAChB,CAAC,EAAExE,IAAI,CAACA,IAAI,IAAI,CAAC,CAAC,CAAC;IACvB;IAEA,IAAI/B,OAAO,CAACwG,IAAI,EAAE;MACdxG,OAAO,CAACwG,IAAI,CAACC,UAAU,CAAC1E,IAAI,CAAC;IACjC,CAAC,MAAM;MACHjC,CAAC,CAAC4G,IAAI,CAAC3E,IAAI,CAAC;IAChB;EACJ;EAEA/B,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,IAAI,MAAM;EAErC,IAAIlB,OAAO,CAACkB,IAAI,KAAK,KAAK,IAAIlB,OAAO,CAACkB,IAAI,KAAK,MAAM,IACjDgB,EAAE,CAACyE,WAAW,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;IACzCC,OAAO,CAAC5B,KAAK,CAAC,iDAAiD,EACjDlF,OAAO,CAACkB,IAAI,CAAC;IAC3B;EACJ;;EAEA;EACA,IAAIgB,EAAE,CAACK,WAAW,CAACwE,aAAa,IAAI/G,OAAO,CAACkB,IAAI,KAAK,KAAK,EAAE;IACxDpB,CAAC,CAACmG,SAAS,CAAC,WAAW,CAAC,CAACe,GAAG,CAAClC,MAAM,CAAC;IACpChF,CAAC,CAACmG,SAAS,CAAC,WAAW,CAAC,CAACgB,KAAK,CAAC,CAAC;EACpC,CAAC,MAAM;IACHnC,MAAM,CAAC,CAAC;EACZ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5C,EAAE,CAACgF,aAAa,GAAG,UAAS7G,GAAG,EAAE;EAC7B,IAAI;IACA,MAAMiF,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACnF,GAAG,CAACgF,YAAY,CAAC;IACxChF,GAAG,CAAC8G,YAAY,GAAG7B,GAAG;IACtBjF,GAAG,CAAC+G,SAAS,GAAG9B,GAAG,CAAC+B,GAAG,CAACC,GAAG;EAC/B,CAAC,CAAC,OAAOzF,CAAC,EAAE;IACRxB,GAAG,CAAC8G,YAAY,GAAG,IAAI;IACvB9G,GAAG,CAAC+G,SAAS,GAAG,OAAO,GAAG/G,GAAG,CAACQ,MAAM,GAAG,GAAG,GAAGR,GAAG,CAACS,UAAU;EAC/D;AACJ,CAAC;AAGDoB,EAAE,CAACK,WAAW,GAAG;EACbwE,aAAa,EAAE,IAAI;EACnBvE,eAAe,EAAE;AACrB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA+E,QAAQ,CAACb,IAAI,GAAG1G,OAAO,IAAIkC,EAAE,CAACkB,OAAO,CAACpD,OAAO,CAAC;;AAG9C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMwH,aAAa,SAASC,KAAK,CAAC;EAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,iBAAiB,EAAEtH,GAAG,EAAEL,OAAO,EAAE;IACzC,KAAK,CAACK,GAAG,CAAC+G,SAAS,CAAC;IAEpB,IAAI,CAACO,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACtH,GAAG,GAAGA,GAAG;IACd,IAAI,CAACL,OAAO,GAAGA,OAAO;EAC1B;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAkC,EAAE,CAAC0F,kBAAkB,GAAG,UAAS5H,OAAO,EAAE6H,OAAO,EAAEC,QAAQ,EAAE;EACzD,MAAMlC,OAAO,GACTF,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAAC4F,OAAO,CAAC,GAAG5F,OAAO,CAAC4F,OAAO,GACzCF,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAAC+H,KAAK,CAAC,GAAG/H,OAAO,CAAC+H,KAAK,GACvC3B,SAAU;EACxB,MAAMlB,KAAK,GACPQ,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAACkF,KAAK,CAAC,GAAGlF,OAAO,CAACkF,KAAK,GAAGkB,SAAU;EAC5D,MAAMJ,QAAQ,GACVN,CAAC,CAACC,UAAU,CAAC3F,OAAO,CAACgG,QAAQ,CAAC,GAAGhG,OAAO,CAACgG,QAAQ,GAAGI,SAAU;EAElE0B,QAAQ,CAACpC,CAAC,CAACsC,IAAI,CAAChI,OAAO,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,CAC/DiI,IAAI,CAACvH,MAAM,IAAI;IACZ,IAAIkF,OAAO,EAAE;MACTA,OAAO,CAACsC,IAAI,CAACL,OAAO,EAAEnH,MAAM,CAAC;IACjC;EACJ,CAAC,CAAC,CACDyH,KAAK,CAACd,GAAG,IAAI;IACV,IAAInC,KAAK,EAAE;MACPA,KAAK,CAACgD,IAAI,CAACL,OAAO,EAAER,GAAG,CAACM,iBAAiB,EAC9BN,GAAG,CAAChH,GAAG,EAAEgH,GAAG,CAACrH,OAAO,CAAC;IACpC;EACJ,CAAC,CAAC,CACDoI,OAAO,CAAC,MAAM;IACX,IAAIpC,QAAQ,EAAE;MACVA,QAAQ,CAACkC,IAAI,CAACL,OAAO,CAAC;IAC1B;EACJ,CAAC,CAAC;AACV,CAAC;;AAGD","ignoreList":[]}