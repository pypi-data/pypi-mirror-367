{"version":3,"file":"clientLoginView.js","names":["RB","ClientLoginView","Backbone","View","extend","contentTemplate","_","template","initialize","options","_clientName","clientName","_clientURL","decodeURIComponent","clientURL","_payload","payload","_redirectTo","redirectTo","_username","username","_redirectCounter","render","rsp","redirectCounter","$content","$","_sendDataToClient","error","html","count","header","interpolate","gettext","message","ok","_$counter","_interval","setInterval","_redirectCountdown","bind","text","clearInterval","navigateTo","fetch","method","headers","body","JSON","stringify"],"sources":["../../../../../static/rb/js/views/clientLoginView.es6.js"],"sourcesContent":["/**\n * A view for the client login page.\n *\n * This view sends authentication data to a client to authenticate\n * it to Review Board for a user.\n *\n * Version Added:\n *     5.0.5\n */\nRB.ClientLoginView = Backbone.View.extend({\n    contentTemplate: _.template(dedent`\n        <h1><%- header %></h1>\n        <p><%- message %><span id=\"redirect-counter\"><%- count %></span></p>`\n    ),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         The view options.\n     *\n     * Option Args:\n     *     clientName (string):\n     *         The name of the client.\n     *\n     *     clientURL (string):\n     *         The URL of where to send the authentication data.\n     *\n     *     payload (string):\n     *         A JSON string containing the authentication data to send to\n     *         the client.\n     *\n     *     redirectTo (string):\n     *         An optional URL of where to redirect to after successfully\n     *         sending the authentication data to the client.\n     *\n     *     username (string):\n     *         The username of the user who is authenticating the client.\n     */\n    initialize(options) {\n        this._clientName = options.clientName;\n        this._clientURL = decodeURIComponent(options.clientURL);\n        this._payload = options.payload;\n        this._redirectTo = decodeURIComponent(options.redirectTo);\n        this._username = options.username;\n        this._redirectCounter = 3;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.ClientLoginView:\n     *     This view.\n     */\n    async render() {\n        let rsp;\n        const clientName = this._clientName;\n        const username = this._username;\n        const redirectCounter = this._redirectCounter;\n        const $content = this.$('.auth-header');\n\n        try {\n            rsp = await this._sendDataToClient();\n        } catch (error) {\n            $content.html(this.contentTemplate({\n                count: '',\n                header: _`Failed to log in for ${clientName}`,\n                message: _`Could not connect to ${clientName}.\n                           Please contact your administrator.`,\n            }));\n\n            return this;\n        }\n\n        if (rsp.ok) {\n            if (this._redirectTo) {\n                $content.html(this.contentTemplate({\n                    count: ` ${redirectCounter}...`,\n                    header: _`Logged in to ${clientName}`,\n                    message: _`You have successfully logged in to\n                               ${clientName} as ${username}. Redirecting in`,\n                }));\n\n                this._$counter = $('#redirect-counter');\n                this._interval = setInterval(\n                    this._redirectCountdown.bind(this),\n                    1000);\n            } else {\n                $content.html(this.contentTemplate({\n                    count: '',\n                    header: _`Logged in to ${clientName}`,\n                    message: _`You have successfully logged in to\n                               ${clientName} as ${username}. You can now\n                               close this page.`,\n                }));\n            }\n        } else {\n            $content.html(this.contentTemplate({\n                count: '',\n                header: _`Failed to log in for ${clientName}`,\n                message: _`Failed to log in for ${clientName} as ${username}.\n                           Please contact your administrator.`,\n            }));\n        }\n\n        return this;\n    },\n\n    /**\n     * Display a countdown and then redirect to a URL.\n     */\n    _redirectCountdown() {\n        const redirectCounter = --this._redirectCounter;\n        this._$counter.text(` ${redirectCounter}...`);\n\n        if (redirectCounter <= 0) {\n            clearInterval(this._interval);\n            RB.navigateTo(this._redirectTo);\n        }\n    },\n\n    /**\n     * Send authentication data to the client.\n     *\n     * Returns:\n     *     A promise which resolves to a Response object when the request\n     *     is complete.\n     */\n    async _sendDataToClient() {\n        let rsp = await fetch(this._clientURL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=UTF-8',\n            },\n            body: JSON.stringify(this._payload),\n        });\n\n        return rsp;\n    },\n});"],"mappings":"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","ignoreList":[]}