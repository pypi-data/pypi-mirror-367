{"version":3,"file":"generalCommentModelTests.js","names":["suite","model","beforeEach","RB","GeneralComment","parentObject","BaseResource","describe","it","data","parse","stat","general_comment","id","issue_opened","issue_status","text_type","text","expect","not","toBe","undefined","issueOpened","issueStatus","BaseComment","STATE_RESOLVED","richText","spyOn","prototype","and","callThrough","toJSON","toHaveBeenCalled","validate"],"sources":["../../../../../../../static/rb/js/resources/models/tests/generalCommentModelTests.es6.js"],"sourcesContent":["suite('rb/resources/models/GeneralComment', function() {\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.GeneralComment({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                general_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,oCAAoC,EAAE,YAAW;EACnD,IAAIC,KAAK;EAETC,UAAU,CAAC,YAAW;IAClB;IACAD,KAAK,GAAG,IAAIE,EAAE,CAACC,cAAc,CAAC;MAC1BC,YAAY,EAAE,IAAIF,EAAE,CAACG,YAAY,CAAC;QAC9B,QAAQ,EAAE;MACd,CAAC;IACL,CAAC,CAAC;EACN,CAAC,CAAC;EAEFC,QAAQ,CAAC,OAAO,EAAE,YAAW;IACzBC,EAAE,CAAC,cAAc,EAAE,YAAW;MAC1B,MAAMC,IAAI,GAAGR,KAAK,CAACS,KAAK,CAAC;QACrBC,IAAI,EAAE,IAAI;QACVC,eAAe,EAAE;UACbC,EAAE,EAAE,EAAE;UACNC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,UAAU;UACxBC,SAAS,EAAE,UAAU;UACrBC,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MAEFC,MAAM,CAACT,IAAI,CAAC,CAACU,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC;MAChCH,MAAM,CAACT,IAAI,CAACI,EAAE,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;MACxBF,MAAM,CAACT,IAAI,CAACa,WAAW,CAAC,CAACF,IAAI,CAAC,IAAI,CAAC;MACnCF,MAAM,CAACT,IAAI,CAACc,WAAW,CAAC,CAACH,IAAI,CAACjB,EAAE,CAACqB,WAAW,CAACC,cAAc,CAAC;MAC5DP,MAAM,CAACT,IAAI,CAACiB,QAAQ,CAAC,CAACN,IAAI,CAAC,IAAI,CAAC;MAChCF,MAAM,CAACT,IAAI,CAACQ,IAAI,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFb,QAAQ,CAAC,QAAQ,EAAE,YAAW;IAC1BC,EAAE,CAAC,2BAA2B,EAAE,YAAW;MACvCmB,KAAK,CAACxB,EAAE,CAACqB,WAAW,CAACI,SAAS,EAAE,QAAQ,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;MAC3D7B,KAAK,CAAC8B,MAAM,CAAC,CAAC;MACdb,MAAM,CAACf,EAAE,CAACqB,WAAW,CAACI,SAAS,CAACG,MAAM,CAAC,CAACC,gBAAgB,CAAC,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC,CAAC;EAEFzB,QAAQ,CAAC,UAAU,EAAE,YAAW;IAC5BC,EAAE,CAAC,oBAAoB,EAAE,YAAW;MAChCmB,KAAK,CAACxB,EAAE,CAACqB,WAAW,CAACI,SAAS,EAAE,UAAU,CAAC;MAC3C3B,KAAK,CAACgC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClBf,MAAM,CAACf,EAAE,CAACqB,WAAW,CAACI,SAAS,CAACK,QAAQ,CAAC,CAACD,gBAAgB,CAAC,CAAC;IAChE,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}