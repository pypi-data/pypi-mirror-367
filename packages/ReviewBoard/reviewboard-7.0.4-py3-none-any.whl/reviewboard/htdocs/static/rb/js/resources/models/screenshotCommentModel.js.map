{"version":3,"file":"screenshotCommentModel.js","names":["RB","ScreenshotComment","BaseComment","extend","defaults","_","x","y","width","height","screenshotID","screenshot","thumbnailURL","prototype","rspNamespace","expandedFields","attrToJsonMap","serializedAttrs","concat","deserializedAttrs","serializers","JSONSerializers","onlyIfUnloaded","parseResourceData","rsp","result","call","Screenshot","parse","id","validate","attrs","has","strings","INVALID_SCREENSHOT_ID","INVALID_X","INVALID_Y","INVALID_WIDTH","INVALID_HEIGHT","apply","arguments"],"sources":["../../../../../../static/rb/js/resources/models/screenshotCommentModel.es6.js"],"sourcesContent":["/**\n * A comment on a screenshot.\n *\n * Model Attributes:\n *     x (number):\n *         The X coordinate of the pixel at the top-left of the comment region.\n *\n *     y (number):\n *         The Y coordinate of the pixel at the top-left of the comment region.\n *\n *     width (number):\n *         The width of the comment region, in pixels.\n *\n *     height (number):\n *         The height of the comment region, in pixels.\n *\n *     screenshotID (number):\n *         The ID of the screenshot that this comment is on.\n *\n *     screenshot (RB.Screenshot):\n *         The screenshot that this comment is on.\n *\n *     thumbnailURL (string):\n *         The URL to an image file showing the region of the comment.\n */\nRB.ScreenshotComment = RB.BaseComment.extend({\n    defaults: _.defaults({\n        x: null,\n        y: null,\n        width: null,\n        height: null,\n        screenshotID: null,\n        screenshot: null,\n        thumbnailURL: null\n    }, RB.BaseComment.prototype.defaults()),\n\n    rspNamespace: 'screenshot_comment',\n    expandedFields: ['screenshot'],\n\n    attrToJsonMap: _.defaults({\n        width: 'w',\n        height: 'h',\n        thumbnailURL: 'thumbnail_url',\n        screenshotID: 'screenshot_id'\n    }, RB.BaseComment.prototype.attrToJsonMap),\n\n    serializedAttrs: [\n        'x',\n        'y',\n        'width',\n        'height',\n        'screenshotID'\n    ].concat(RB.BaseComment.prototype.serializedAttrs),\n\n    deserializedAttrs: [\n        'x',\n        'y',\n        'width',\n        'height',\n        'thumbnailURL'\n    ].concat(RB.BaseComment.prototype.deserializedAttrs),\n\n    serializers: _.defaults({\n        screenshotID: RB.JSONSerializers.onlyIfUnloaded\n    }, RB.BaseComment.prototype.serializers),\n\n    /**\n     * Deserialize comment data from an API payload.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attribute values to set on the model.\n     */\n    parseResourceData(rsp) {\n        const result = RB.BaseComment.prototype.parseResourceData.call(\n            this, rsp);\n\n        result.screenshot = new RB.Screenshot(rsp.screenshot, {\n            parse: true\n        });\n        result.screenshotID = result.screenshot.id;\n\n        return result;\n    },\n\n    /*\n     * Validate the attributes of the model.\n     *\n     * This will check the screenshot ID and the region of the comment,\n     * along with the default comment validation.\n     *\n     * Args:\n     *     attrs (object):\n     *         The model attributes to validate.\n     *\n     * Returns:\n     *     string:\n     *     An error string, if appropriate.\n     */\n    validate(attrs) {\n        if (_.has(attrs, 'screenshotID') && !attrs.screenshotID) {\n            return RB.ScreenshotComment.strings.INVALID_SCREENSHOT_ID;\n        }\n\n        if (_.has(attrs, 'x') && attrs.x < 0) {\n            return RB.ScreenshotComment.strings.INVALID_X;\n        }\n\n        if (_.has(attrs, 'y') && attrs.y < 0) {\n            return RB.ScreenshotComment.strings.INVALID_Y;\n        }\n\n        if (_.has(attrs, 'width') && attrs.width <= 0) {\n            return RB.ScreenshotComment.strings.INVALID_WIDTH;\n        }\n\n        if (_.has(attrs, 'height') && attrs.height <= 0) {\n            return RB.ScreenshotComment.strings.INVALID_HEIGHT;\n        }\n\n        return RB.BaseComment.prototype.validate.apply(this, arguments);\n    }\n}, {\n    strings: {\n        INVALID_SCREENSHOT_ID: 'screenshotID must be a valid ID',\n        INVALID_X: 'x must be >= 0',\n        INVALID_Y: 'y must be >= 0',\n        INVALID_WIDTH: 'width must be > 0',\n        INVALID_HEIGHT: 'height must be > 0'\n    }\n});\n"],"mappings":"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","ignoreList":[]}