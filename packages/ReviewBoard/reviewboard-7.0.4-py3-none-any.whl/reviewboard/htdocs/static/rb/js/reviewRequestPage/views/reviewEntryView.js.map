{"version":3,"file":"reviewEntryView.js","names":["ParentView","RB","ReviewRequestPage","EntryView","ReviewEntryView","extend","events","_","defaults","prototype","initialize","options","call","reviewRequestEditorView","_reviewView","_draftBannerShown","_$boxStatus","_$fixItLabel","_$shipItLabel","beforeApplyUpdate","diffFragmentQueue","PageManager","getPage","diffCommentsData","model","get","i","length","saveFragment","render","ReviewView","el","entryModel","$bannerFloatContainer","_$box","$bannerParent","$","bannerNoFloatContainerClass","find","listenTo","hasDraft","$el","toggleClass","_updateLabels","getReviewReplyEditorView","contextType","contextID","_updateLabel","hasOpenIssues","$label","visible","boxClassName","addClass","show","css","opacity","left","removeClass","_revokeShipIt","confirmation","strings","revokeShipItConfirm","confirm","_clearRevokingShipIt","review","ready","set","save","attrs","err","alert","xhr","responseJSON","msg","setTimeout","gettext"],"sources":["../../../../../../static/rb/js/reviewRequestPage/views/reviewEntryView.es6.js"],"sourcesContent":["(function() {\n\n\nconst ParentView = RB.ReviewRequestPage.EntryView;\n\n\n/**\n * Displays a review with discussion on the review request page.\n *\n * Review boxes contain discussion on parts of a review request. This includes\n * comments, screenshots, and file attachments.\n */\nRB.ReviewRequestPage.ReviewEntryView = ParentView.extend({\n    events: _.defaults({\n        'click .revoke-ship-it': '_revokeShipIt',\n    }, ParentView.prototype.events),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditorView (RB.ReviewRequestEditorView):\n     *         The review request editor view.\n     */\n    initialize(options) {\n        ParentView.prototype.initialize.call(this, options);\n\n        this.reviewRequestEditorView = options.reviewRequestEditorView;\n        this._reviewView = null;\n        this._draftBannerShown = false;\n        this._$boxStatus = null;\n        this._$fixItLabel = null;\n        this._$shipItLabel = null;\n    },\n\n    /**\n     * Save state before applying an update from the server.\n     *\n     * This will save all the loaded diff fragments on the entry so that\n     * they'll be loaded from cache when processing the fragments again for\n     * the entry after reload.\n     */\n    beforeApplyUpdate() {\n        const diffFragmentQueue = RB.PageManager.getPage().diffFragmentQueue;\n        const diffCommentsData = this.model.get('diffCommentsData');\n\n        for (let i = 0; i < diffCommentsData.length; i++) {\n            diffFragmentQueue.saveFragment(diffCommentsData[i][0]);\n        }\n    },\n\n    /**\n     * Render the review box.\n     *\n     * This will prepare a reply draft banner, used if the user is replying\n     * to any comments on the review.\n     *\n     * Each comment section will be set up to allow discussion.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewEntryView:\n     *     This object, for chaining.\n     */\n    render() {\n        ParentView.prototype.render.call(this);\n\n        this._reviewView = new RB.ReviewRequestPage.ReviewView({\n            el: this.el,\n            model: this.model.get('review'),\n            entryModel: this.model,\n            $bannerFloatContainer: this._$box,\n            $bannerParent: this.$('.banners'),\n            bannerNoFloatContainerClass: 'collapsed',\n            reviewRequestEditorView: this.reviewRequestEditorView,\n        });\n\n        this._$boxStatus = this.$('.box-status');\n        this._$fixItLabel = this._$boxStatus.find('.fix-it-label');\n        this._$shipItLabel = this._$boxStatus.find('.ship-it-label');\n\n        this.listenTo(this._reviewView, 'hasDraftChanged',\n                      hasDraft => this.$el.toggleClass('has-draft', hasDraft));\n        this.listenTo(this._reviewView, 'openIssuesChanged',\n                      this._updateLabels);\n\n        this._reviewView.render();\n        this._updateLabels();\n\n        return this;\n    },\n\n    /**\n     * Return the ReviewReplyEditorView with the given context type and ID.\n     *\n     * Args:\n     *     contextType (string):\n     *         The type of object being replied to (such as ``body_top`` or\n     *         ``diff_comments``)\n     *\n     *     contextID (number, optional):\n     *         The ID of the comment being replied to, if appropriate.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyEditorView:\n     *     The matching editor view.\n     */\n    getReviewReplyEditorView(contextType, contextID) {\n        return this._reviewView.getReviewReplyEditorView(contextType,\n                                                         contextID);\n    },\n\n    /**\n     * Update the \"Ship It\" and \"Fix It\" labels based on the open issue counts.\n     *\n     * If there are open issues, there will be a \"Fix it!\" label.\n     *\n     * If there's a Ship It, there will be a \"Ship it!\" label.\n     *\n     * If there's both a Ship It and open issues, the \"Fix it!\" label will\n     * be shown overlaid on top of the \"Ship it!\" label, and will go away\n     * once the issues are resolved.\n     */\n    _updateLabels() {\n        this._updateLabel(this._$fixItLabel,\n                          this._reviewView.hasOpenIssues(),\n                          'has-issues');\n        this._updateLabel(this._$shipItLabel,\n                          this.model.get('review').get('shipIt'),\n                          'ship-it');\n    },\n\n    /**\n     * Update the visibility of a label.\n     *\n     * The label's position and opacity will be set based on whether the\n     * label is intended to be visible. The label status box's CSS classes will\n     * also be updated based on the visibility and the provided CSS class name.\n     *\n     * Combined with CSS rules, the label will transition the opacity and\n     * the position.\n     *\n     * Args:\n     *     $label (jQuery):\n     *         The label element.\n     *\n     *     visible (boolean):\n     *         Whether the label should be shown as visible.\n     *\n     *     boxClassName (string):\n     *         The CSS class to add to or remove from the status box.\n     */\n    _updateLabel($label, visible, boxClassName) {\n        if (visible) {\n            this._$boxStatus.addClass(boxClassName);\n            $label\n                .show()\n                .css({\n                    opacity: 1,\n                    left: 0,\n                });\n        } else {\n            $label.css({\n                opacity: 0,\n                left: '-100px',\n            });\n            this._$boxStatus.removeClass(boxClassName);\n        }\n    },\n\n    /**\n     * Revoke the Ship It on the review.\n     *\n     * This will first confirm that the user does want to revoke the Ship It.\n     * If they confirm, the Ship It will be removed via an API call.\n     */\n    async _revokeShipIt() {\n        this._$boxStatus.addClass('revoking-ship-it');\n\n        const confirmation =\n            RB.ReviewRequestPage.ReviewEntryView.strings.revokeShipItConfirm;\n\n        if (!confirm(confirmation)) {\n            this._clearRevokingShipIt();\n            return;\n        }\n\n        const review = this.model.get('review');\n\n        await review.ready();\n        review.set('shipIt', false);\n\n        try {\n            await review.save({ attrs: ['shipIt', 'includeTextTypes'] });\n        } catch (err) {\n            review.set('shipIt', true);\n            this._clearRevokingShipIt();\n\n            alert(err.xhr.responseJSON.err.msg);\n            return;\n        }\n\n        this._updateLabels();\n\n        /*\n         * Add a delay before removing this, so that the animation won't be\n         * impacted. This will encompass the length of the animation.\n         */\n        setTimeout(() => this._clearRevokingShipIt(), 900);\n    },\n\n    /**\n     * Clear the Revoke Ship It state.\n     *\n     * This will clear the CSS classes related to the revocation.\n     */\n    _clearRevokingShipIt() {\n        this._$boxStatus.removeClass('revoking-ship-it');\n    },\n}, {\n    strings: {\n        revokeShipItConfirm: gettext('Are you sure you want to revoke this Ship It?\\n\\nThis cannot be undone.'),\n    },\n});\n\n\n})();\n"],"mappings":"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","ignoreList":[]}