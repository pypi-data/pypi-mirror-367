{"version":3,"file":"repositoryCollection.js","names":["RB","RepositoryCollection","BaseCollection","extend","model","Repository","initialize","models","options","collection","ResourceCollection","repositories","extraQueryData","_fetchURL","SITE_ROOT","localSitePrefix","_fileAttachmentRepo","name","gettext","scmtoolName","supportsPostCommit","filesOnly","listenTo","add","remove","_rebuild","reset","concat","search","query","q","fetch","success"],"sources":["../../../../../../static/rb/js/newReviewRequest/collections/repositoryCollection.es6.js"],"sourcesContent":["/**\n * A collection for displaying repositories in the \"New Review Request\" page.\n *\n * Version Added:\n *     4.0.7\n */\nRB.RepositoryCollection = RB.BaseCollection.extend({\n    model: RB.Repository,\n\n    /**\n     * Initialize the collection.\n     *\n     * Args:\n     *     models (Array of object):\n     *         Initial models for the collection.\n     *\n     *     options (object):\n     *         Options for the collection.\n     */\n    initialize(models, options) {\n        this.collection = new RB.ResourceCollection(options.repositories, {\n            extraQueryData: {},\n            model: this.model,\n        });\n        this.collection._fetchURL = SITE_ROOT + options.localSitePrefix +\n                                    'api/repositories/';\n\n        this._fileAttachmentRepo = new RB.Repository({\n            name: gettext('(None - File attachments only)'),\n            scmtoolName: '',\n            localSitePrefix: options.localSitePrefix,\n            supportsPostCommit: false,\n            filesOnly: true,\n        });\n\n        this.listenTo(this.collection, 'add', this.add);\n        this.listenTo(this.collection, 'remove', this.remove);\n        this.listenTo(this.collection, 'reset', this._rebuild);\n\n        this._rebuild();\n    },\n\n    /**\n     * Rebuild the list of models.\n     */\n    _rebuild() {\n        this.reset([this._fileAttachmentRepo].concat(this.collection.models));\n    },\n\n    /**\n     * Perform a search.\n     *\n     * Args:\n     *     query (string):\n     *         The query to search for in repository names and paths.\n     */\n    search(query) {\n        this.collection.extraQueryData.q = query;\n        this.collection.fetch({\n            success: () => this._rebuild(),\n        });\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,oBAAoB,GAAGD,EAAE,CAACE,cAAc,CAACC,MAAM,CAAC;EAC/CC,KAAK,EAAEJ,EAAE,CAACK,UAAU;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAACC,MAAM,EAAEC,OAAO,EAAE;IACxB,IAAI,CAACC,UAAU,GAAG,IAAIT,EAAE,CAACU,kBAAkB,CAACF,OAAO,CAACG,YAAY,EAAE;MAC9DC,cAAc,EAAE,CAAC,CAAC;MAClBR,KAAK,EAAE,IAAI,CAACA;IAChB,CAAC,CAAC;IACF,IAAI,CAACK,UAAU,CAACI,SAAS,GAAGC,SAAS,GAAGN,OAAO,CAACO,eAAe,GACnC,mBAAmB;IAE/C,IAAI,CAACC,mBAAmB,GAAG,IAAIhB,EAAE,CAACK,UAAU,CAAC;MACzCY,IAAI,EAAAC,OAAA,kCAA2C;MAC/CC,WAAW,EAAE,EAAE;MACfJ,eAAe,EAAEP,OAAO,CAACO,eAAe;MACxCK,kBAAkB,EAAE,KAAK;MACzBC,SAAS,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACb,UAAU,EAAE,KAAK,EAAE,IAAI,CAACc,GAAG,CAAC;IAC/C,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACb,UAAU,EAAE,QAAQ,EAAE,IAAI,CAACe,MAAM,CAAC;IACrD,IAAI,CAACF,QAAQ,CAAC,IAAI,CAACb,UAAU,EAAE,OAAO,EAAE,IAAI,CAACgB,QAAQ,CAAC;IAEtD,IAAI,CAACA,QAAQ,CAAC,CAAC;EACnB,CAAC;EAED;AACJ;AACA;EACIA,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,KAAK,CAAC,CAAC,IAAI,CAACV,mBAAmB,CAAC,CAACW,MAAM,CAAC,IAAI,CAAClB,UAAU,CAACF,MAAM,CAAC,CAAC;EACzE,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIqB,MAAMA,CAACC,KAAK,EAAE;IACV,IAAI,CAACpB,UAAU,CAACG,cAAc,CAACkB,CAAC,GAAGD,KAAK;IACxC,IAAI,CAACpB,UAAU,CAACsB,KAAK,CAAC;MAClBC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACP,QAAQ,CAAC;IACjC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC","ignoreList":[]}