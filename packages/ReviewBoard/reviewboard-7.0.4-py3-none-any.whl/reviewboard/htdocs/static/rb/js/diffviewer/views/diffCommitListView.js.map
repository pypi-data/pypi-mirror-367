{"version":3,"file":"diffCommitListView.js","names":["itemTemplate","_","template","headerTemplate","tableTemplate","RB","DiffCommitListView","Backbone","View","extend","events","initialize","options","listenTo","model","get","render","_showInterCommitDiffControls","showInterCommitDiffControls","_$baseSelectors","$","_$tipSelectors","commits","isInterdiff","commonContext","baseSelectorLabel","gettext","showHistorySymbol","tipSelectorLabel","$content","$table","find","append","authorText","firstText","idText","lastText","summaryText","$tbody","each","historyDiffEntry","entryType","key","rowClass","opLabel","CommitHistoryDiffEntry","ADDED","REMOVED","UNMODIFIED","MODIFIED","console","error","commit","_buildItemCommitContext","baseCommitID","tipCommitID","lastIndex","size","baseIndex","indexOf","getChild","tipIndex","i","baseSelected","tipSelected","baseDisabled","tipDisabled","$el","empty","commitAuthor","commitID","commitSummary","commitBody","_onBaseChanged","e","$target","target","parseInt","val","index","set","getParent","id","slice","prop","_onTipChanged"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffCommitListView.es6.js"],"sourcesContent":["/*\n * The templates should be kept in sync with:\n *\n * - templates/reviews/changedesc_commit_list.html\n * - templates/reviews/commit_list_field.html\n *\n * so that they render items identically.\n */\n(function() {\n\n\nconst itemTemplate = _.template(dedent`\n    <tr class=\"rb-c-commit-list__commit <%- rowClass || '' %>\">\n     <% if (showHistorySymbol) { %>\n      <td class=\"rb-c-commit-list__op\" aria-label=\"<%- opLabel %>\"></td>\n     <% } else if (showInterCommitDiffControls) { %>\n      <td class=\"rb-c-commit-list__select-base\">\n       <input type=\"radio\"\n              class=\"base-commit-selector\"\n              name=\"base-commit-id\"\n              aria-label=\"<%- baseSelectorLabel %>\"\n              <% if (baseSelected) { %>checked<% } %>\n              <% if (baseDisabled) { %>disabled<% } %>\n              value=\"<%- commit.id %>\">\n      </td>\n      <td class=\"rb-c-commit-list__select-tip\">\n       <input type=\"radio\"\n              class=\"tip-commit-selector\"\n              name=\"tip-commit-id\"\n              aria-label=\"<%- tipSelectorLabel %>\"\n              <% if (tipSelected) { %>checked<% } %>\n              <% if (tipDisabled) { %>disabled<% } %>\n              value=\"<%- commit.id %>\">\n      </td>\n     <% } %>\n     <% if (commit) { %>\n      <td class=\"rb-c-commit-list__message\">\n       <% if (commitBody) { %>\n        <details>\n         <summary class=\"rb-c-commit-list__message-summary\"><%-\n          commitSummary\n         %></summary>\n         <div class=\"rb-c-commit-list__message-body\"><%- commitBody %></div>\n        </details>\n       <% } else { %>\n        <div class=\"rb-c-commit-list__message-summary\"><%-\n         commitSummary\n        %></div>\n       <% } %>\n      </td>\n      <td class=\"rb-c-commit-list__id\"\n          title=\"<%- commitID %>\"><%- commitID %></td>\n      <td class=\"rb-c-commit-list__author\"><%- commitAuthor %></td>\n     <% } else { %>\n      <td class=\"rb-c-commit-list__message\"></td>\n      <td class=\"rb-c-commit-list__id\"></td>\n      <td class=\"rb-c-commit-list__author\"></td>\n     <% } %>\n    </tr>\n`);\n\nconst headerTemplate = _.template(dedent`\n    <thead>\n     <tr>\n      <% if (showHistorySymbol) { %>\n       <th class=\"rb-c-commit-list__column-op\"></th>\n      <% } else if (showInterCommitDiffControls) { %>\n       <th class=\"rb-c-commit-list__column-select-tip\"><%- firstText %></th>\n       <th class=\"rb-c-commit-list__column-select-base\"><%- lastText %></th>\n      <% } %>\n      <th class=\"rb-c-commit-list__column-summary\"><%- summaryText %></th>\n      <th class=\"rb-c-commit-list__column-id\"><%- idText %></th>\n      <th class=\"rb-c-commit-list__column-author\"><%- authorText %></th>\n     </tr>\n    </thead>\n`);\n\nconst tableTemplate = _.template(dedent`\n    <form class=\"rb-c-review-request-field-tabular rb-c-commit-list\">\n     <table class=\"rb-c-review-request-field-tabular__data\"></table>\n    </form>\n`);\n\n/**\n * A view for displaying a list of commits and their metadata.\n */\nRB.DiffCommitListView = Backbone.View.extend({\n    events: {\n        'change .base-commit-selector': '_onBaseChanged',\n        'change .tip-commit-selector': '_onTipChanged',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options that control how this view behaves.\n     *\n     * Option Args:\n     *     showInterCommitDiffControls (boolean):\n     *         Whether or not to show interdiff controls.\n     */\n    initialize(options) {\n        this.listenTo(this.model.get('commits'), 'reset', this.render);\n\n        this._showInterCommitDiffControls =\n            !!options.showInterCommitDiffControls;\n\n        this._$baseSelectors = $();\n        this._$tipSelectors = $();\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DiffCommitListView:\n     *     This view, for chaining.\n     */\n    render() {\n        const commits = this.model.get('commits');\n        const isInterdiff = this.model.isInterdiff();\n\n        const commonContext = {\n            baseSelectorLabel: _`Set first commit`,\n            showHistorySymbol: isInterdiff,\n            showInterCommitDiffControls: this._showInterCommitDiffControls,\n            tipSelectorLabel: _`Set last commit`,\n        };\n\n        const $content = $(tableTemplate(commonContext))\n        const $table = $content\n            .find('.rb-c-review-request-field-tabular__data')\n            .append(headerTemplate(_.extend(\n                {\n                    authorText: _`Author`,\n                    firstText: _`First`,\n                    idText: _`ID`,\n                    lastText: _`Last`,\n                    summaryText: _`Summary`,\n                },\n                commonContext\n            )));\n\n        const $tbody = $('<tbody>');\n\n        if (isInterdiff) {\n            this.model.get('historyDiff').each(historyDiffEntry => {\n                const entryType = historyDiffEntry.get('entryType');\n\n                let key;\n                let rowClass;\n                let opLabel;\n\n                switch (entryType) {\n                    case RB.CommitHistoryDiffEntry.ADDED:\n                        rowClass = '-is-added';\n                        key = 'newCommitID';\n                        opLabel = _`Added commit`;\n                        break;\n\n                    case RB.CommitHistoryDiffEntry.REMOVED:\n                        rowClass = '-is-removed';\n                        key = 'oldCommitID';\n                        opLabel = _`Removed commit`;\n                        break;\n\n                    case RB.CommitHistoryDiffEntry.UNMODIFIED:\n                        key = 'newCommitID';\n                        opLabel = _`Added commit`;\n                        break;\n\n                    case RB.CommitHistoryDiffEntry.MODIFIED:\n                        rowClass = '-is-modified';\n                        key = 'newCommitID';\n                        opLabel = _`Unmodified commit`;\n                        break;\n\n                    default:\n                        console.error('Invalid history entry type: %s',\n                                      entryType);\n                        break;\n                }\n\n                const commit = commits.get(historyDiffEntry.get(key));\n\n                $tbody.append(itemTemplate(_.extend(\n                    {\n                        historyDiffEntry: historyDiffEntry,\n                        opLabel: opLabel,\n                        rowClass: rowClass,\n                    },\n                    this._buildItemCommitContext(commit),\n                    commonContext\n                )));\n            });\n        } else {\n            commonContext.rowClass = '';\n\n            const baseCommitID = this.model.get('baseCommitID');\n            const tipCommitID = this.model.get('tipCommitID');\n            const lastIndex = commits.size() - 1;\n\n            const baseIndex = (\n                baseCommitID === null\n                ? 0\n                : commits.indexOf(commits.getChild(commits.get(baseCommitID)))\n            );\n\n            const tipIndex = (tipCommitID === null\n                              ? lastIndex\n                              : commits.indexOf(commits.get(tipCommitID)));\n\n            commits.each((commit, i) => {\n                $tbody.append(itemTemplate(_.extend(\n                    {\n                        baseSelected: i === baseIndex,\n                        tipSelected: i === tipIndex,\n                        baseDisabled: i > tipIndex,\n                        tipDisabled: i < baseIndex,\n                    },\n                    this._buildItemCommitContext(commit),\n                    commonContext\n                )));\n            });\n        }\n\n        $table.append($tbody);\n\n        this.$el\n            .empty()\n            .append($content);\n\n        this._$baseSelectors = this.$('.base-commit-selector');\n        this._$tipSelectors = this.$('.tip-commit-selector');\n\n        return this;\n    },\n\n    /**\n     * Return template render context for a commit item.\n     *\n     * Args:\n     *     commit (RB.DiffCommit):\n     *         The commit for which to return context.\n     *\n     * Returns:\n     *     object:\n     *     The template render context for the item.\n     */\n    _buildItemCommitContext(commit) {\n        let commitAuthor = null;\n        let commitID = null;\n        let commitSummary = null;\n        let commitBody = null;\n\n        if (commit) {\n            commitAuthor = commit.get('authorName');\n            commitID = commit.get('commitID');\n            commitSummary = commit.get('summary');\n            commitBody = commit.get('commitMessageBody');\n        }\n\n        return {\n            commit: commit,\n            commitAuthor: commitAuthor,\n            commitBody: commitBody,\n            commitID: commitID,\n            commitSummary: commitSummary,\n        };\n    },\n\n    /**\n     * Handle the base commit selection changing.\n     *\n     * The view's model will be updated to reflect this change.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The change event.\n     */\n    _onBaseChanged(e) {\n        const $target = $(e.target);\n        const commits = this.model.get('commits');\n        const commit = commits.get(parseInt($target.val(), 10));\n        const index = commits.indexOf(commit);\n\n        this.model.set('baseCommitID',\n                       index === 0\n                       ? null\n                       : commits.getParent(commit).id);\n\n        this._$tipSelectors\n            .slice(0, index)\n            .prop('disabled', true);\n\n        this._$tipSelectors\n            .slice(index)\n            .prop('disabled', false);\n    },\n\n    /**\n     * Handle the tip commit selection changing.\n     *\n     * The view's model will be updated to reflect this change.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The change event.\n     */\n    _onTipChanged(e) {\n        const $target = $(e.target);\n        const commits = this.model.get('commits');\n        const commit = commits.get(parseInt($target.val(), 10));\n        const index = commits.indexOf(commit);\n\n        this.model.set('tipCommitID',\n                       index === commits.size() - 1\n                       ? null\n                       : commit.id);\n\n        this._$baseSelectors\n            .slice(0, index + 1)\n            .prop('disabled', false);\n\n        this._$baseSelectors\n            .slice(index + 1)\n            .prop('disabled', true);\n    },\n});\n\n\n})();\n"],"mappings":"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","ignoreList":[]}