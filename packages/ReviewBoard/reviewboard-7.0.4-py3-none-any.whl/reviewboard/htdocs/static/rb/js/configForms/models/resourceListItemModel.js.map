{"version":3,"file":"resourceListItemModel.js","names":["RB","Config","ResourceListItem","Djblets","ListItem","extend","defaults","_","resource","prototype","syncAttrs","initialize","get","set","pick","attributes","createResource","id","apply","arguments","listenTo","args","trigger","destroy","forEach","attr","model","value","console","assert","options","stopListening","collection","isFunction","success"],"sources":["../../../../../../static/rb/js/configForms/models/resourceListItemModel.es6.js"],"sourcesContent":["/**\n * A list item representing a resource in the API.\n *\n * This item will be backed by a resource model, which will be used for\n * all synchronization with the API. It will work as a proxy for requests\n * and events, and synchronize attributes between the resource and the list\n * item. This allows callers to work directly with the list item instead of\n * digging down into the resource.\n */\nRB.Config.ResourceListItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        resource: null\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /** A list of attributes synced between the ListItem and the Resource. */\n    syncAttrs: [],\n\n    /**\n     * Initialize the list item.\n     *\n     * This will begin listening for events on the resource, updating\n     * the state of the icon based on changes.\n     */\n    initialize() {\n        let resource = this.get('resource');\n\n        if (resource) {\n            this.set(_.pick(resource.attributes, this.syncAttrs));\n        } else {\n            /*\n             * Create a resource using the attributes provided to this list\n             * item.\n             */\n            resource = this.createResource(_.extend(\n                { id: this.get('id') },\n                _.pick(this.attributes, this.syncAttrs)));\n\n            this.set('resource', resource);\n        }\n\n        this.resource = resource;\n\n        Djblets.Config.ListItem.prototype.initialize.apply(this, arguments);\n\n        /* Forward on a couple events we want the caller to see. */\n        this.listenTo(resource, 'request',\n                      (...args) => this.trigger('request', ...args));\n        this.listenTo(resource, 'sync',\n                      (...args) => this.trigger('sync', ...args));\n\n        /* Destroy this item when the resource is destroyed. */\n        this.listenTo(resource, 'destroy', this.destroy);\n\n        /*\n         * Listen for each synced attribute change so we can update this\n         * list item.\n         */\n        this.syncAttrs.forEach(\n            attr => this.listenTo(resource, `change:${attr}`,\n                                  (model, value) => this.set(attr, value)));\n    },\n\n    /**\n     * Create the Resource for this list item, with the given attributes.\n     */\n    createResource(/* attrs */) {\n        console.assert(false, 'createResource must be implemented');\n    },\n\n    /**\n     * Destroy the list item.\n     *\n     * This will just emit the 'destroy' signal. It is typically called when\n     * the resource itself is destroyed.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the destroy operation.\n     *\n     * Option Args:\n     *     success (function):\n     *         Optional success callback.\n     */\n    destroy(options={}) {\n        this.stopListening(this.resource);\n        this.trigger('destroy', this, this.collection, options);\n\n        if (_.isFunction(options.success)) {\n            options.success(this, null, options);\n        }\n    }\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,MAAM,CAACC,gBAAgB,GAAGC,OAAO,CAACF,MAAM,CAACG,QAAQ,CAACC,MAAM,CAAC;EACxDC,QAAQ,EAAEC,CAAC,CAACD,QAAQ,CAAC;IACjBE,QAAQ,EAAE;EACd,CAAC,EAAEL,OAAO,CAACF,MAAM,CAACG,QAAQ,CAACK,SAAS,CAACH,QAAQ,CAAC;EAE9C;EACAI,SAAS,EAAE,EAAE;EAEb;AACJ;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAAA,EAAG;IACT,IAAIH,QAAQ,GAAG,IAAI,CAACI,GAAG,CAAC,UAAU,CAAC;IAEnC,IAAIJ,QAAQ,EAAE;MACV,IAAI,CAACK,GAAG,CAACN,CAAC,CAACO,IAAI,CAACN,QAAQ,CAACO,UAAU,EAAE,IAAI,CAACL,SAAS,CAAC,CAAC;IACzD,CAAC,MAAM;MACH;AACZ;AACA;AACA;MACYF,QAAQ,GAAG,IAAI,CAACQ,cAAc,CAACT,CAAC,CAACF,MAAM,CACnC;QAAEY,EAAE,EAAE,IAAI,CAACL,GAAG,CAAC,IAAI;MAAE,CAAC,EACtBL,CAAC,CAACO,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI,CAACL,SAAS,CAAC,CAAC,CAAC;MAE7C,IAAI,CAACG,GAAG,CAAC,UAAU,EAAEL,QAAQ,CAAC;IAClC;IAEA,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAExBL,OAAO,CAACF,MAAM,CAACG,QAAQ,CAACK,SAAS,CAACE,UAAU,CAACO,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;;IAEnE;IACA,IAAI,CAACC,QAAQ,CAACZ,QAAQ,EAAE,SAAS,EACnB,CAAC,GAAGa,IAAI,KAAK,IAAI,CAACC,OAAO,CAAC,SAAS,EAAE,GAAGD,IAAI,CAAC,CAAC;IAC5D,IAAI,CAACD,QAAQ,CAACZ,QAAQ,EAAE,MAAM,EAChB,CAAC,GAAGa,IAAI,KAAK,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,GAAGD,IAAI,CAAC,CAAC;;IAEzD;IACA,IAAI,CAACD,QAAQ,CAACZ,QAAQ,EAAE,SAAS,EAAE,IAAI,CAACe,OAAO,CAAC;;IAEhD;AACR;AACA;AACA;IACQ,IAAI,CAACb,SAAS,CAACc,OAAO,CAClBC,IAAI,IAAI,IAAI,CAACL,QAAQ,CAACZ,QAAQ,EAAE,UAAUiB,IAAI,EAAE,EAC1B,CAACC,KAAK,EAAEC,KAAK,KAAK,IAAI,CAACd,GAAG,CAACY,IAAI,EAAEE,KAAK,CAAC,CAAC,CAAC;EACvE,CAAC;EAED;AACJ;AACA;EACIX,cAAcA,CAAC;EAAA,EAAa;IACxBY,OAAO,CAACC,MAAM,CAAC,KAAK,EAAE,oCAAoC,CAAC;EAC/D,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIN,OAAOA,CAACO,OAAO,GAAC,CAAC,CAAC,EAAE;IAChB,IAAI,CAACC,aAAa,CAAC,IAAI,CAACvB,QAAQ,CAAC;IACjC,IAAI,CAACc,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAACU,UAAU,EAAEF,OAAO,CAAC;IAEvD,IAAIvB,CAAC,CAAC0B,UAAU,CAACH,OAAO,CAACI,OAAO,CAAC,EAAE;MAC/BJ,OAAO,CAACI,OAAO,CAAC,IAAI,EAAE,IAAI,EAAEJ,OAAO,CAAC;IACxC;EACJ;AACJ,CAAC,CAAC","ignoreList":[]}