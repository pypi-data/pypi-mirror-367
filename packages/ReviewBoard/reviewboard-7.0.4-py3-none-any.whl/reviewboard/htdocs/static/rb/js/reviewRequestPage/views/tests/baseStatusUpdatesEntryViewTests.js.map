{"version":3,"file":"baseStatusUpdatesEntryViewTests.js","names":["suite","TestPage","Backbone","View","extend","stopWatchingEntryUpdates","watchEntryUpdates","queueLoadDiff","statusUpdateHTML","entryView","page","entry","beforeEach","reviewRequest","RB","ReviewRequest","id","editor","ReviewRequestEditor","ReviewRequestPage","StatusUpdatesEntry","reviews","createReview","loaded","links","replies","href","localSitePrefix","reviewRequestEditor","reviewRequestId","typeID","addedTimestamp","Date","UTC","updatedTimestamp","pendingStatusUpdates","diffCommentsData","$el","$","appendTo","$testsScratch","BaseStatusUpdatesEntryView","el","model","diffFragmentQueue","DiffFragmentQueueView","containerPrefix","set","PageManager","setPage","afterEach","describe","it","spyOn","render","expect","watchUpdates","toHaveBeenCalled","not","beforeApplyUpdate","saveFragment","calls","count","toBe","argsFor","toEqual","_reviewViews","length","and","callThrough","callFake","request","type","url","success","find","first","click","apiCall","ajax","stopWatchingUpdates"],"sources":["../../../../../../../static/rb/js/reviewRequestPage/views/tests/baseStatusUpdatesEntryViewTests.es6.js"],"sourcesContent":["suite('rb/reviewRequestPage/views/BaseStatusUpdatesEntryView', function() {\n    /* It's much easier to test against a stub than the full page. */\n    const TestPage = Backbone.View.extend({\n        stopWatchingEntryUpdates() {},\n        watchEntryUpdates() {},\n        queueLoadDiff() {},\n    });\n\n    const statusUpdateHTML = dedent`\n        <div id=\"initial_status_updates\"\n             class=\"review-request-page-entry status-updates\">\n         <a name=\"initial_status_updates\"></a>\n         <div class=\"review-request-page-entry-contents\">\n          <div class=\"header status-update-state-pending\">\n           <div class=\"collapse-button btn\">\n            <div class=\"rb-icon rb-icon-collapse-review\"></div>\n           </div>\n           <div class=\"header-details\">\n            <div class=\"summary\">\n             <span class=\"review-request-page-entry-title\">\n              Checks run (1 waiting to run)\n             </span>\n            </div>\n            <a href=\"#initial_status_updates\" class=\"timestamp\">\n             <time class=\"timesince\"\n                   datetime=\"2018-11-27T00:18:43.664524+00:00\"\n                   title=\"Nov. 27, 2018, 12:18 a.m.\">0 minutes ago</time>\n            </a>\n           </div>\n          </div>\n          <div class=\"banners\"></div>\n          <div class=\"body\">\n           <section class=\"status-update-summary\">\n            <div class=\"status-update-summary-entry\n             status-update-state-not-yet-run\">\n             <span class=\"summary\">nyc</span>\n             Waiting to run\n             <input type=\"button\" value=\"Run\" class=\"status-update-request-run\"\n                    data-status-update-id=\"1\">\n            </div>\n           </section>\n          </div>\n         </div>\n        </div>\n    `;\n\n    let entryView;\n    let page;\n    let entry;\n\n    beforeEach(function() {\n        const reviewRequest = new RB.ReviewRequest({ id: 5 });\n        const editor = new RB.ReviewRequestEditor({\n            reviewRequest: reviewRequest\n        });\n\n        entry = new RB.ReviewRequestPage.StatusUpdatesEntry({\n            reviews: [\n                reviewRequest.createReview(100, {\n                    loaded: true,\n                    links: {\n                        replies: {\n                            href: '/api/review/100/replies/'\n                        }\n                    }\n                }),\n                reviewRequest.createReview(101, {\n                    loaded: true,\n                    links: {\n                        replies: {\n                            href: '/api/review/101/replies/'\n                        }\n                    }\n                }),\n            ],\n            localSitePrefix: null,\n            reviewRequest: reviewRequest,\n            reviewRequestEditor: editor,\n            reviewRequestId: 5,\n            id: '0',\n            typeID: 'initial_status_updates',\n            addedTimestamp: new Date(Date.UTC(2017, 7, 18, 13, 40, 25)),\n            updatedTimestamp: new Date(Date.UTC(2017, 7, 18, 16, 20, 0)),\n            pendingStatusUpdates: true,\n            diffCommentsData: [\n                ['1', '100'],\n                ['2', '100-101'],\n            ],\n        });\n\n        const $el = $(statusUpdateHTML).appendTo($testsScratch);\n\n        entryView = new RB.ReviewRequestPage.BaseStatusUpdatesEntryView({\n            el: $el,\n            model: entry,\n        });\n\n        page = new TestPage();\n        page.diffFragmentQueue = new RB.DiffFragmentQueueView({\n            containerPrefix: 'comment',\n        });\n        entry.set('page', page);\n        RB.PageManager.setPage(page);\n    });\n\n    afterEach(function() {\n        RB.PageManager.setPage(null);\n    });\n\n    describe('Dynamic Updating', function() {\n        describe('Update checking', function() {\n            it('Enabled when pendingStatusUpdates=true', function() {\n                spyOn(entry, 'watchUpdates');\n\n                entry.set('pendingStatusUpdates', true);\n                entryView.render();\n\n                expect(entry.watchUpdates).toHaveBeenCalled();\n            });\n\n            it('Disabled when pendingStatusUpdates=false', function() {\n                spyOn(entry, 'watchUpdates');\n\n                entry.set('pendingStatusUpdates', false);\n                entryView.render();\n\n                expect(entry.watchUpdates).not.toHaveBeenCalled();\n            });\n        });\n\n        it('Saves fragments on beforeApplyUpdate', function() {\n            spyOn(page.diffFragmentQueue, 'saveFragment');\n            spyOn(page, 'stopWatchingEntryUpdates');\n\n            entryView.beforeApplyUpdate();\n            expect(page.diffFragmentQueue.saveFragment.calls.count()).toBe(2);\n            expect(page.diffFragmentQueue.saveFragment.calls.argsFor(0))\n                .toEqual(['1']);\n            expect(page.diffFragmentQueue.saveFragment.calls.argsFor(1))\n                .toEqual(['2']);\n            expect(page.stopWatchingEntryUpdates).toHaveBeenCalled();\n        });\n    });\n\n    describe('render', function() {\n        it('Creates ReviewViews', function() {\n            entryView.render();\n\n            expect(entryView._reviewViews.length).toBe(2);\n        });\n    });\n\n    describe('Run status update', function() {\n        it('Runs and checks for updates when button is clicked', function() {\n            spyOn(entryView.model, 'stopWatchingUpdates');\n            spyOn(entryView.model, 'watchUpdates');\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('PUT');\n                expect(request.url).toBe('/api/review-requests/5/status-updates/1/');\n                request.success();\n            });\n\n            entryView.$el.find('.status-update-request-run').first().click();\n\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(entryView.model.stopWatchingUpdates).toHaveBeenCalled();\n            expect(entryView.model.watchUpdates).toHaveBeenCalled();\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}