{"version":3,"file":"revisionSelectorView.js","names":["RB","RevisionSelectorView","Backbone","View","extend","template","_","events","initialize","options","console","assert","isObject","numHandles","_activeHandle","_firstLabelActive","firstLabelActive","_mouseActive","_numHandles","_values","_rendered","listenTo","model","_update","bindAll","render","revisionLabels","$el","html","_positions","i","length","push","_$handles","$","_$range","_$ticks","_$labels","_$trough","width","each","label","addClass","css","appendTo","$label","text","data","_updateHandles","positions","values","_activeValues","handleOffset","children","el","Math","floor","left","_beginDragHandle","$handle","activeValues","_endDragHandle","removeClass","isEqual","trigger","_moveDragHandle","clientX","mouseX","window","pageXOffset","offset","closestPos","closestDist","dist","abs","undefined","min","max","_onHandleMouseDown","ev","preventDefault","stopPropagation","currentTarget","document","addEventListener","_onHandleMouseUp","_onHandleMouseMove","_onHandleTouchStart","targetTouches","target","_onHandleTouchEnd","_onHandleTouchMove","removeEventListener"],"sources":["../../../../../static/rb/js/views/revisionSelectorView.es6.js"],"sourcesContent":["/**\n * An abstract base class for revision selector controls. This is extended by\n * the controls used on the diff viewer and file attachment review UI pages.\n */\nRB.RevisionSelectorView = Backbone.View.extend({\n    template: _.template(dedent`\n        <div class=\"revision-selector\">\n         <div class=\"revision-selector-trough\"></div>\n         <div class=\"revision-selector-range\"></div>\n         <div class=\"revision-selector-ticks\"></div>\n         <div class=\"revision-selector-labels\"></div>\n         <div class=\"revision-selector-handles\"></div>\n        </div>\n    `),\n\n    events: {\n        'click .revision-selector-label': '_onLabelClick',\n        'mousedown .revision-selector-handle': '_onHandleMouseDown',\n        'mousedown .revision-selector-label': '_onLabelMouseDown',\n        'touchstart .revision-selector-handle': '_onHandleTouchStart',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     firstLabelActive (boolean):\n     *         Whether the first label should be an active (selectable)\n     *         revision or not.\n     *\n     *     numHandles (number):\n     *         The number of revision slider handles to show.\n     */\n    initialize(options) {\n        console.assert(_.isObject(options));\n        console.assert(options.numHandles === 1 || options.numHandles === 2);\n\n        this._activeHandle = null;\n        this._firstLabelActive = options.firstLabelActive;\n        this._mouseActive = false;\n        this._numHandles = options.numHandles;\n        this._values = [];\n\n        this._rendered = false;\n\n        this.listenTo(this.model, 'change', this._update);\n\n        _.bindAll(this,\n                  '_onHandleMouseUp',\n                  '_onHandleMouseMove',\n                  '_onHandleTouchEnd',\n                  '_onHandleTouchMove');\n    },\n\n    /**\n     * Render the view.\n     *\n     * Args:\n     *     revisionLabels (Array):\n     *         The labels to use for each revision.\n     *\n     * Returns:\n     *     RB.RevisionSelectorView:\n     *     This object, for chaining.\n     */\n    render(revisionLabels) {\n        this.$el.html(this.template());\n\n        this._positions = [];\n\n        let i;\n\n        for (i = 0; i < revisionLabels.length; i++) {\n            // Ticks are spaced 30px apart.\n            this._positions.push(i * 30);\n        }\n\n        this._$handles = this.$('.revision-selector-handles');\n        this._$range = this.$('.revision-selector-range');\n        this._$ticks = this.$('.revision-selector-ticks');\n        this._$labels = this.$('.revision-selector-labels');\n        this._$trough = this.$('.revision-selector-trough')\n            .width(this._positions[i - 1]);\n\n        _.each(revisionLabels, (label, i) => {\n            $('<div>')\n                .addClass('revision-selector-tick')\n                .css('left', this._positions[i] + 'px')\n                .appendTo(this._$ticks);\n\n            const $label = $('<div>')\n                .text(label)\n                .addClass('revision-selector-label')\n                .appendTo(this._$labels);\n\n            $label.css('left', (this._positions[i] -\n                                ($label.width() / 2)) + 'px');\n\n            if (this._firstLabelActive || i > 0) {\n                $label\n                    .data('revision', i)\n                    .addClass('revision-selector-label-active');\n            }\n        });\n\n        for (i = 0; i < this._numHandles; i++) {\n            $('<div>')\n                .addClass(\n                    'revision-selector-handle rb-icon rb-icon-range-slider')\n                .data('handle-id', i)\n                .appendTo(this._$handles);\n        }\n\n        this._rendered = true;\n        this._update();\n\n        return this;\n    },\n\n    /**\n     * Update the position of the handles.\n     *\n     * If a drag is currently active, this will draw using the pending state.\n     * Otherwise, it will show the actual revisions.\n     */\n    _updateHandles() {\n        const positions = this._positions;\n        const values = this._mouseActive ? this._activeValues\n                                         : this._values;\n        let handleOffset = null;\n\n        this._$handles.children().each((i, el) => {\n            const $el = $(el);\n\n            if (handleOffset === null) {\n                handleOffset = Math.floor($el.width() / 2);\n            }\n\n            const left = (positions[values[i]] - handleOffset);\n\n            $el.css('left', `${left}px`);\n        });\n\n        if (this._numHandles === 2) {\n            this._$range.css({\n                'left': positions[values[0]] + 'px',\n                'width': positions[values[1] - values[0]] + 'px',\n            });\n        }\n    },\n\n    /**\n     * Begin dragging a handle.\n     *\n     * This will prepare state for dragging the provided handle.\n     *\n     * Args:\n     *     $handle (jQuery):\n     *         The handle being dragged.\n     */\n    _beginDragHandle($handle) {\n        const activeValues = [];\n\n        for (let i = 0; i < this._values.length; i++) {\n            activeValues.push(i);\n        }\n\n        this._activeValues = activeValues;\n\n        this._mouseActive = true;\n        this._activeHandle = $handle.data('handle-id');\n\n        $('body').addClass('revision-selector-grabbed');\n    },\n\n    /**\n     * Finish dragging a handle.\n     *\n     * This will reset the drag state and emit the ``revisionSelected``\n     * event if the handle is in a new location.\n     */\n    _endDragHandle() {\n        console.assert(this._mouseActive);\n\n        this._mouseActive = false;\n        this._activeHandle = null;\n\n        $('body').removeClass('revision-selector-grabbed');\n\n        if (!_.isEqual(this._activeValues, this._values)) {\n            this.trigger('revisionSelected', this._activeValues);\n        }\n    },\n\n    /**\n     * Move a handle based on a drag operation.\n     *\n     * This will update the displayed handles if needed in order to represent\n     * any new drag locations.\n     *\n     * Args:\n     *     clientX (number):\n     *         The current dragged location for the handle.\n     */\n    _moveDragHandle(clientX) {\n        console.assert(this._mouseActive);\n\n        const mouseX = (window.pageXOffset + clientX -\n                        this._$trough.offset().left);\n        let closestPos;\n        let closestDist;\n\n        for (let i = 0; i < this._positions.length; i++) {\n            const dist = Math.abs(this._positions[i] - mouseX);\n\n            if (closestDist === undefined || dist < closestDist) {\n                closestDist = dist;\n                closestPos = i;\n            }\n        }\n\n        if (this._numHandles === 1) {\n            this._activeValues[0] = closestPos;\n        } else if (this._numHandles === 2) {\n            /*\n             * The two-handle case is complex, because we always want the first\n             * value to be less than the second. The below creates a \"pushing\"\n             * behavior where if you slide the left handle to the right, it\n             * will \"push\" the right handle to always have a span of at least\n             * one revision, and vice-versa.\n             */\n            if (this._activeHandle === 0) {\n                // Pushing to the right\n                this._activeValues[0] = Math.min(\n                    closestPos, this._positions.length - 2);\n\n                if (this._values[1] <= this._activeValues[0]) {\n                    this._activeValues[1] = this._activeValues[0] + 1;\n                } else {\n                    this._activeValues[1] = this._values[1];\n                }\n            } else if (this._activeHandle === 1) {\n                // Pushing to the left\n                this._activeValues[1] = Math.max(closestPos, 1);\n\n                if (this._values[0] >= this._activeValues[1]) {\n                    this._activeValues[0] = this._activeValues[1] - 1;\n                } else {\n                    this._activeValues[0] = this._values[0];\n                }\n            }\n        }\n\n        this._updateHandles();\n    },\n\n    /**\n     * Callback for when a mousedown event occurs on a handle.\n     *\n     * This will register for the various events used to handle the drag\n     * operation via the mouse for the revision handle.\n     *\n     * Args:\n     *     ev (Event):\n     *         The mousedown event.\n     */\n    _onHandleMouseDown(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        this._beginDragHandle($(ev.currentTarget));\n\n        document.addEventListener('mouseup', this._onHandleMouseUp, true);\n        document.addEventListener('mousemove', this._onHandleMouseMove, true);\n    },\n\n    /**\n     * Callback for when a touchstart event occurs on a handle.\n     *\n     * This will register for the various events used to handle the drag\n     * operation via touchscreens for the revision handle.\n     *\n     * Args:\n     *     ev (Event):\n     *         The touchstart event.\n     */\n    _onHandleTouchStart(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        this._beginDragHandle($(ev.targetTouches[0].target));\n\n        document.addEventListener('touchend', this._onHandleTouchEnd, true);\n        document.addEventListener('touchmove', this._onHandleTouchMove, true);\n    },\n\n    /**\n     * Callback for when a mouseup event occurs anywhere.\n     *\n     * This completes the handle drag operation and then triggers the\n     * ``revisionSelected`` event with the new revisions.\n     *\n     * All current mouse events will be cleaned up.\n     *\n     * Args:\n     *     ev (Event):\n     *         The mouseup event.\n     */\n    _onHandleMouseUp(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        document.removeEventListener('mouseup', this._onHandleMouseUp, true);\n        document.removeEventListener('mousemove', this._onHandleMouseMove,\n                                     true);\n\n        this._endDragHandle();\n    },\n\n    /**\n     * Callback for when a touchend event occurs anywhere.\n     *\n     * This completes the handle drag operation and then triggers the\n     * ``revisionSelected`` event with the new revisions.\n     *\n     * All current mouse events will be cleaned up.\n     *\n     * Args:\n     *     ev (Event):\n     *         The touchend event.\n     */\n    _onHandleTouchEnd(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        document.removeEventListener('touchend', this._onHandleTouchEnd, true);\n        document.removeEventListener('touchmove', this._onHandleTouchMove,\n                                     true);\n\n        this._endDragHandle();\n    },\n\n    /**\n     * Callback for a mousemove event anywhere.\n     *\n     * Updates the \"active\" values to select the revisions closest to the\n     * current location of the mouse.\n     *\n     * Args:\n     *     ev (Event):\n     *         The mousemove event.\n     */\n    _onHandleMouseMove(ev) {\n        this._moveDragHandle(ev.clientX);\n    },\n\n    /**\n     * Callback for a touchmove event anywhere.\n     *\n     * Updates the \"active\" values to select the revisions closest to the\n     * current location of the mouse.\n     *\n     * Args:\n     *     ev (Event):\n     *         The touchmove event.\n     */\n    _onHandleTouchMove(ev) {\n        this._moveDragHandle(ev.targetTouches[0].clientX);\n    },\n});\n"],"mappings":"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","ignoreList":[]}