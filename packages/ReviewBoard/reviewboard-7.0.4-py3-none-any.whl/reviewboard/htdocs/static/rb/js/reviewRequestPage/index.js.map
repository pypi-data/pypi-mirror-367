{"version":3,"file":"index.js","sources":["../../../../../static/rb/js/reviewRequestPage/views/reviewReplyDraftBannerView.ts","../../../../../static/rb/js/reviewRequestPage/index.ts"],"sourcesContent":["import {\n    type EventsHash,\n    BaseView,\n    spina,\n} from '@beanbag/spina';\n\nimport { type ReviewReply } from 'reviewboard/common';\nimport { type ReviewRequestEditor } from 'reviewboard/reviews';\nimport { FloatingBannerView } from 'reviewboard/ui';\nimport {\n    type FloatingBannerViewOptions,\n} from 'reviewboard/ui/views/floatingBannerView';\n\n\n/**\n * Options for the ReviewReplyDraftBannerView.\n *\n * Version Added:\n *     6.0\n */\ninterface ReviewReplyDraftBannerOptions extends FloatingBannerViewOptions {\n    /**\n     * The review request editor.\n     */\n    reviewRequestEditor: ReviewRequestEditor;\n}\n\n\n/**\n * A banner that represents a pending reply to a review.\n *\n * The banner offers actions for publishing and discarding the review.\n */\n@spina\nexport class ReviewReplyDraftBannerView extends FloatingBannerView<\n    ReviewReply,\n    HTMLDivElement,\n    ReviewReplyDraftBannerOptions\n> {\n    static className = 'banner';\n    static events: EventsHash = {\n        'click .discard-button': '_onDiscardClicked',\n        'click .publish-button': '_onPublishClicked',\n    };\n    static modelEvents: EventsHash = {\n        'publishError': '_onPublishError',\n        'saved': '_onSaved',\n        'saving destroying': '_onSavingOrDestroying',\n    };\n\n    private static template = _.template(dedent`\n        <h1>${gettext('This reply is a draft.')}</h1>\n        <p>${gettext('Be sure to publish when finished.')}</p>\n        <span class=\"banner-actions\">\n         <input type=\"button\" value=\"${gettext('Publish')}\"\n                class=\"publish-button\">\n         <input type=\"button\" value=\"${gettext('Discard')}\"\n                class=\"discard-button\">\n        </span>\n        <% if (showSendEmail) { %>\n         <label>\n          <input type=\"checkbox\" class=\"send-email\" checked>\n          ${gettext('Send E-Mail')}\n        </label>\n        <% } %>\n    `);\n\n    /**********************\n     * Instance variables *\n     **********************/\n\n    #reviewRequestEditor: ReviewRequestEditor;\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (ReviewReplyDraftBannerViewOptions):\n     *         Options for the view.\n     */\n    initialize(options: ReviewReplyDraftBannerOptions) {\n        super.initialize(options);\n        this.#reviewRequestEditor = options.reviewRequestEditor;\n    }\n\n    /**\n     * Render the banner.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyDraftBannerView:\n     *     This object, for chaining.\n     */\n    protected onInitialRender() {\n        super.onInitialRender();\n\n        this.$el.html(ReviewReplyDraftBannerView.template({\n            showSendEmail: this.#reviewRequestEditor.get('showSendEmail'),\n        }));\n    }\n\n    /**\n     * Handler for when Publish is clicked.\n     *\n     * Publishes the reply.\n     */\n    private _onPublishClicked() {\n        const $sendEmail = this.$('.send-email');\n\n        this.model.publish({\n            trivial: $sendEmail.length === 1 && !$sendEmail.is(':checked'),\n        });\n    }\n\n    /**\n     * Handler for when Discard is clicked.\n     *\n     * Discards the reply.\n     */\n    private _onDiscardClicked() {\n        this.model.destroy();\n    }\n\n    /**\n     * Handler for when there's an error publishing.\n     *\n     * The error will be displayed in an alert.\n     *\n     * Args:\n     *     errorText (string):\n     *         The publish error text to show.\n     */\n    private _onPublishError(errorText: string) {\n        alert(errorText);\n    }\n\n    /**\n     * Handler for when the draft is saving or being destroyed.\n     *\n     * This will disable the buttons on the banner while the operation is\n     * in progress.\n     */\n    private _onSavingOrDestroying() {\n        this.$('input').prop('disabled', true);\n    }\n\n    /**\n     * Handler for when the draft is saved.\n     *\n     * This will re-enable the buttons on the banner.\n     */\n    private _onSaved() {\n        this.$('input').prop('disabled', false);\n    }\n}\n\n\n/**\n * A static banner for review replies.\n *\n * This is used when the unified banner is enabled.\n *\n * Version Added:\n *     6.0\n */\n@spina\nexport class ReviewReplyDraftStaticBannerView extends BaseView {\n    static className = 'banner';\n\n    static template = _.template(dedent`\n        <h1><%- draftText %></h1>\n        <p><%- reminderText %></p>\n    `);\n\n    /**\n     * Render the banner.\n     */\n    protected onInitialRender() {\n        this.$el.html(ReviewReplyDraftStaticBannerView.template({\n            draftText: _`This reply is a draft.`,\n            reminderText: _`Be sure to publish when finished.`,\n        }));\n    }\n}\n","import {\n    ReviewReplyDraftBannerView,\n    ReviewReplyDraftStaticBannerView,\n} from './views/reviewReplyDraftBannerView';\n\n\n/* Define a namespace for RB.ReviewRequestPage. */\nexport const ReviewRequestPage = {\n    ReviewReplyDraftBannerView,\n    ReviewReplyDraftStaticBannerView,\n};\n"],"names":["spina","FloatingBannerView","onInitialRender","_onPublishClicked","trivial","_onDiscardClicked","_onSavingOrDestroying","_onSaved","BaseView","reminderText","ReviewRequestPage","ReviewReplyDraftBannerView","ReviewReplyDraftStaticBannerView"],"mappings":";;;;;;;AAQmD;;IAMnD;IACA;IACA;IACA;IACA;IACA;;IASA;IACA;IACA;IACA;IACA;IACA,IAAA,0BAAA,GAAAA,WAAA,CAAA,MAAA,GAAA,MAAA,0BAAA,SACgDC,EAAkB,CAAA,kBAAA,CAAA;;IAM9D,EAAA,OAAA,MAAA,GAAA;IACI,IAAA,uBAAA,EAAA,mBAAA;IACA,IAAA,uBAAA,EAAA,mBAAA;;IAEJ,EAAA,OAAA,WAAA,GAAA;IACI,IAAA,cAAA,EAAA,iBAAA;IACA,IAAA,OAAA,EAAA,UAAA;IACA,IAAA,mBAAA,EAAA,uBAAA;;IAGJ,EAAA,OAAA,QAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,IAAA,EAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;AACJ,GAAA,EAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;AAAA;AACA,6BAAA,EAAA,OAAA,CAAA,SAAA,CAAA,CAAA;AADA;AACA,6BAAA,EAAA,OAAA,CAAA,SAAA,CAAA,CAAA;AADA;AACA;AACA;AACA;AACA;AACA,EAAA,EAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AALA;AACA,OAAA,CAAA,CAAA,CAAA;;IAeI;IACJ;IACA;;IAEI,EAAA,oBAAA,CAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;;IAEQ,IAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;IACA,IAAA,IAAA,CAAA,oBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IACcC,EAAAA,eAAAA,GAAAA;;;;IAKN,KAAA,CAAA,CAAA,CAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACYC,EAAAA,iBAAAA,GAAAA;IACJ,IAAA,MAAA,UAAA,GAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA;IAEA,IAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA;IACIC,MAAAA,OAAAA,EAAAA,UAAAA,CAAAA,MAAAA,KAAAA,CAAAA,IAAAA,CAAAA,UAAAA,CAAAA,EAAAA,CAAAA,UAAAA,CAAAA;IACJ,KAAA,CAAA,CAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACYC,EAAAA,iBAAAA,GAAAA;IACJ,IAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,CAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IAGI,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACYC,EAAAA,qBAAAA,GAAAA;;IAER,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACYC,EAAAA,QAAAA,GAAAA;;IAER,GAAA;IACJ,CAAA,CAAA,IAAA,MAAA,CAAA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAA,gCAAA,GAAAP,WAAA,CAAA,OAAA,GAAA,MAAA,gCAAA,SAAAQ,cAAA,CAAA;;IAII,EAAA,OAAA,QAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA;AACJ,0BAAA,CAAA,CAAA,CAAA;;IAII;IACJ;IACA;IACcN,EAAAA,eAAAA,GAAAA;;;IAGFO,MAAAA,YAAAA,EAAAA,OAAAA,CAAAA,mCAAAA,CAAAA;IACJ,KAAA,CAAA,CAAA,CAAA;IACJ,GAAA;IACJ,CAAA,CAAA,IAAA,OAAA;;IChLA;AACO,UAAMC,iBAAiB,GAAG;MAC7BC,0BAA0B;IAC1BC,EAAAA,gCAAAA;IACJ;;;;;;;;;;"}