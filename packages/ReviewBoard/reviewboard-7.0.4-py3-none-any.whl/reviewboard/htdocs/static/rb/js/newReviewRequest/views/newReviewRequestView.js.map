{"version":3,"file":"newReviewRequestView.js","names":["FilesOnlyPreCommitModel","Backbone","Model","extend","defaults","_","repository","FilesOnlyPreCommitView","View","className","template","events","render","$el","html","description","gettext","buttonText","_onCreateClicked","ev","preventDefault","stopPropagation","model","get","reviewRequest","RB","ReviewRequest","localSitePrefix","save","navigateTo","NewReviewRequestView","PageView","el","renderPage","$pageContent","hint","repositoriesLabel","_$newReviewRequestContainer","find","_$repoPane","_$repoDetailContainer","_$repoSelectorContainer","_$content","_$hint","_repositorySelectionView","RepositorySelectionView","collection","listenTo","set","_onRepositoryChanged","_preCommitView","hide","append","_postCommitView","repositories","models","length","trigger","onMobileModeChanged","inMobileMode","detach","appendTo","$mainSidebar","removeClass","delay","_removeCommitViews","bind","addClass","PreCommitView","UploadDiffModel","PostCommitView","PostCommitModel","$scrollContainer","remove","_onShowRepositoriesClicked","unselect"],"sources":["../../../../../../static/rb/js/newReviewRequest/views/newReviewRequestView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * A simple model for creating file-attachment only review requests.\n *\n * Model Attributes:\n *     repository (RB.Repository):\n *         The associated repository (always ``null``).\n */\nconst FilesOnlyPreCommitModel = Backbone.Model.extend({\n    defaults: _.defaults({\n        repository: null,\n    }),\n});\n\n\n/**\n * A simple view for creating file-attachment only review requests.\n */\nconst FilesOnlyPreCommitView = Backbone.View.extend({\n    className: 'files-only',\n\n    template: _.template(dedent`\n        <p><%- description %></p>\n        <input type=\"submit\" class=\"primary large\" id=\"files-only-create\"\n               value=\"<%- buttonText %>\">\n    `),\n\n    events: {\n        'click #files-only-create': '_onCreateClicked',\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     FilesOnlyPreCommitView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.html(this.template({\n            description: gettext('You won\\'t be able to add any diffs to this review request. The review request will only be usable for reviewing graphics, screenshots and file attachments.'),\n            buttonText: gettext('Create Review Request'),\n        }));\n\n        return this;\n    },\n\n    /**\n     * Callback for when the \"Create Review Request\" button is clicked.\n     *\n     * Creates a review request with the given localSitePrefix and nothing else,\n     * and redirects the browser to it.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    async _onCreateClicked(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        const repository = this.model.get('repository');\n        const reviewRequest = new RB.ReviewRequest({\n            localSitePrefix: repository.get('localSitePrefix')\n        });\n\n        // TODO: handle errors\n        await reviewRequest.save();\n        RB.navigateTo(reviewRequest.get('reviewURL'));\n    },\n});\n\n\n/**\n * The view for creating new review requests.\n *\n * This orchestrates several other objects to guide users through creating file\n * attachment only, pre-commit, or post-commit review requests.\n */\nRB.NewReviewRequestView = RB.PageView.extend({\n    el: '#new-review-request',\n\n    template: _.template(dedent`\n        <div class=\"rb-c-new-review-request\">\n         <div class=\"rb-c-sidebar -no-icons\"></div>\n         <div class=\"rb-c-new-review-request__repo-pane\">\n          <a href=\"#\" class=\"rb-c-new-review-request__show-repositories\">\n           <span class=\"fa fa-chevron-left\"></span>\n           <%- repositoriesLabel %>\n          </a>\n          <div class=\"rb-c-new-review-request__repo-detail\">\n           <div class=\"rb-c-new-review-request__main\">\n            <div class=\"rb-c-new-review-request__hint\"><%- hint %></div>\n           </div>\n          </div>\n         </div>\n        </div>\n    `),\n\n    events: {\n        'click .rb-c-new-review-request__show-repositories':\n            '_onShowRepositoriesClicked',\n    },\n\n    /**\n     * Render the page.\n     */\n    renderPage() {\n        /* Build the main UI for the page. */\n        this.$pageContent.html(this.template({\n            hint: gettext('Select a repository'),\n            repositoriesLabel: gettext('Repositories'),\n        }));\n\n        this._$newReviewRequestContainer = this.$pageContent.find(\n            '.rb-c-new-review-request');\n        this._$repoPane = this.$pageContent.find(\n            '.rb-c-new-review-request__repo-pane');\n        this._$repoDetailContainer = this._$repoPane.find(\n            '.rb-c-new-review-request__repo-detail');\n        this._$repoSelectorContainer = this._$newReviewRequestContainer.find(\n            '.rb-c-sidebar');\n        this._$content = this._$repoDetailContainer.find(\n            '.rb-c-new-review-request__main');\n        this._$hint = this._$repoDetailContainer.find(\n            '.rb-c-new-review-request__hint');\n\n        /*\n         * Add the repository selector. This will live either in the page's\n         * sidebar (in desktop mode) or in the page's container (in mobile\n         * mode).\n         */\n        this._repositorySelectionView = new RB.RepositorySelectionView({\n            collection: this.model.get('repositories'),\n        });\n        this._repositorySelectionView.render();\n\n        this.listenTo(this._repositorySelectionView,\n                      'selected',\n                      repository => this.model.set('repository', repository));\n        this.listenTo(this.model, 'change:repository',\n                      this._onRepositoryChanged);\n\n        if (this._preCommitView) {\n            this._$hint.hide();\n            this._$content.append(this._preCommitView.render().el);\n        }\n        if (this._postCommitView) {\n            this._$hint.hide();\n            this._$content.append(this._postCommitView.render().el);\n        }\n\n        /*\n         * If the only two options are the \"None - File attachments only\"\n         * pseudo-repository and one real one, pre-select the real one to speed\n         * up the 80% case. Otherwise, we'll leave it at the \"Select a\n         * repository\" screen.\n         */\n        const repositories = this.model.get('repositories').models;\n\n        if (repositories.length === 2) {\n            repositories[1].trigger('selected', repositories[1]);\n        }\n\n        return this;\n    },\n\n    /**\n     * Handle mobile mode changes.\n     *\n     * This will update the parent of the repository selector. In desktop\n     * mode, it will be placed in the sidebar. In mobile mode, it will be\n     * placed in a container in this view, with its display managed by CSS.\n     *\n     * Args:\n     *     inMobileMode (boolean):\n     *         Whether the UI is now in mobile mode.\n     */\n    onMobileModeChanged(inMobileMode) {\n        this._repositorySelectionView.$el\n            .detach()\n            .appendTo(inMobileMode\n                      ? this._$repoSelectorContainer\n                      : this.$mainSidebar);\n    },\n\n    /**\n     * Callback for when the current repository has changed.\n     *\n     * If the \"Files Only\" entry is selected, this shows the special\n     * FilesOnlyPreCommitView in the right-hand pane.\n     *\n     * If a repository that supports fetching committed revisions is selected,\n     * this will show both the pre-commit and post-commit UIs stacked\n     * vertically. If the repository only supports pre-commit, only the\n     * pre-commit UI is shown.\n     */\n    _onRepositoryChanged() {\n        const repository = this.model.get('repository');\n\n        if (repository === null) {\n            /*\n             * A repository is no longer selected. The user either chose\n             * the File Attachments Only entry or hit the \"< Repositories\"\n             * link on mobile.\n             *\n             * If on mobile, we're going to add a small delay (slightly longer\n             * than the animation time) before removing any views, so that\n             * they don't disappear during animation.\n             */\n            this._$newReviewRequestContainer\n                .removeClass('js-repository-selected');\n\n            if (this.inMobileMode) {\n                _.delay(this._removeCommitViews.bind(this), 400);\n            } else {\n                this._removeCommitViews();\n            }\n        } else {\n            /*\n             * The user has selected a repository. Begin placing new views\n             * based on the repository's capabilities.\n             */\n            this._$newReviewRequestContainer\n                .addClass('js-repository-selected');\n\n            this._removeCommitViews();\n\n            if (repository.get('filesOnly')) {\n                this._preCommitView = new FilesOnlyPreCommitView({\n                    model: new FilesOnlyPreCommitModel({\n                        repository: repository\n                    })\n                });\n            } else {\n                this._preCommitView = new RB.PreCommitView({\n                    model: new RB.UploadDiffModel({\n                        repository: repository\n                    })\n                });\n\n                if (repository.get('supportsPostCommit')) {\n                    this._postCommitView = new RB.PostCommitView({\n                        model: new RB.PostCommitModel({\n                            repository: repository\n                        }),\n                        $scrollContainer: this._$content,\n                    });\n                }\n            }\n\n            this._$hint.hide();\n            this._$content.append(this._preCommitView.render().el);\n\n            if (this._postCommitView) {\n                this._$content.append(this._postCommitView.render().el);\n            }\n        }\n    },\n\n    /**\n     * Remove the pre- and post-commit views.\n     *\n     * This will remove the views from the DOM and null them out, allowing\n     * them to be rebuilt.\n     */\n    _removeCommitViews() {\n        if (this._preCommitView) {\n            this._preCommitView.remove();\n            this._preCommitView = null;\n        }\n\n        if (this._postCommitView) {\n            this._postCommitView.remove();\n            this._postCommitView = null;\n        }\n    },\n\n    /**\n     * Handler for when the mobile-only Show Repositories link is clicked.\n     *\n     * Sets the page to slide back to the sidebar listing repositories.\n     */\n    _onShowRepositoriesClicked() {\n        this._repositorySelectionView.unselect();\n    },\n});\n\n\n})();\n"],"mappings":"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","ignoreList":[]}