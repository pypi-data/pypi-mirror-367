{"version":3,"file":"filteredCollection.js","names":["RB","FilteredCollection","BaseCollection","extend","initialize","models","options","collection","filters","listenTo","_onItemAdded","remove","_rebuild","setFilters","item","_passesFilters","add","_","isEmpty","reset","filter","checkEmpty","every","value","key","attrValue","get","isString","indexOf"],"sources":["../../../../../static/rb/js/collections/filteredCollection.es6.js"],"sourcesContent":["/**\n * A collection for filtered results from another collection.\n *\n * This allows a consumer to filter the contents of another collection.\n * A filter can be set by passing the 'filters' option at construction\n * time or calling setFilters, both taking a dictionary of attributes and\n * values. In order for an item to be in this collection, each key in the item\n * must start with the value in the filter.\n */\nRB.FilteredCollection = RB.BaseCollection.extend({\n    /**\n     * Initialize the collection.\n     *\n     * This begins listening for events on the main collection, in order\n     * to update and present a filtered view.\n     *\n     * Args:\n     *     models (Array of object):\n     *         Initial models for the collection.\n     *\n     *     options (object):\n     *         Options for the collection.\n     *\n     * Option Args:\n     *     collection (Backbone.Collection):\n     *         Main collection to filter.\n     *\n     *     filters (object):\n     *         A set of filters to apply. This is an object where the keys are\n     *         the name of the attributes and the values are the value to\n     *         filter for. If the values are strings, this will do a\n     *         starts-with comparison.\n     */\n    initialize(models, options) {\n        this.collection = options.collection;\n        this.filters = options.filters;\n\n        this.listenTo(this.collection, 'add', this._onItemAdded);\n        this.listenTo(this.collection, 'remove', this.remove);\n        this.listenTo(this.collection, 'reset', this._rebuild);\n\n        this._rebuild();\n    },\n\n    /**\n     * Set new filters for the collection.\n     *\n     * The items in the collection will be rebuilt to match the filter.\n     *\n     * Args:\n     *     filters (object):\n     *         A list of filters to apply.\n     */\n    setFilters(filters) {\n        this.filters = filters;\n\n        this._rebuild();\n    },\n\n    /**\n     * Handler for when an item in the main collection is added.\n     *\n     * If the item passes the filter, it will be added to this collection\n     * as well.\n     *\n     * Args:\n     *     item (Backbone.Model):\n     *         The newly-added item.\n     */\n    _onItemAdded(item) {\n        if (this._passesFilters(item, true)) {\n            this.add(item);\n        }\n    },\n\n    /**\n     * Rebuild the collection.\n     *\n     * This iterates through all the items in the main collection and\n     * adds any that pass the filter to this collection.\n     */\n    _rebuild() {\n        if (_.isEmpty(this.filters)) {\n            this.reset(this.collection.models);\n        } else {\n            this.reset(this.collection.filter(this._passesFilters, this));\n        }\n    },\n\n    /**\n     * Return whether an item passes the filters.\n     *\n     * Args:\n     *     item (Backbone.Model):\n     *         The item to check.\n     *\n     *     checkEmpty (boolean):\n     *         Whether to allow items if the filters list is empty.\n     */\n    _passesFilters(item, checkEmpty) {\n        if (checkEmpty && (!this.filters || _.isEmpty(this.filters))) {\n            return true;\n        }\n\n        return _.every(this.filters, (value, key) => {\n            const attrValue = item.get(key);\n\n            if (_.isString(value)) {\n                return attrValue.indexOf(value) === 0;\n            } else {\n                return attrValue === value;\n            }\n        });\n    }\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,kBAAkB,GAAGD,EAAE,CAACE,cAAc,CAACC,MAAM,CAAC;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAACC,MAAM,EAAEC,OAAO,EAAE;IACxB,IAAI,CAACC,UAAU,GAAGD,OAAO,CAACC,UAAU;IACpC,IAAI,CAACC,OAAO,GAAGF,OAAO,CAACE,OAAO;IAE9B,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACF,UAAU,EAAE,KAAK,EAAE,IAAI,CAACG,YAAY,CAAC;IACxD,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACF,UAAU,EAAE,QAAQ,EAAE,IAAI,CAACI,MAAM,CAAC;IACrD,IAAI,CAACF,QAAQ,CAAC,IAAI,CAACF,UAAU,EAAE,OAAO,EAAE,IAAI,CAACK,QAAQ,CAAC;IAEtD,IAAI,CAACA,QAAQ,CAAC,CAAC;EACnB,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAACL,OAAO,EAAE;IAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACI,QAAQ,CAAC,CAAC;EACnB,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIF,YAAYA,CAACI,IAAI,EAAE;IACf,IAAI,IAAI,CAACC,cAAc,CAACD,IAAI,EAAE,IAAI,CAAC,EAAE;MACjC,IAAI,CAACE,GAAG,CAACF,IAAI,CAAC;IAClB;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIF,QAAQA,CAAA,EAAG;IACP,IAAIK,CAAC,CAACC,OAAO,CAAC,IAAI,CAACV,OAAO,CAAC,EAAE;MACzB,IAAI,CAACW,KAAK,CAAC,IAAI,CAACZ,UAAU,CAACF,MAAM,CAAC;IACtC,CAAC,MAAM;MACH,IAAI,CAACc,KAAK,CAAC,IAAI,CAACZ,UAAU,CAACa,MAAM,CAAC,IAAI,CAACL,cAAc,EAAE,IAAI,CAAC,CAAC;IACjE;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,cAAcA,CAACD,IAAI,EAAEO,UAAU,EAAE;IAC7B,IAAIA,UAAU,KAAK,CAAC,IAAI,CAACb,OAAO,IAAIS,CAAC,CAACC,OAAO,CAAC,IAAI,CAACV,OAAO,CAAC,CAAC,EAAE;MAC1D,OAAO,IAAI;IACf;IAEA,OAAOS,CAAC,CAACK,KAAK,CAAC,IAAI,CAACd,OAAO,EAAE,CAACe,KAAK,EAAEC,GAAG,KAAK;MACzC,MAAMC,SAAS,GAAGX,IAAI,CAACY,GAAG,CAACF,GAAG,CAAC;MAE/B,IAAIP,CAAC,CAACU,QAAQ,CAACJ,KAAK,CAAC,EAAE;QACnB,OAAOE,SAAS,CAACG,OAAO,CAACL,KAAK,CAAC,KAAK,CAAC;MACzC,CAAC,MAAM;QACH,OAAOE,SAAS,KAAKF,KAAK;MAC9B;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC","ignoreList":[]}