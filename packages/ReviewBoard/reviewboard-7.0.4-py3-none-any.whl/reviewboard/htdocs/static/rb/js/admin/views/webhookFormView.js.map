{"version":3,"file":"webhookFormView.js","names":["RB","WebhookFormView","Backbone","View","extend","events","render","_$encoding","$","_$eventCheckboxes","find","_$allEventsCheckbox","filter","_$applyTo","_$applyToSelected","_$customContentRow","_$reposRow","_$useCustomContent","_codeMirror","CodeMirror","fromTextArea","matchBrackets","mode","append","attr","MANUAL_URL","text","gettext","_onAllEventsToggled","_onApplyToChanged","_onEncodingChanged","_onUseCustomContentToggled","not","prop","checked","toggle","setOption","val"],"sources":["../../../../../../static/rb/js/admin/views/webhookFormView.es6.js"],"sourcesContent":["/**\n * Manages UI for the Add/Edit Webhook form.\n *\n * This will manage the visibility of different page elements, create a\n * CodeMirror for editing, and manage CodeMirror's properties.\n */\nRB.WebhookFormView = Backbone.View.extend({\n    events: {\n        'change #id_apply_to': '_onApplyToChanged',\n        'change #id_encoding': '_onEncodingChanged',\n        'change #id_use_custom_content': '_onUseCustomContentToggled',\n        'change #id_events_0': '_onAllEventsToggled',\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.WebhookFormView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$encoding = $('#id_encoding');\n        this._$eventCheckboxes = $('#id_events').find('input');\n        this._$allEventsCheckbox = this._$eventCheckboxes.filter('[value=\"*\"]');\n        this._$applyTo = $('#id_apply_to');\n        this._$applyToSelected = this._$applyTo.find('[value=\"S\"]');\n        this._$customContentRow = this.$('.field-custom_content');\n        this._$reposRow = this.$('.field-repositories');\n        this._$useCustomContent = $('#id_use_custom_content');\n\n        this._codeMirror = CodeMirror.fromTextArea($('#id_custom_content')[0], {\n            matchBrackets: true,\n            mode: 'application/json',\n        });\n\n        this._$customContentRow.find('p.help')\n            .append('<br>')\n            .append(\n                $('<a>')\n                    .attr('href', MANUAL_URL + 'admin/configuration/webhooks/'\n                          + '#custom-payloads')\n                    .text(gettext('Custom payload reference'))\n                );\n\n        /*\n         * Activate these handlers so that the form will be in the correct\n         * state.\n         */\n        this._onAllEventsToggled();\n        this._onApplyToChanged();\n        this._onEncodingChanged();\n        this._onUseCustomContentToggled();\n\n        return this;\n    },\n\n    /**\n     * Handler for when the All Events checkbox is toggled.\n     *\n     * Sets the other events to be disabled if the checkbox is checked.\n     */\n    _onAllEventsToggled() {\n        this._$eventCheckboxes.not(this._$allEventsCheckbox).prop(\n            'disabled', this._$allEventsCheckbox[0].checked);\n    },\n\n    /**\n     * Handler for when the Apply To radio buttons are changed.\n     *\n     * Toggles the visibility of the Repositories list, depending on the\n     * selected radio button.\n     */\n    _onApplyToChanged() {\n        this._$reposRow.toggle(this._$applyToSelected[0].checked);\n    },\n\n    /**\n     * Handler for when the Encoding drop-down is changed.\n     *\n     * Sets the CodeMirror mode based on the encoding value.\n     */\n    _onEncodingChanged() {\n        this._codeMirror.setOption('mode', this._$encoding.val());\n    },\n\n    /**\n     * Handler for when the Use Custom Content checkbox is toggled.\n     *\n     * Toggles the visibility of the text box to match the checkbox.\n     */\n    _onUseCustomContentToggled() {\n        this._$customContentRow.toggle(this._$useCustomContent[0].checked);\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,eAAe,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC;EACtCC,MAAM,EAAE;IACJ,qBAAqB,EAAE,mBAAmB;IAC1C,qBAAqB,EAAE,oBAAoB;IAC3C,+BAA+B,EAAE,4BAA4B;IAC7D,qBAAqB,EAAE;EAC3B,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACC,UAAU,GAAGC,CAAC,CAAC,cAAc,CAAC;IACnC,IAAI,CAACC,iBAAiB,GAAGD,CAAC,CAAC,YAAY,CAAC,CAACE,IAAI,CAAC,OAAO,CAAC;IACtD,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACF,iBAAiB,CAACG,MAAM,CAAC,aAAa,CAAC;IACvE,IAAI,CAACC,SAAS,GAAGL,CAAC,CAAC,cAAc,CAAC;IAClC,IAAI,CAACM,iBAAiB,GAAG,IAAI,CAACD,SAAS,CAACH,IAAI,CAAC,aAAa,CAAC;IAC3D,IAAI,CAACK,kBAAkB,GAAG,IAAI,CAACP,CAAC,CAAC,uBAAuB,CAAC;IACzD,IAAI,CAACQ,UAAU,GAAG,IAAI,CAACR,CAAC,CAAC,qBAAqB,CAAC;IAC/C,IAAI,CAACS,kBAAkB,GAAGT,CAAC,CAAC,wBAAwB,CAAC;IAErD,IAAI,CAACU,WAAW,GAAGC,UAAU,CAACC,YAAY,CAACZ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE;MACnEa,aAAa,EAAE,IAAI;MACnBC,IAAI,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACP,kBAAkB,CAACL,IAAI,CAAC,QAAQ,CAAC,CACjCa,MAAM,CAAC,MAAM,CAAC,CACdA,MAAM,CACHf,CAAC,CAAC,KAAK,CAAC,CACHgB,IAAI,CAAC,MAAM,EAAEC,UAAU,GAAG,+BAA+B,GAClD,kBAAkB,CAAC,CAC1BC,IAAI,CAAAC,OAAA,4BAAoC,CAC7C,CAAC;;IAET;AACR;AACA;AACA;IACQ,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,0BAA0B,CAAC,CAAC;IAEjC,OAAO,IAAI;EACf,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIH,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACnB,iBAAiB,CAACuB,GAAG,CAAC,IAAI,CAACrB,mBAAmB,CAAC,CAACsB,IAAI,CACrD,UAAU,EAAE,IAAI,CAACtB,mBAAmB,CAAC,CAAC,CAAC,CAACuB,OAAO,CAAC;EACxD,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIL,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACb,UAAU,CAACmB,MAAM,CAAC,IAAI,CAACrB,iBAAiB,CAAC,CAAC,CAAC,CAACoB,OAAO,CAAC;EAC7D,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIJ,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACZ,WAAW,CAACkB,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC7B,UAAU,CAAC8B,GAAG,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIN,0BAA0BA,CAAA,EAAG;IACzB,IAAI,CAAChB,kBAAkB,CAACoB,MAAM,CAAC,IAAI,CAAClB,kBAAkB,CAAC,CAAC,CAAC,CAACiB,OAAO,CAAC;EACtE;AACJ,CAAC,CAAC","ignoreList":[]}