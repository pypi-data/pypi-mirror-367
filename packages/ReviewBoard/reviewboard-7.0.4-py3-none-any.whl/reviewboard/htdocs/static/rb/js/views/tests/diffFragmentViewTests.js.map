{"version":3,"file":"diffFragmentViewTests.js","names":["suite","fragmentTemplate","_","template","view","loadDiff","beforeEach","jasmine","createSpy","RB","DiffFragmentView","collapsible","$el","html","$testsScratch","append","spyOn","and","callFake","cb","describe","it","render","expect","hasClass","toBe","_$table","_$thead","css","not","each","_$diffHeaders","headerEl","$","hide","_collapsible","eq","click","toHaveBeenCalled","calls","mostRecent","args","linesOfContext","sel","trigger","isHovering"],"sources":["../../../../../../static/rb/js/views/tests/diffFragmentViewTests.es6.js"],"sourcesContent":["suite('rb/views/DiffFragmentView', function() {\n    const fragmentTemplate = _.template(dedent`\n        <table>\n         <thead>\n         </thead>\n         <tbody class=\"diff-header diff-header-above\">\n          <tr>\n           <td>\n            <div>\n             <a href=\"#\" class=\"diff-expand-btn\"\n                data-lines-of-context=\"20,0\"></a>\n            </div>\n           </td>\n          </tr>\n         </tbody>\n         <tbody class=\"insert\"></tbody>\n         <tbody class=\"insert\">\n          <tr>\n           <td>\n            <div class=\"rb-c-diff-collapse-button\" role=\"button\" tabindex=\"0\"\n                 data-lines-of-context=\"0,0\"></div>\n           </td>\n          </tr>\n         </tbody>\n         <tbody class=\"diff-header diff-header-below\">\n          <tr>\n           <td>\n            <div>\n             <a href=\"#\" class=\"diff-expand-btn\"\n                data-lines-of-context=\"0,20\"></a>\n            </div>\n           </td>\n          </tr>\n         </tbody>\n        </table>\n    `);\n\n    let view;\n    let loadDiff;\n\n    beforeEach(function() {\n        loadDiff = jasmine.createSpy('loadDiff');\n\n        view = new RB.DiffFragmentView({\n            loadDiff: loadDiff,\n            collapsible: true,\n        });\n        view.$el.html(fragmentTemplate());\n        $testsScratch.append(view.$el);\n\n        /* Make all the deferred/delayed functions run immediately. */\n        spyOn(_, 'defer').and.callFake(cb => cb());\n        spyOn(_, 'delay').and.callFake(cb => cb());\n    });\n\n    describe('render', function() {\n        it('With visible and collapsible === true', function() {\n            view.render();\n\n            expect(view.$el.hasClass('allow-transitions')).toBe(true);\n            expect(view._$table.hasClass('expanded')).toBe(false);\n            expect(view._$table.hasClass('collapsed')).toBe(true);\n\n            /*\n             * Ideally we'd check for the proper transform values we're setting\n             * (or part of them anyway), but browsers may turn those into\n             * \"matrix(...)\" values. So this is better than nothing.\n             */\n            expect(view._$thead.css('transform')).not.toBe('none');\n\n            _.each(view._$diffHeaders, headerEl => {\n                expect($(headerEl).css('transform')).not.toBe('none');\n            });\n        });\n\n        it('With hidden and collapsible === true', function() {\n            view.$el.hide();\n            view.render();\n\n            expect(view.$el.hasClass('allow-transitions')).toBe(true);\n            expect(view._$table.hasClass('expanded')).toBe(true);\n            expect(view._$table.hasClass('collapsed')).toBe(false);\n\n            /*\n             * Ideally we'd check for the proper transform values we're setting\n             * (or part of them anyway), but browsers may turn those into\n             * \"matrix(...)\" values. So this is better than nothing.\n             */\n            expect(view._$thead.css('transform')).toBe('none');\n\n            _.each(view._$diffHeaders, headerEl => {\n                expect($(headerEl).css('transform')).toBe('none');\n            });\n        });\n\n        it('With collapsible === false', function() {\n            view._collapsible = false;\n            view.render();\n\n            expect(view.$el.hasClass('allow-transitions')).toBe(false);\n            expect(view._$table.hasClass('expanded')).toBe(true);\n            expect(view._$table.hasClass('collapsed')).toBe(false);\n\n            /*\n             * Ideally we'd check for the proper transform values we're setting\n             * (or part of them anyway), but browsers may turn those into\n             * \"matrix(...)\" values. So this is better than nothing.\n             */\n            expect(view._$thead.css('transform')).toBe('none');\n\n            _.each(view._$diffHeaders, headerEl => {\n                expect($(headerEl).css('transform')).toBe('none');\n            });\n        });\n    });\n\n    describe('Events', function() {\n        it('click expansion button', function() {\n            view.render();\n            view.$('.diff-expand-btn').eq(0).click();\n\n            expect(loadDiff).toHaveBeenCalled();\n            expect(loadDiff.calls.mostRecent().args[0].linesOfContext)\n                .toBe('20,0');\n        });\n\n        it('click collapse button', function() {\n            view.render();\n            view.$('.rb-c-diff-collapse-button').eq(0).click();\n\n            expect(loadDiff).toHaveBeenCalled();\n            expect(loadDiff.calls.mostRecent().args[0].linesOfContext)\n                .toBe('0,0');\n        });\n\n        describe('mouseenter', function() {\n            it('With collapsible === true', function() {\n                view.render();\n\n                spyOn(view.$el, 'is').and.callFake(sel => {\n                    expect(sel).toBe(':hover');\n\n                    return true;\n                });\n                view.$el.trigger('mouseenter');\n\n                expect(view._$table.hasClass('collapsed')).toBe(false);\n                expect(view._$table.hasClass('expanded')).toBe(true);\n                expect(view._$thead.css('transform')).toBe('none');\n\n                _.each(view._$diffHeaders, headerEl => {\n                    expect($(headerEl).css('transform')).toBe('none');\n                });\n            });\n\n            it('With collapsible === false', function() {\n                view._collapsible = false;\n                view.render();\n\n                spyOn(view.$el, 'is').and.callFake(sel => {\n                    expect(sel).toBe(':hover');\n\n                    return true;\n                });\n                view.$el.trigger('mouseenter');\n\n                expect(view._$table.hasClass('collapsed')).toBe(false);\n                expect(view._$table.hasClass('expanded')).toBe(true);\n                expect(view._$thead.css('transform')).toBe('none');\n\n                _.each(view._$diffHeaders, headerEl => {\n                    expect($(headerEl).css('transform')).toBe('none');\n                });\n            });\n        });\n\n        describe('mouseleave', function() {\n            it('With collapsible === true', function() {\n                let isHovering = true;\n\n                view.render();\n\n                /* First, trigger a mouseenter. */\n                spyOn(view.$el, 'is').and.callFake(sel => {\n                    expect(sel).toBe(':hover');\n\n                    return isHovering;\n                });\n                view.$el.trigger('mouseenter');\n\n                /* Now the mouse leave. */\n                isHovering = false;\n                view.$el.trigger('mouseleave');\n\n                expect(view._$table.hasClass('collapsed')).toBe(true);\n                expect(view._$table.hasClass('expanded')).toBe(false);\n                expect(view._$thead.css('transform')).not.toBe('none');\n\n                _.each(view._$diffHeaders, headerEl => {\n                    expect($(headerEl).css('transform')).not.toBe('none');\n                });\n            });\n\n            it('With collapsible === false', function() {\n                let isHovering = true;\n\n                view._collapsible = false;\n                view.render();\n\n                /* First, trigger a mouseenter. */\n                spyOn(view.$el, 'is').and.callFake(sel => {\n                    expect(sel).toBe(':hover');\n\n                    return isHovering;\n                });\n                view.$el.trigger('mouseenter');\n\n                /* Now the mouse leave. */\n                isHovering = false;\n                view.$el.trigger('mouseleave');\n\n                expect(view._$table.hasClass('collapsed')).toBe(false);\n                expect(view._$table.hasClass('expanded')).toBe(true);\n                expect(view._$thead.css('transform')).toBe('none');\n\n                _.each(view._$diffHeaders, headerEl => {\n                    expect($(headerEl).css('transform')).toBe('none');\n                });\n            });\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}