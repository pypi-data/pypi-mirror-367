{"version":3,"file":"entryModelTests.js","names":["suite","reviewRequestEditor","entry","beforeEach","RB","ReviewRequestEditor","reviewRequest","ReviewRequest","ReviewRequestPage","Entry","id","typeID","addedTimestamp","updatedTimestamp","ignoredAttr","parse","it","expect","toBe","get","toEqual","Date","UTC","describe","metadata","isUpdated","etag","set"],"sources":["../../../../../../../static/rb/js/reviewRequestPage/models/tests/entryModelTests.es6.js"],"sourcesContent":["suite('rb/reviewRequestPage/models/Entry', function() {\n    let reviewRequestEditor;\n    let entry;\n\n    beforeEach(function() {\n        reviewRequestEditor = new RB.ReviewRequestEditor({\n            reviewRequest: new RB.ReviewRequest(),\n        });\n\n        entry = new RB.ReviewRequestPage.Entry({\n            reviewRequestEditor: reviewRequestEditor,\n            id: '123',\n            typeID: 'some_type',\n            addedTimestamp: '2017-08-18T13:40:25Z',\n            updatedTimestamp: '2017-08-18T16:20:00Z',\n            ignoredAttr: 'ignored',\n        }, {\n            parse: true,\n        });\n    });\n\n    it('parse', function() {\n        expect(entry.id).toBe('123');\n        expect(entry.get('reviewRequestEditor')).toBe(reviewRequestEditor);\n        expect(entry.get('addedTimestamp'))\n            .toEqual(new Date(Date.UTC(2017, 7, 18, 13, 40, 25)));\n        expect(entry.get('updatedTimestamp'))\n            .toEqual(new Date(Date.UTC(2017, 7, 18, 16, 20, 0)));\n        expect(entry.get('typeID')).toBe('some_type');\n    });\n\n    describe('isUpdated', function() {\n        it('With newer updateTimestamp only', function() {\n            const metadata = {\n                updatedTimestamp: '2017-08-20T23:10:12Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(true);\n        });\n\n        it('With older updateTimestamp only', function() {\n            const metadata = {\n                updatedTimestamp: '2017-08-18T12:10:12Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(false);\n        });\n\n        it('With changed etag', function() {\n            const metadata = {\n                etag: 'new-etag',\n                updatedTimestamp: '2017-08-18T16:20:00Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(true);\n        });\n\n        it('With same updateTimestamp and etag', function() {\n            entry.set('etag', 'old-etag');\n\n            const metadata = {\n                etag: 'old-etag',\n                updatedTimestamp: '2017-08-18T16:20:00Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(false);\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,mCAAmC,EAAE,YAAW;EAClD,IAAIC,mBAAmB;EACvB,IAAIC,KAAK;EAETC,UAAU,CAAC,YAAW;IAClBF,mBAAmB,GAAG,IAAIG,EAAE,CAACC,mBAAmB,CAAC;MAC7CC,aAAa,EAAE,IAAIF,EAAE,CAACG,aAAa,CAAC;IACxC,CAAC,CAAC;IAEFL,KAAK,GAAG,IAAIE,EAAE,CAACI,iBAAiB,CAACC,KAAK,CAAC;MACnCR,mBAAmB,EAAEA,mBAAmB;MACxCS,EAAE,EAAE,KAAK;MACTC,MAAM,EAAE,WAAW;MACnBC,cAAc,EAAE,sBAAsB;MACtCC,gBAAgB,EAAE,sBAAsB;MACxCC,WAAW,EAAE;IACjB,CAAC,EAAE;MACCC,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC,CAAC;EAEFC,EAAE,CAAC,OAAO,EAAE,YAAW;IACnBC,MAAM,CAACf,KAAK,CAACQ,EAAE,CAAC,CAACQ,IAAI,CAAC,KAAK,CAAC;IAC5BD,MAAM,CAACf,KAAK,CAACiB,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAACD,IAAI,CAACjB,mBAAmB,CAAC;IAClEgB,MAAM,CAACf,KAAK,CAACiB,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAC9BC,OAAO,CAAC,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACzDL,MAAM,CAACf,KAAK,CAACiB,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAChCC,OAAO,CAAC,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACxDL,MAAM,CAACf,KAAK,CAACiB,GAAG,CAAC,QAAQ,CAAC,CAAC,CAACD,IAAI,CAAC,WAAW,CAAC;EACjD,CAAC,CAAC;EAEFK,QAAQ,CAAC,WAAW,EAAE,YAAW;IAC7BP,EAAE,CAAC,iCAAiC,EAAE,YAAW;MAC7C,MAAMQ,QAAQ,GAAG;QACbX,gBAAgB,EAAE;MACtB,CAAC;MAEDI,MAAM,CAACf,KAAK,CAACuB,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACN,IAAI,CAAC,IAAI,CAAC;IAChD,CAAC,CAAC;IAEFF,EAAE,CAAC,iCAAiC,EAAE,YAAW;MAC7C,MAAMQ,QAAQ,GAAG;QACbX,gBAAgB,EAAE;MACtB,CAAC;MAEDI,MAAM,CAACf,KAAK,CAACuB,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACN,IAAI,CAAC,KAAK,CAAC;IACjD,CAAC,CAAC;IAEFF,EAAE,CAAC,mBAAmB,EAAE,YAAW;MAC/B,MAAMQ,QAAQ,GAAG;QACbE,IAAI,EAAE,UAAU;QAChBb,gBAAgB,EAAE;MACtB,CAAC;MAEDI,MAAM,CAACf,KAAK,CAACuB,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACN,IAAI,CAAC,IAAI,CAAC;IAChD,CAAC,CAAC;IAEFF,EAAE,CAAC,oCAAoC,EAAE,YAAW;MAChDd,KAAK,CAACyB,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;MAE7B,MAAMH,QAAQ,GAAG;QACbE,IAAI,EAAE,UAAU;QAChBb,gBAAgB,EAAE;MACtB,CAAC;MAEDI,MAAM,CAACf,KAAK,CAACuB,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACN,IAAI,CAAC,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}