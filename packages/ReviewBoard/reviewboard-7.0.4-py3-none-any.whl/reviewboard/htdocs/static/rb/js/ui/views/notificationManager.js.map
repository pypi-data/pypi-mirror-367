{"version":3,"file":"notificationManager.js","names":["RB","NotificationManager","Backbone","View","extend","initialize","_canNotify","_notification","setup","Notification","undefined","UserSession","instance","get","_haveNotificationPermissions","requestPermission","permission","shouldNotify","notify","options","close","console","assert","hasOwnProperty","notification","title","body","icon","iconURL","onclick","_","isFunction","onClick","delay","NOTIFICATION_LIFETIME_MSECS","window","mozNotification","webkitNotification"],"sources":["../../../../../../static/rb/js/ui/views/notificationManager.es6.js"],"sourcesContent":["/**\n * A manager for desktop notifications.\n *\n * Manages the sending of desktop notifications to the user, including\n * checking if certain user conditions are met and deciding which form\n * of notification to send depending on the user's browser.\n *\n * For desktop notifications to be sent to the user, the user must have\n * allowed notifications in their browser and account settings.\n */\nRB.NotificationManager = Backbone.View.extend({\n    /**\n     * Initialize the notification manager.\n     *\n     * Sets the initial values used by the notification manager.\n     *\n     */\n    initialize() {\n        this._canNotify = false;\n        this._notification = null;\n    },\n\n    /**\n     * Set up the notification manager.\n     *\n     * This function will request permission to send desktop notifications\n     * if notifications are allowed in the users preferences, and the\n     * browser supports notifications.\n     *\n     * It must be called before attempting to send notifications.\n     */\n    setup() {\n       const Notification = RB.NotificationManager.Notification;\n\n       this._canNotify = (\n           Notification !== undefined &&\n           RB.UserSession.instance.get('enableDesktopNotifications'));\n\n       if (this._canNotify && !this._haveNotificationPermissions()) {\n           Notification.requestPermission();\n       }\n    },\n\n    /**\n     * Return whether we have permission to send notifications to the user.\n     *\n     * Returns:\n     *     boolean:\n     *     ``true`` if the user has enabled notifications in their browser\n     *     Otherwise, ``false`` will be returned.\n     */\n    _haveNotificationPermissions() {\n        return this._canNotify &&\n               RB.NotificationManager.Notification.permission === 'granted';\n    },\n\n    /**\n     * Return whether or not we should send notifications to the user.\n     *\n     * Returns:\n     *     boolean:\n     *     ``true`` if the user has enabled notifications in their user\n     *     settings, the users current browser supports notifications, and\n     *     the user has granted permission for notifications to the\n     *     browser. Otherwise, ``false`` will be returned.\n     */\n    shouldNotify() {\n        return this._canNotify && this._haveNotificationPermissions();\n    },\n\n    /**\n     * Send a notification with the options specified.\n     *\n     * Args:\n     *     options (object):\n     *         The notification options.\n     *\n     * Option Args:\n     *     title (string):\n     *         The title of the notification.\n     *\n     *     body (string):\n     *         The body of the notification.\n     *\n     *     iconURL (string):\n     *         The URL of the icon to be used in the notification. Icons are\n     *         only supported in some browsers.\n     *\n     *     onClick (function):\n     *         The callback for when a user clicks the notification. The caller\n     *         needn't close the notification with this\n     */\n    notify(options) {\n        if (!this._canNotify) {\n            return;\n        }\n\n        if (this._notification) {\n            this._notification.close();\n        }\n\n        console.assert(\n            options.hasOwnProperty('title'),\n            'RB.NotificationManager.notify requires \"title\" property');\n\n        const notification = new RB.NotificationManager.Notification(\n            options.title,\n            {\n                body: options.body,\n                icon: options.iconURL,\n            });\n\n        this._notification = notification;\n\n        notification.onclick = function() {\n            if (_.isFunction(options.onClick)) {\n                options.onClick();\n            }\n\n            notification.close();\n        };\n\n        _.delay(() => notification.close(),\n                RB.NotificationManager.NOTIFICATION_LIFETIME_MSECS);\n     }\n}, {\n    instance: null,\n\n    NOTIFICATION_LIFETIME_MSECS: 10000,\n    Notification: window.Notification ||\n                  window.mozNotification ||\n                  window.webkitNotification,\n});\n\n\nRB.NotificationManager.instance = new RB.NotificationManager();\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,mBAAmB,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC;EAC1C;AACJ;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAAA,EAAG;IACT,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,aAAa,GAAG,IAAI;EAC7B,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,KAAKA,CAAA,EAAG;IACL,MAAMC,YAAY,GAAGT,EAAE,CAACC,mBAAmB,CAACQ,YAAY;IAExD,IAAI,CAACH,UAAU,GACXG,YAAY,KAAKC,SAAS,IAC1BV,EAAE,CAACW,WAAW,CAACC,QAAQ,CAACC,GAAG,CAAC,4BAA4B,CAAE;IAE9D,IAAI,IAAI,CAACP,UAAU,IAAI,CAAC,IAAI,CAACQ,4BAA4B,CAAC,CAAC,EAAE;MACzDL,YAAY,CAACM,iBAAiB,CAAC,CAAC;IACpC;EACH,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACID,4BAA4BA,CAAA,EAAG;IAC3B,OAAO,IAAI,CAACR,UAAU,IACfN,EAAE,CAACC,mBAAmB,CAACQ,YAAY,CAACO,UAAU,KAAK,SAAS;EACvE,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACX,UAAU,IAAI,IAAI,CAACQ,4BAA4B,CAAC,CAAC;EACjE,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,MAAMA,CAACC,OAAO,EAAE;IACZ,IAAI,CAAC,IAAI,CAACb,UAAU,EAAE;MAClB;IACJ;IAEA,IAAI,IAAI,CAACC,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACa,KAAK,CAAC,CAAC;IAC9B;IAEAC,OAAO,CAACC,MAAM,CACVH,OAAO,CAACI,cAAc,CAAC,OAAO,CAAC,EAC/B,yDAAyD,CAAC;IAE9D,MAAMC,YAAY,GAAG,IAAIxB,EAAE,CAACC,mBAAmB,CAACQ,YAAY,CACxDU,OAAO,CAACM,KAAK,EACb;MACIC,IAAI,EAAEP,OAAO,CAACO,IAAI;MAClBC,IAAI,EAAER,OAAO,CAACS;IAClB,CAAC,CAAC;IAEN,IAAI,CAACrB,aAAa,GAAGiB,YAAY;IAEjCA,YAAY,CAACK,OAAO,GAAG,YAAW;MAC9B,IAAIC,CAAC,CAACC,UAAU,CAACZ,OAAO,CAACa,OAAO,CAAC,EAAE;QAC/Bb,OAAO,CAACa,OAAO,CAAC,CAAC;MACrB;MAEAR,YAAY,CAACJ,KAAK,CAAC,CAAC;IACxB,CAAC;IAEDU,CAAC,CAACG,KAAK,CAAC,MAAMT,YAAY,CAACJ,KAAK,CAAC,CAAC,EAC1BpB,EAAE,CAACC,mBAAmB,CAACiC,2BAA2B,CAAC;EAC9D;AACL,CAAC,EAAE;EACCtB,QAAQ,EAAE,IAAI;EAEdsB,2BAA2B,EAAE,KAAK;EAClCzB,YAAY,EAAE0B,MAAM,CAAC1B,YAAY,IACnB0B,MAAM,CAACC,eAAe,IACtBD,MAAM,CAACE;AACzB,CAAC,CAAC;AAGFrC,EAAE,CAACC,mBAAmB,CAACW,QAAQ,GAAG,IAAIZ,EAAE,CAACC,mBAAmB,CAAC,CAAC","ignoreList":[]}