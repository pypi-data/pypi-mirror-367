[project]
name = "nlp2sql"
version = "0.2.0rc2"
description = "Enterprise-ready Natural Language to SQL converter with multi-provider support. Built for production scale (1000+ tables) with Clean Architecture."
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "luiscarbonel1991", email = "devhighlevel@gmail.com" }
]
keywords = ["sql", "nlp", "ai", "natural-language", "database", "query-generation", "llm", "postgres", "mysql", "enterprise", "multi-provider", "production", "clean-architecture", "schema-filtering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "google-generativeai>=0.3.0",
    "boto3>=1.34.0",
    "azure-identity>=1.15.0",
    "sentence-transformers>=2.5.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "tenacity>=8.2.0",
    "structlog>=24.1.0",
    "httpx>=0.25.0",
    "redis>=5.0.0",
    "asyncpg>=0.29.0",
    "tiktoken>=0.5.0",
    "faiss-cpu>=1.7.4",
    "pandas>=2.0.0",
    "greenlet>=3.2.3",
    "click>=8.0.0",
]

[project.optional-dependencies]
mysql = ["pymysql>=1.1.0", "mysql-connector-python>=8.0.0"]
oracle = ["oracledb>=2.0.0"]
mssql = ["pymssql>=2.2.0"]
anthropic = ["anthropic>=0.18.0"]
gemini = ["google-generativeai>=0.3.0"]
all-providers = ["anthropic>=0.18.0", "google-generativeai>=0.3.0"]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
"Homepage" = "https://github.com/luiscarbonel1991/nlp2sql"
"Bug Tracker" = "https://github.com/luiscarbonel1991/nlp2sql/issues"
"Documentation" = "https://nlp2sql.readthedocs.io"

[project.scripts]
nlp2sql = "nlp2sql.cli:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "ipython>=8.0.0",
    "notebook>=7.0.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/nlp2sql"]

[tool.ruff]
target-version = "py39"
line-length = 120
indent-width = 4
exclude = [
    ".venv_test",
    ".venv",
    "__pycache__",
    "*.egg-info",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "*.iml",
    "*.md",
    "examples/"
]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "C90", "UP", "ANN", "S", "A", "C4", "RET", "SIM", "PLR", "PLW", "RUF"]
ignore = ["ANN101", "ANN102", "S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src/nlp2sql"]
omit = ["*/tests/*", "*/benchmarks/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

