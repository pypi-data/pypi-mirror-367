name: Publish Python Package to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to publish (e.g., v0.2.0, v0.3.0)'
        required: false
        default: 'latest'
      version:
        description: 'Package version to publish (e.g., 0.2.0, 0.3.0)'
        required: false
        default: 'auto-detect'
      confirm_production:
        description: 'Type "PRODUCTION" to confirm publishing to live PyPI'
        required: true
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: pypi # This should match the environment name you provided in GitHub

    permissions:
      id-token: write # This is required for OpenID Connect
      contents: read

    steps:
    - name: Validate production confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_production }}" != "PRODUCTION" ]; then
          echo "❌ Production confirmation required. Please type 'PRODUCTION' to confirm."
          exit 1
        fi
        echo "✅ Production deployment confirmed"
    
    - name: Checkout specific tag or latest
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag != 'latest' && github.event.inputs.tag || github.ref }}
        fetch-depth: 0
    
    - name: Display selected tag/version info
      run: |
        echo "🏷️ Selected tag: ${{ github.event.inputs.tag || 'latest' }}"
        echo "📦 Target version: ${{ github.event.inputs.version || 'auto-detect' }}"
        echo "🔍 Current commit: $(git rev-parse HEAD)"
        echo "🌟 Current tag: $(git describe --tags --exact-match 2>/dev/null || echo 'No tag')"
        echo "🚀 Publishing to: PRODUCTION PyPI"

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: python -m pip install uv

    - name: Install project dependencies with uv
      run: |
        # Install main dependencies first
        uv pip install --system .
        # Then install dev dependencies
        uv pip install --system ".[dev]"
        # Verify structlog is installed
        python -c "import structlog; print(f'structlog version: {structlog.__version__}')"

    - name: Install build and twine
      run: python -m pip install build twine

    - name: List installed packages (debug)
      run: pip list | grep -E "(structlog|pytest)"

    - name: Run tests
      env:
        PYTHONPATH: src
      run: |
        pytest

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://upload.pypi.org/legacy/