Metadata-Version: 2.4
Name: AIUnitTest
Version: 0.0.1
Summary: CLI to generate and update Python unit tests automatically using coverage and AI
Author: Ofido
Project-URL: Homepage, https://github.com/ofido/AIUnitTest
Project-URL: Bug Tracker, https://github.com/ofido/AIUnitTest/issues
Keywords: testing,coverage,openai,automation
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Utilities
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: openai
Requires-Dist: coverage
Requires-Dist: typer
Requires-Dist: tomli
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: flake8-bugbear; extra == "dev"
Requires-Dist: flake8-annotations; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pymarkdown; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Dynamic: license-file

# AIUnitTest

AIUnitTest is a command-line tool that reads your `pyproject.toml` and
test coverage data (`.coverage`) to generate and update missing Python
unit tests using AI.

## Features

- **Coverage Analysis**: Uses Coverage.py API to identify untested lines.
- **AI-Powered Test Generation**: Calls OpenAI GPT to create or enhance test cases.
- **Config-Driven**: Automatically picks up `coverage.run.source` and `pytest.ini_options.testpaths` from `pyproject.toml`.
- **Auto Mode**: `--auto` flag sets source and tests directories without manual arguments.
- **Async & Parallel**: Speeds up OpenAI requests for large codebases.

## How to Run

1. **Install the project:**

   ```bash
   pip install .
   ```

2. **Run the script:**

   ```bash
   ai-unit-test --auto
   ```
