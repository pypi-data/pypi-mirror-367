[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "listmonk-mcp"
version = "0.0.1"
description = "MCP server for Listmonk newsletter management"
authors = [
    { name = "Rohan Verma", email = "hello@rohanverma.net" }
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"

dependencies = [
    "mcp>=1.2.0",
    "httpx>=0.24.0",
    "pydantic[email]>=2.0.0",
    "pydantic-settings>=2.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.21.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
]
docs = [
    "mkdocs-material>=9.5.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
]

[project.scripts]
listmonk-mcp = "listmonk_mcp.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/listmonk_mcp"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.lint.isort]
known-first-party = ["listmonk_mcp"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.black]
target-version = ['py311']
line-length = 88