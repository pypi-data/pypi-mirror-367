import{j as Ae,m as Ue,u as Pe,k as Be,r as E,s as Se,l as Te,o as Re,n as M,p as I,w as d,q as r,t as n,v as Ee,x as y,y as Oe,z as f,A as q,C as h,D as Ve,E as $e,G as _,H as w,J as Fe,K as Me,N as G,O as Ie,P as De,Q as J,R as Le,_ as H,T as Ne,X as je,Y as K,Z as ze,$ as We,a0 as Ze,a1 as qe,a2 as Ge,a3 as Je,a4 as He,a5 as Q,a6 as Ke,a7 as Qe}from"./index-Bxb4Foiz.js";import{loader as Xe,VueMonacoEditor as Ye}from"@guolao/vue-monaco-editor";import*as et from"monaco-editor";import tt from"monaco-editor/esm/vs/editor/editor.worker?worker";import ot from"monaco-editor/esm/vs/language/json/json.worker?worker";import nt from"monaco-editor/esm/vs/language/css/css.worker?worker";import at from"monaco-editor/esm/vs/language/html/html.worker?worker";import rt from"monaco-editor/esm/vs/language/typescript/ts.worker?worker";import{newPyodideWorker as it}from"./frontend/tools/pyodide-worker-api.ts";import{version as lt}from"pyodide";self.MonacoEnvironment={getWorker(e,t){return t==="json"?new ot:t==="css"||t==="scss"||t==="less"?new nt:t==="html"||t==="handlebars"||t==="razor"?new at:t==="typescript"||t==="javascript"?new rt:new tt}};function st(){Xe.config({monaco:et})}const ae="3.7.7",dt=ae,P=typeof Buffer=="function",X=typeof TextDecoder=="function"?new TextDecoder:void 0,Y=typeof TextEncoder=="function"?new TextEncoder:void 0,ut="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",S=Array.prototype.slice.call(ut),O=(e=>{let t={};return e.forEach((s,p)=>t[s]=p),t})(S),pt=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,u=String.fromCharCode.bind(String),ee=typeof Uint8Array.from=="function"?Uint8Array.from.bind(Uint8Array):e=>new Uint8Array(Array.prototype.slice.call(e,0)),re=e=>e.replace(/=/g,"").replace(/[+\/]/g,t=>t=="+"?"-":"_"),ie=e=>e.replace(/[^A-Za-z0-9\+\/]/g,""),le=e=>{let t,s,p,c,i="";const B=e.length%3;for(let C=0;C<e.length;){if((s=e.charCodeAt(C++))>255||(p=e.charCodeAt(C++))>255||(c=e.charCodeAt(C++))>255)throw new TypeError("invalid character found");t=s<<16|p<<8|c,i+=S[t>>18&63]+S[t>>12&63]+S[t>>6&63]+S[t&63]}return B?i.slice(0,B-3)+"===".substring(B):i},N=typeof btoa=="function"?e=>btoa(e):P?e=>Buffer.from(e,"binary").toString("base64"):le,D=P?e=>Buffer.from(e).toString("base64"):e=>{let s=[];for(let p=0,c=e.length;p<c;p+=4096)s.push(u.apply(null,e.subarray(p,p+4096)));return N(s.join(""))},V=(e,t=!1)=>t?re(D(e)):D(e),ct=e=>{if(e.length<2){var t=e.charCodeAt(0);return t<128?e:t<2048?u(192|t>>>6)+u(128|t&63):u(224|t>>>12&15)+u(128|t>>>6&63)+u(128|t&63)}else{var t=65536+(e.charCodeAt(0)-55296)*1024+(e.charCodeAt(1)-56320);return u(240|t>>>18&7)+u(128|t>>>12&63)+u(128|t>>>6&63)+u(128|t&63)}},ft=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,se=e=>e.replace(ft,ct),te=P?e=>Buffer.from(e,"utf8").toString("base64"):Y?e=>D(Y.encode(e)):e=>N(se(e)),U=(e,t=!1)=>t?re(te(e)):te(e),oe=e=>U(e,!0),mt=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,yt=e=>{switch(e.length){case 4:var t=(7&e.charCodeAt(0))<<18|(63&e.charCodeAt(1))<<12|(63&e.charCodeAt(2))<<6|63&e.charCodeAt(3),s=t-65536;return u((s>>>10)+55296)+u((s&1023)+56320);case 3:return u((15&e.charCodeAt(0))<<12|(63&e.charCodeAt(1))<<6|63&e.charCodeAt(2));default:return u((31&e.charCodeAt(0))<<6|63&e.charCodeAt(1))}},de=e=>e.replace(mt,yt),ue=e=>{if(e=e.replace(/\s+/g,""),!pt.test(e))throw new TypeError("malformed base64.");e+="==".slice(2-(e.length&3));let t,s="",p,c;for(let i=0;i<e.length;)t=O[e.charAt(i++)]<<18|O[e.charAt(i++)]<<12|(p=O[e.charAt(i++)])<<6|(c=O[e.charAt(i++)]),s+=p===64?u(t>>16&255):c===64?u(t>>16&255,t>>8&255):u(t>>16&255,t>>8&255,t&255);return s},j=typeof atob=="function"?e=>atob(ie(e)):P?e=>Buffer.from(e,"base64").toString("binary"):ue,pe=P?e=>ee(Buffer.from(e,"base64")):e=>ee(j(e).split("").map(t=>t.charCodeAt(0))),ce=e=>pe(fe(e)),ht=P?e=>Buffer.from(e,"base64").toString("utf8"):X?e=>X.decode(pe(e)):e=>de(j(e)),fe=e=>ie(e.replace(/[-_]/g,t=>t=="-"?"+":"/")),L=e=>ht(fe(e)),vt=e=>{if(typeof e!="string")return!1;const t=e.replace(/\s+/g,"").replace(/={0,2}$/,"");return!/[^\s0-9a-zA-Z\+/]/.test(t)||!/[^\s0-9a-zA-Z\-_]/.test(t)},me=e=>({value:e,enumerable:!1,writable:!0,configurable:!0}),ye=function(){const e=(t,s)=>Object.defineProperty(String.prototype,t,me(s));e("fromBase64",function(){return L(this)}),e("toBase64",function(t){return U(this,t)}),e("toBase64URI",function(){return U(this,!0)}),e("toBase64URL",function(){return U(this,!0)}),e("toUint8Array",function(){return ce(this)})},he=function(){const e=(t,s)=>Object.defineProperty(Uint8Array.prototype,t,me(s));e("toBase64",function(t){return V(this,t)}),e("toBase64URI",function(){return V(this,!0)}),e("toBase64URL",function(){return V(this,!0)})},gt=()=>{ye(),he()},xt={version:ae,VERSION:dt,atob:j,atobPolyfill:ue,btoa:N,btoaPolyfill:le,fromBase64:L,toBase64:U,encode:U,encodeURI:oe,encodeURL:oe,utob:se,btou:de,decode:L,isValid:vt,fromUint8Array:V,toUint8Array:ce,extendString:ye,extendUint8Array:he,extendBuiltins:gt},bt=`import micropip

# Prioritize the OCP.wasm package repository for finding the ported dependencies.
micropip.set_index_urls(["https://yeicor.github.io/OCP.wasm", "https://pypi.org/simple"])

# For build123d < 0.10.0, we need to install the mock the py-lib3mf package (before the main install).
await micropip.install("lib3mf")
micropip.add_mock_package("py-lib3mf", "2.4.1", modules={"py_lib3mf": 'from lib3mf import *'})

# Install the yacv_server package, which is the main server for the OCP.wasm playground; and also preinstalls build123d.
await micropip.install("yacv_server", pre=True)

# Preimport the yacv_server package to ensure it is available in the global scope, and mock the ocp_vscode package.
from yacv_server import *

micropip.add_mock_package("ocp-vscode", "2.8.9", modules={"ocp_vscode": 'from yacv_server import *'})
show_object = show

# Preinstall the font-fetcher package and install its hook to automatically download any requested font.
await micropip.install("font-fetcher", pre=True)

from font_fetcher.ocp import install_ocp_font_hook

install_ocp_font_hook()
`,_t={style:{display:"inline-flex","margin-right":"16px"}},wt={style:{"padding-left":"12px",width:"48px"}},kt={style:{"padding-right":"12px",width:"48px"}},Ct={class:"playground-container"},At={class:"playground-console"},Ut={style:{display:"flex","align-items":"center","justify-content":"space-between",margin:"0"}},ne="yacv_server://model/",Pt=Ae({__name:"PlaygroundDialogContent",props:{modelValue:{required:!0},modelModifiers:{}},emits:Ue(["close","updateModel"],["update:modelValue"]),setup(e,{emit:t}){Pe(a=>({"41a08b23":v.value}));const s=Be(e,"modelValue"),p=t;st();const c=E("");function i(a){c.value+=a;let o=1e4;c.value.length>o&&(c.value=c.value.slice(-o)),console.log(a),Ke(()=>{const l=document.querySelector(".playground-console");l&&(l.scrollTop=l.scrollHeight)})}const B={automaticLayout:!0,formatOnType:!0,formatOnPaste:!0},C=window.matchMedia("(prefers-color-scheme: dark)").matches?"vs-dark":"vs",ve=Se(),ge=a=>ve.value=a,v=E(.9);let x=null;const b=E(!0);async function z(a,o=void 0){b.value=!0,v.value==0&&!a&&(v.value=.9),x===null?(i(`Creating new Pyodide worker...
`),x=it(Object.assign({indexURL:`https://cdn.jsdelivr.net/pyodide/v${lt}/full/`,packages:["micropip","sqlite3"]},o?{_loadSnapshot:o}:{}))):i(`Reusing existing Pyodide instance...
`),i(`Preloading packages...
`),await x.asyncRun(bt,i,i),b.value=!1,i(`Pyodide worker ready.
`)}async function $(){if(x===null){i(`Pyodide worker is not initialized. Please wait...
`);return}if(b.value){i(`Pyodide is already running. Please wait...
`);return}i(`Running code...
`);try{b.value=!0,await x.asyncRun(s.value.code,i,a=>{if(a.startsWith(ne)){const o=a.slice(ne.length);xe(o)}else i(a)})}catch(a){i(`Error running code: ${a}
`)}finally{i(`Code execution finished.
`),b.value=!1}}function xe(a){i(`Model data detected... ${a.length}B
`);let o=0,l=0;for(;o<a.length&&(a[o]==="{"?l++:a[o]==="}"&&l--,l!==0);o++);if(l!==0)throw`Error: Invalid model data received: ${a}
`;const A=a.slice(0,o+1);let k=JSON.parse(A);const g=new qe(k.name,"",k.hash,k.is_remove);if(i(`Model metadata: ${JSON.stringify(g)}
`),g.isRemove)delete T[g.name];else{const R=xt.toUint8Array(a.slice(o+1));console.assert(R.slice(0,4).toString()=="103,108,84,70","Invalid GLTF binary data received: "+R.slice(0,4).toString()),T[g.name]=R;const Ce=new Blob([R],{type:"model/gltf-binary"});g.url=URL.createObjectURL(Ce)}let m=new Ge([g],()=>{});p("updateModel",m)}function be(a=void 0){x&&(x.terminate(),x=null),c.value="",z(!1,a)}function W(a,o){const l=window.location,A=new URLSearchParams(l.search);for(const m of o)A.delete(m);const k=new URLSearchParams(l.hash.slice(1));for(const m of o)k.delete(m);for(const m in a)k.append(m,a[m]);const g=`${l.origin}${l.pathname}?${A}#${k}`;if(i(`Share link ready: ${g}
`),navigator.clipboard?.writeText===void 0){i(`Clipboard API not available. Please copy the link manually.
`);return}else navigator.clipboard.writeText(g).then(()=>i(`Link copied to clipboard!
`)).catch(m=>i(`Failed to copy link: ${m}
`))}function Z(){W({pg_code:Je(He(s.value.code,{level:9}))},["pg_code"])}const T={};async function _e(){try{i(`Uploading files...
`);const a=new Blob([s.value.code],{type:"text/x-python"}),o={pg_code:await Q("code.py",new Uint8Array(await a.arrayBuffer()))};for(const l in T){const A=T[l];o.preload=await Q(l+".glb",A)}return W(o,["pg_code"])}catch(a){return i(`Error uploading/sharing files: ${a}. Falling back to private share link.
`),Z()}}function we(){throw new Error("Not implemented yet!")}function ke(){throw new Error("Not implemented yet!")}(async()=>{const a=await Te;s.value.firstTime&&(v.value=a.pg_opacity_loading),await z(!0),s.value.firstTime&&(await $(),v.value=a.pg_opacity_loaded,s.value.firstTime=!1)})();const F=E(null);return Re(()=>{F.value&&F.value.addEventListener("keydown",a=>{a instanceof KeyboardEvent&&(a.key==="F10"?(a.preventDefault(),$()):a.key==="Escape"&&p("close"))})}),(a,o)=>(I(),M(n(Ze),{class:"popup-card",style:K(v.value==0?"position: absolute; top: calc(-50vh + 24px); width: calc(100vw - 64px);":"")},{default:d(()=>[r(n(Ee),{class:"popup"},{default:d(()=>[r(n(Oe),{style:{flex:"0 1 auto"}},{default:d(()=>o[10]||(o[10]=[f("Playground",-1)])),_:1,__:[10]}),r(n(q)),y("span",_t,[r(n(h),{path:n(Ve),type:"mdi",style:{height:"32px"}},null,8,["path"]),r(n($e),{modelValue:v.value,"onUpdate:modelValue":o[0]||(o[0]=l=>v.value=l),max:1,min:0,step:.1,style:{width:"100px",height:"32px"}},null,8,["modelValue"]),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[11]||(o[11]=[f("Opacity of the editor (0 = hidden, 1 = fully visible)",-1)])),_:1,__:[11]})]),y("span",wt,[r(n(w),{icon:"",disabled:"",onClick:o[1]||(o[1]=l=>we())},{default:d(()=>[r(n(h),{path:n(Fe),type:"mdi"},null,8,["path"])]),_:1}),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[12]||(o[12]=[f("Save current state to a snapshot for fast startup (WIP)",-1)])),_:1,__:[12]})]),y("span",kt,[r(n(w),{icon:"",disabled:"",onClick:o[2]||(o[2]=l=>ke())},{default:d(()=>[r(n(h),{path:n(Me),type:"mdi"},null,8,["path"])]),_:1}),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[13]||(o[13]=[f("Load snapshot for fast startup (WIP)",-1)])),_:1,__:[13]})]),r(n(w),{icon:"",onClick:o[3]||(o[3]=l=>Z()),style:{"padding-left":"12px"}},{default:d(()=>[r(n(h),{path:n(G),type:"mdi"},null,8,["path"]),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[14]||(o[14]=[f("Share link that automatically runs the code.",-1),y("br",null,null,-1),f("Only people with the link can see the code. ",-1)])),_:1,__:[14]})]),_:1}),r(n(w),{icon:"",onClick:o[4]||(o[4]=l=>_e()),style:{"padding-right":"12px"}},{default:d(()=>[r(n(h),{path:n(G),type:"mdi",style:{position:"absolute",scale:"75%",top:"6px"}},null,8,["path"]),r(n(h),{path:n(Ie),type:"mdi",style:{position:"absolute",scale:"75%",bottom:"6px"}},null,8,["path"]),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[15]||(o[15]=[f("Uploads all models and code and then shares a link to them.",-1),y("br",null,null,-1),f("Useful to view the models while the playground loads, but uses third-party storage. ",-1)])),_:1,__:[15]})]),_:1}),r(n(w),{icon:"",onClick:o[5]||(o[5]=l=>be()),style:{"padding-left":"12px"}},{default:d(()=>[r(n(h),{path:n(De),type:"mdi"},null,8,["path"]),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[16]||(o[16]=[f("Reset Pyodide worker (this forgets all previous state and will take a little while) ",-1)])),_:1,__:[16]})]),_:1}),r(n(w),{icon:"",onClick:o[6]||(o[6]=l=>$()),disabled:b.value,style:{"padding-right":"12px"}},{default:d(()=>[r(n(h),{path:n(Le),type:"mdi"},null,8,["path"]),b.value?(I(),M(H,{key:0,style:{position:"absolute",top:"-16%",left:"-28%"}})):J("",!0),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[17]||(o[17]=[f("Run code",-1)])),_:1,__:[17]})]),_:1},8,["disabled"]),r(n(w),{icon:"",onClick:o[7]||(o[7]=l=>p("close"))},{default:d(()=>[r(n(h),{path:n(Ne),type:"mdi"},null,8,["path"]),r(n(_),{activator:"parent",location:"bottom"},{default:d(()=>o[18]||(o[18]=[f("Close (Pyodide remains loaded)",-1)])),_:1,__:[18]})]),_:1})]),_:1}),r(n(je),{class:"popup-card-text",style:K(v.value==0?"display: none":"")},{default:d(()=>[y("div",Ct,[y("div",{class:"playground-editor",ref_key:"editorRef",ref:F},[r(n(Ye),{value:s.value.code,"onUpdate:value":o[8]||(o[8]=l=>s.value.code=l),theme:n(C),options:B,language:"python",onMount:ge},null,8,["value","theme"])],512),y("div",At,[y("h3",Ut,[o[19]||(o[19]=f(" Console Output ",-1)),r(n(q)),r(n(w),{onClick:o[9]||(o[9]=l=>c.value="")},{default:d(()=>[r(n(h),{path:n(ze),type:"mdi",class:"h-"},null,8,["path"])]),_:1})]),y("pre",null,We(c.value),1),b.value?(I(),M(H,{key:0})):J("",!0)])])]),_:1},8,["style"])]),_:1},8,["style"]))}}),Mt=Qe(Pt,[["__scopeId","data-v-02ae3bda"]]);export{Mt as default};
//# sourceMappingURL=PlaygroundDialogContent-BD_DqtPM.js.map
