# serializer version: 1
# name: TestLinearPairwiseSequenceMetric.test_collect_as_dict_equivalence_with_snapshot[event]
  dict({
    tuple(
      1,
      1,
    ): np.float64(0.36363636363636365),
    tuple(
      1,
      2,
    ): np.float64(1.0),
    tuple(
      1,
      3,
    ): np.float64(0.9090909090909091),
    tuple(
      1,
      4,
    ): np.float64(1.0),
    tuple(
      1,
      5,
    ): np.float64(1.0),
    tuple(
      1,
      6,
    ): np.float64(1.0),
    tuple(
      1,
      7,
    ): np.float64(1.0),
    tuple(
      1,
      8,
    ): np.float64(1.0),
    tuple(
      1,
      9,
    ): np.float64(1.0),
    tuple(
      1,
      10,
    ): np.float64(1.0),
    tuple(
      2,
      1,
    ): np.float64(1.0),
    tuple(
      2,
      2,
    ): np.float64(0.125),
    tuple(
      2,
      3,
    ): np.float64(1.0),
    tuple(
      2,
      4,
    ): np.float64(0.9090909090909091),
    tuple(
      2,
      5,
    ): np.float64(0.9375),
    tuple(
      2,
      6,
    ): np.float64(0.9230769230769231),
    tuple(
      2,
      7,
    ): np.float64(0.8571428571428571),
    tuple(
      2,
      8,
    ): np.float64(1.0),
    tuple(
      2,
      9,
    ): np.float64(1.0),
    tuple(
      2,
      10,
    ): np.float64(1.0),
    tuple(
      3,
      1,
    ): np.float64(0.9090909090909091),
    tuple(
      3,
      2,
    ): np.float64(1.0),
    tuple(
      3,
      3,
    ): np.float64(0.15384615384615385),
    tuple(
      3,
      4,
    ): np.float64(0.9090909090909091),
    tuple(
      3,
      5,
    ): np.float64(1.0),
    tuple(
      3,
      6,
    ): np.float64(1.0),
    tuple(
      3,
      7,
    ): np.float64(0.8571428571428571),
    tuple(
      3,
      8,
    ): np.float64(1.0),
    tuple(
      3,
      9,
    ): np.float64(1.0),
    tuple(
      3,
      10,
    ): np.float64(0.9090909090909091),
    tuple(
      4,
      1,
    ): np.float64(1.0),
    tuple(
      4,
      2,
    ): np.float64(0.9090909090909091),
    tuple(
      4,
      3,
    ): np.float64(0.9090909090909091),
    tuple(
      4,
      4,
    ): np.float64(0.0),
    tuple(
      4,
      5,
    ): np.float64(0.9090909090909091),
    tuple(
      4,
      6,
    ): np.float64(1.0),
    tuple(
      4,
      7,
    ): np.float64(1.0),
    tuple(
      4,
      8,
    ): np.float64(1.0),
    tuple(
      4,
      9,
    ): np.float64(1.0),
    tuple(
      4,
      10,
    ): np.float64(1.0),
    tuple(
      5,
      1,
    ): np.float64(1.0),
    tuple(
      5,
      2,
    ): np.float64(0.9375),
    tuple(
      5,
      3,
    ): np.float64(1.0),
    tuple(
      5,
      4,
    ): np.float64(0.9090909090909091),
    tuple(
      5,
      5,
    ): np.float64(0.2777777777777778),
    tuple(
      5,
      6,
    ): np.float64(1.0),
    tuple(
      5,
      7,
    ): np.float64(0.8571428571428571),
    tuple(
      5,
      8,
    ): np.float64(1.0),
    tuple(
      5,
      9,
    ): np.float64(1.0),
    tuple(
      5,
      10,
    ): np.float64(1.0),
    tuple(
      6,
      1,
    ): np.float64(1.0),
    tuple(
      6,
      2,
    ): np.float64(0.9230769230769231),
    tuple(
      6,
      3,
    ): np.float64(1.0),
    tuple(
      6,
      4,
    ): np.float64(1.0),
    tuple(
      6,
      5,
    ): np.float64(1.0),
    tuple(
      6,
      6,
    ): np.float64(0.15384615384615385),
    tuple(
      6,
      7,
    ): np.float64(1.0),
    tuple(
      6,
      8,
    ): np.float64(1.0),
    tuple(
      6,
      9,
    ): np.float64(0.8571428571428571),
    tuple(
      6,
      10,
    ): np.float64(1.0),
    tuple(
      7,
      1,
    ): np.float64(1.0),
    tuple(
      7,
      2,
    ): np.float64(0.8571428571428571),
    tuple(
      7,
      3,
    ): np.float64(0.8571428571428571),
    tuple(
      7,
      4,
    ): np.float64(1.0),
    tuple(
      7,
      5,
    ): np.float64(0.8571428571428571),
    tuple(
      7,
      6,
    ): np.float64(1.0),
    tuple(
      7,
      7,
    ): np.float64(0.14285714285714285),
    tuple(
      7,
      8,
    ): np.float64(1.0),
    tuple(
      7,
      9,
    ): np.float64(1.0),
    tuple(
      7,
      10,
    ): np.float64(1.0),
    tuple(
      8,
      1,
    ): np.float64(1.0),
    tuple(
      8,
      2,
    ): np.float64(1.0),
    tuple(
      8,
      3,
    ): np.float64(1.0),
    tuple(
      8,
      4,
    ): np.float64(1.0),
    tuple(
      8,
      5,
    ): np.float64(1.0),
    tuple(
      8,
      6,
    ): np.float64(1.0),
    tuple(
      8,
      7,
    ): np.float64(1.0),
    tuple(
      8,
      8,
    ): np.float64(0.5),
    tuple(
      8,
      9,
    ): np.float64(0.8571428571428571),
    tuple(
      8,
      10,
    ): np.float64(1.0),
    tuple(
      9,
      1,
    ): np.float64(1.0),
    tuple(
      9,
      2,
    ): np.float64(1.0),
    tuple(
      9,
      3,
    ): np.float64(1.0),
    tuple(
      9,
      4,
    ): np.float64(1.0),
    tuple(
      9,
      5,
    ): np.float64(1.0),
    tuple(
      9,
      6,
    ): np.float64(0.8571428571428571),
    tuple(
      9,
      7,
    ): np.float64(1.0),
    tuple(
      9,
      8,
    ): np.float64(0.8571428571428571),
    tuple(
      9,
      9,
    ): np.float64(0.0),
    tuple(
      9,
      10,
    ): np.float64(0.8571428571428571),
    tuple(
      10,
      1,
    ): np.float64(1.0),
    tuple(
      10,
      2,
    ): np.float64(1.0),
    tuple(
      10,
      3,
    ): np.float64(0.9090909090909091),
    tuple(
      10,
      4,
    ): np.float64(1.0),
    tuple(
      10,
      5,
    ): np.float64(1.0),
    tuple(
      10,
      6,
    ): np.float64(1.0),
    tuple(
      10,
      7,
    ): np.float64(1.0),
    tuple(
      10,
      8,
    ): np.float64(1.0),
    tuple(
      10,
      9,
    ): np.float64(0.8571428571428571),
    tuple(
      10,
      10,
    ): np.float64(0.0),
  })
# ---
# name: TestLinearPairwiseSequenceMetric.test_collect_as_dict_equivalence_with_snapshot[interval]
  dict({
    tuple(
      1,
      1,
    ): np.float64(0.2),
    tuple(
      1,
      2,
    ): np.float64(1.0),
    tuple(
      1,
      3,
    ): np.float64(1.0),
    tuple(
      1,
      4,
    ): np.float64(1.0),
    tuple(
      1,
      5,
    ): np.float64(1.0),
    tuple(
      1,
      6,
    ): np.float64(1.0),
    tuple(
      1,
      7,
    ): np.float64(1.0),
    tuple(
      1,
      8,
    ): np.float64(1.0),
    tuple(
      1,
      9,
    ): np.float64(1.0),
    tuple(
      1,
      10,
    ): np.float64(1.0),
    tuple(
      2,
      1,
    ): np.float64(1.0),
    tuple(
      2,
      2,
    ): np.float64(0.16666666666666666),
    tuple(
      2,
      3,
    ): np.float64(1.0),
    tuple(
      2,
      4,
    ): np.float64(1.0),
    tuple(
      2,
      5,
    ): np.float64(1.0),
    tuple(
      2,
      6,
    ): np.float64(1.0),
    tuple(
      2,
      7,
    ): np.float64(1.0),
    tuple(
      2,
      8,
    ): np.float64(1.0),
    tuple(
      2,
      9,
    ): np.float64(0.75),
    tuple(
      2,
      10,
    ): np.float64(1.0),
    tuple(
      3,
      1,
    ): np.float64(1.0),
    tuple(
      3,
      2,
    ): np.float64(1.0),
    tuple(
      3,
      3,
    ): np.float64(0.0),
    tuple(
      3,
      4,
    ): np.float64(1.0),
    tuple(
      3,
      5,
    ): np.float64(1.0),
    tuple(
      3,
      6,
    ): np.float64(1.0),
    tuple(
      3,
      7,
    ): np.float64(1.0),
    tuple(
      3,
      8,
    ): np.float64(1.0),
    tuple(
      3,
      9,
    ): np.float64(1.0),
    tuple(
      3,
      10,
    ): np.float64(1.0),
    tuple(
      4,
      1,
    ): np.float64(1.0),
    tuple(
      4,
      2,
    ): np.float64(1.0),
    tuple(
      4,
      3,
    ): np.float64(1.0),
    tuple(
      4,
      4,
    ): np.float64(0.0),
    tuple(
      4,
      5,
    ): np.float64(1.0),
    tuple(
      4,
      6,
    ): np.float64(1.0),
    tuple(
      4,
      7,
    ): np.float64(1.0),
    tuple(
      4,
      8,
    ): np.float64(0.8333333333333334),
    tuple(
      4,
      9,
    ): np.float64(1.0),
    tuple(
      4,
      10,
    ): np.float64(1.0),
    tuple(
      5,
      1,
    ): np.float64(1.0),
    tuple(
      5,
      2,
    ): np.float64(1.0),
    tuple(
      5,
      3,
    ): np.float64(1.0),
    tuple(
      5,
      4,
    ): np.float64(1.0),
    tuple(
      5,
      5,
    ): np.float64(0.16666666666666666),
    tuple(
      5,
      6,
    ): np.float64(0.8333333333333334),
    tuple(
      5,
      7,
    ): np.float64(1.0),
    tuple(
      5,
      8,
    ): np.float64(1.0),
    tuple(
      5,
      9,
    ): np.float64(1.0),
    tuple(
      5,
      10,
    ): np.float64(1.0),
    tuple(
      6,
      1,
    ): np.float64(1.0),
    tuple(
      6,
      2,
    ): np.float64(1.0),
    tuple(
      6,
      3,
    ): np.float64(1.0),
    tuple(
      6,
      4,
    ): np.float64(1.0),
    tuple(
      6,
      5,
    ): np.float64(0.8333333333333334),
    tuple(
      6,
      6,
    ): np.float64(0.0),
    tuple(
      6,
      7,
    ): np.float64(1.0),
    tuple(
      6,
      8,
    ): np.float64(1.0),
    tuple(
      6,
      9,
    ): np.float64(1.0),
    tuple(
      6,
      10,
    ): np.float64(1.0),
    tuple(
      7,
      1,
    ): np.float64(1.0),
    tuple(
      7,
      2,
    ): np.float64(1.0),
    tuple(
      7,
      3,
    ): np.float64(1.0),
    tuple(
      7,
      4,
    ): np.float64(1.0),
    tuple(
      7,
      5,
    ): np.float64(1.0),
    tuple(
      7,
      6,
    ): np.float64(1.0),
    tuple(
      7,
      7,
    ): np.float64(0.3333333333333333),
    tuple(
      7,
      8,
    ): np.float64(1.0),
    tuple(
      7,
      9,
    ): np.float64(1.0),
    tuple(
      7,
      10,
    ): np.float64(0.6666666666666666),
    tuple(
      8,
      1,
    ): np.float64(1.0),
    tuple(
      8,
      2,
    ): np.float64(1.0),
    tuple(
      8,
      3,
    ): np.float64(1.0),
    tuple(
      8,
      4,
    ): np.float64(0.8333333333333334),
    tuple(
      8,
      5,
    ): np.float64(1.0),
    tuple(
      8,
      6,
    ): np.float64(1.0),
    tuple(
      8,
      7,
    ): np.float64(1.0),
    tuple(
      8,
      8,
    ): np.float64(0.14285714285714285),
    tuple(
      8,
      9,
    ): np.float64(1.0),
    tuple(
      8,
      10,
    ): np.float64(1.0),
    tuple(
      9,
      1,
    ): np.float64(1.0),
    tuple(
      9,
      2,
    ): np.float64(0.75),
    tuple(
      9,
      3,
    ): np.float64(1.0),
    tuple(
      9,
      4,
    ): np.float64(1.0),
    tuple(
      9,
      5,
    ): np.float64(1.0),
    tuple(
      9,
      6,
    ): np.float64(1.0),
    tuple(
      9,
      7,
    ): np.float64(1.0),
    tuple(
      9,
      8,
    ): np.float64(1.0),
    tuple(
      9,
      9,
    ): np.float64(0.0),
    tuple(
      9,
      10,
    ): np.float64(1.0),
    tuple(
      10,
      1,
    ): np.float64(1.0),
    tuple(
      10,
      2,
    ): np.float64(1.0),
    tuple(
      10,
      3,
    ): np.float64(1.0),
    tuple(
      10,
      4,
    ): np.float64(1.0),
    tuple(
      10,
      5,
    ): np.float64(1.0),
    tuple(
      10,
      6,
    ): np.float64(1.0),
    tuple(
      10,
      7,
    ): np.float64(0.6666666666666666),
    tuple(
      10,
      8,
    ): np.float64(1.0),
    tuple(
      10,
      9,
    ): np.float64(1.0),
    tuple(
      10,
      10,
    ): np.float64(0.0),
  })
# ---
# name: TestLinearPairwiseSequenceMetric.test_collect_as_dict_equivalence_with_snapshot[state]
  dict({
    tuple(
      1,
      1,
    ): np.float64(0.5),
    tuple(
      1,
      2,
    ): np.float64(1.0),
    tuple(
      1,
      3,
    ): np.float64(1.0),
    tuple(
      1,
      4,
    ): np.float64(1.0),
    tuple(
      1,
      5,
    ): np.float64(1.0),
    tuple(
      1,
      6,
    ): np.float64(1.0),
    tuple(
      1,
      7,
    ): np.float64(1.0),
    tuple(
      1,
      8,
    ): np.float64(1.0),
    tuple(
      1,
      9,
    ): np.float64(1.0),
    tuple(
      1,
      10,
    ): np.float64(0.5),
    tuple(
      2,
      1,
    ): np.float64(1.0),
    tuple(
      2,
      2,
    ): np.float64(0.0),
    tuple(
      2,
      3,
    ): np.float64(1.0),
    tuple(
      2,
      4,
    ): np.float64(1.0),
    tuple(
      2,
      5,
    ): np.float64(1.0),
    tuple(
      2,
      6,
    ): np.float64(1.0),
    tuple(
      2,
      7,
    ): np.float64(1.0),
    tuple(
      2,
      8,
    ): np.float64(1.0),
    tuple(
      2,
      9,
    ): np.float64(1.0),
    tuple(
      2,
      10,
    ): np.float64(1.0),
    tuple(
      3,
      1,
    ): np.float64(1.0),
    tuple(
      3,
      2,
    ): np.float64(1.0),
    tuple(
      3,
      3,
    ): np.float64(0.0),
    tuple(
      3,
      4,
    ): np.float64(1.0),
    tuple(
      3,
      5,
    ): np.float64(1.0),
    tuple(
      3,
      6,
    ): np.float64(1.0),
    tuple(
      3,
      7,
    ): np.float64(1.0),
    tuple(
      3,
      8,
    ): np.float64(1.0),
    tuple(
      3,
      9,
    ): np.float64(1.0),
    tuple(
      3,
      10,
    ): np.float64(0.5),
    tuple(
      4,
      1,
    ): np.float64(1.0),
    tuple(
      4,
      2,
    ): np.float64(1.0),
    tuple(
      4,
      3,
    ): np.float64(1.0),
    tuple(
      4,
      4,
    ): np.float64(0.5),
    tuple(
      4,
      5,
    ): np.float64(1.0),
    tuple(
      4,
      6,
    ): np.float64(1.0),
    tuple(
      4,
      7,
    ): np.float64(1.0),
    tuple(
      4,
      8,
    ): np.float64(1.0),
    tuple(
      4,
      9,
    ): np.float64(1.0),
    tuple(
      4,
      10,
    ): np.float64(1.0),
    tuple(
      5,
      1,
    ): np.float64(1.0),
    tuple(
      5,
      2,
    ): np.float64(1.0),
    tuple(
      5,
      3,
    ): np.float64(1.0),
    tuple(
      5,
      4,
    ): np.float64(1.0),
    tuple(
      5,
      5,
    ): np.float64(0.0),
    tuple(
      5,
      6,
    ): np.float64(1.0),
    tuple(
      5,
      7,
    ): np.float64(1.0),
    tuple(
      5,
      8,
    ): np.float64(1.0),
    tuple(
      5,
      9,
    ): np.float64(0.5),
    tuple(
      5,
      10,
    ): np.float64(1.0),
    tuple(
      6,
      1,
    ): np.float64(1.0),
    tuple(
      6,
      2,
    ): np.float64(1.0),
    tuple(
      6,
      3,
    ): np.float64(1.0),
    tuple(
      6,
      4,
    ): np.float64(1.0),
    tuple(
      6,
      5,
    ): np.float64(1.0),
    tuple(
      6,
      6,
    ): np.float64(0.0),
    tuple(
      6,
      7,
    ): np.float64(1.0),
    tuple(
      6,
      8,
    ): np.float64(1.0),
    tuple(
      6,
      9,
    ): np.float64(1.0),
    tuple(
      6,
      10,
    ): np.float64(1.0),
    tuple(
      7,
      1,
    ): np.float64(1.0),
    tuple(
      7,
      2,
    ): np.float64(1.0),
    tuple(
      7,
      3,
    ): np.float64(1.0),
    tuple(
      7,
      4,
    ): np.float64(1.0),
    tuple(
      7,
      5,
    ): np.float64(1.0),
    tuple(
      7,
      6,
    ): np.float64(1.0),
    tuple(
      7,
      7,
    ): np.float64(0.0),
    tuple(
      7,
      8,
    ): np.float64(1.0),
    tuple(
      7,
      9,
    ): np.float64(1.0),
    tuple(
      7,
      10,
    ): np.float64(1.0),
    tuple(
      8,
      1,
    ): np.float64(1.0),
    tuple(
      8,
      2,
    ): np.float64(1.0),
    tuple(
      8,
      3,
    ): np.float64(1.0),
    tuple(
      8,
      4,
    ): np.float64(1.0),
    tuple(
      8,
      5,
    ): np.float64(1.0),
    tuple(
      8,
      6,
    ): np.float64(1.0),
    tuple(
      8,
      7,
    ): np.float64(1.0),
    tuple(
      8,
      8,
    ): np.float64(0.5),
    tuple(
      8,
      9,
    ): np.float64(1.0),
    tuple(
      8,
      10,
    ): np.float64(1.0),
    tuple(
      9,
      1,
    ): np.float64(1.0),
    tuple(
      9,
      2,
    ): np.float64(1.0),
    tuple(
      9,
      3,
    ): np.float64(1.0),
    tuple(
      9,
      4,
    ): np.float64(1.0),
    tuple(
      9,
      5,
    ): np.float64(0.5),
    tuple(
      9,
      6,
    ): np.float64(1.0),
    tuple(
      9,
      7,
    ): np.float64(1.0),
    tuple(
      9,
      8,
    ): np.float64(1.0),
    tuple(
      9,
      9,
    ): np.float64(0.5),
    tuple(
      9,
      10,
    ): np.float64(1.0),
    tuple(
      10,
      1,
    ): np.float64(0.5),
    tuple(
      10,
      2,
    ): np.float64(1.0),
    tuple(
      10,
      3,
    ): np.float64(0.5),
    tuple(
      10,
      4,
    ): np.float64(1.0),
    tuple(
      10,
      5,
    ): np.float64(1.0),
    tuple(
      10,
      6,
    ): np.float64(1.0),
    tuple(
      10,
      7,
    ): np.float64(1.0),
    tuple(
      10,
      8,
    ): np.float64(1.0),
    tuple(
      10,
      9,
    ): np.float64(1.0),
    tuple(
      10,
      10,
    ): np.float64(0.0),
  })
# ---
# name: TestLinearPairwiseSequenceMetric.test_collect_as_matrix_equivalence_with_snapshot[event]
  '''
  ,1,2,3,4,5,6,7,8,9,10
  1,0.36363636363636365,1.0,0.9090909090909091,1.0,1.0,1.0,1.0,1.0,1.0,1.0
  2,1.0,0.125,1.0,0.9090909090909091,0.9375,0.9230769230769231,0.8571428571428571,1.0,1.0,1.0
  3,0.9090909090909091,1.0,0.15384615384615385,0.9090909090909091,1.0,1.0,0.8571428571428571,1.0,1.0,0.9090909090909091
  4,1.0,0.9090909090909091,0.9090909090909091,0.0,0.9090909090909091,1.0,1.0,1.0,1.0,1.0
  5,1.0,0.9375,1.0,0.9090909090909091,0.2777777777777778,1.0,0.8571428571428571,1.0,1.0,1.0
  6,1.0,0.9230769230769231,1.0,1.0,1.0,0.15384615384615385,1.0,1.0,0.8571428571428571,1.0
  7,1.0,0.8571428571428571,0.8571428571428571,1.0,0.8571428571428571,1.0,0.14285714285714285,1.0,1.0,1.0
  8,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.8571428571428571,1.0
  9,1.0,1.0,1.0,1.0,1.0,0.8571428571428571,1.0,0.8571428571428571,0.0,0.8571428571428571
  10,1.0,1.0,0.9090909090909091,1.0,1.0,1.0,1.0,1.0,0.8571428571428571,0.0
  
  '''
# ---
# name: TestLinearPairwiseSequenceMetric.test_collect_as_matrix_equivalence_with_snapshot[interval]
  '''
  ,1,2,3,4,5,6,7,8,9,10
  1,0.2,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
  2,1.0,0.16666666666666666,1.0,1.0,1.0,1.0,1.0,1.0,0.75,1.0
  3,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
  4,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.8333333333333334,1.0,1.0
  5,1.0,1.0,1.0,1.0,0.16666666666666666,0.8333333333333334,1.0,1.0,1.0,1.0
  6,1.0,1.0,1.0,1.0,0.8333333333333334,0.0,1.0,1.0,1.0,1.0
  7,1.0,1.0,1.0,1.0,1.0,1.0,0.3333333333333333,1.0,1.0,0.6666666666666666
  8,1.0,1.0,1.0,0.8333333333333334,1.0,1.0,1.0,0.14285714285714285,1.0,1.0
  9,1.0,0.75,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0
  10,1.0,1.0,1.0,1.0,1.0,1.0,0.6666666666666666,1.0,1.0,0.0
  
  '''
# ---
# name: TestLinearPairwiseSequenceMetric.test_collect_as_matrix_equivalence_with_snapshot[state]
  '''
  ,1,2,3,4,5,6,7,8,9,10
  1,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5
  2,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
  3,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5
  4,1.0,1.0,1.0,0.5,1.0,1.0,1.0,1.0,1.0,1.0
  5,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.5,1.0
  6,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0
  7,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0
  8,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,1.0,1.0
  9,1.0,1.0,1.0,1.0,0.5,1.0,1.0,1.0,0.5,1.0
  10,0.5,1.0,0.5,1.0,1.0,1.0,1.0,1.0,1.0,0.0
  
  '''
# ---
