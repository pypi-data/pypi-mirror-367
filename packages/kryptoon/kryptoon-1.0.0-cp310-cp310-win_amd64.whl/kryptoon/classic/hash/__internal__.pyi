# IMPORT
from kryptoon import __internal__ as _internal # type: ignore

# MAIN
class Blake3:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Blake3":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def extend(self, length: int) -> bytes:
        ...
    #
    def hexextend(self, length: int) -> str:
        ...

class Ripemd128:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Ripemd128":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Ripemd160:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Ripemd160":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Ripemd256:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Ripemd256":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Ripemd320:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Ripemd320":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Keccak224:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Keccak224":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Keccak256:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Keccak256":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Keccak384:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Keccak384":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...

class Keccak512:
    def __init__(self, buffer: bytes | None = None) -> None:
        ...
    #
    def copy(self) -> "Keccak512":
        ...
    #
    def update(self, buffer: bytes) -> None:
        ...
    #
    def digest(self) -> bytes:
        ...
    #
    def hexdigest(self) -> str:
        ...
    #
    def reset(self) -> None:
        ...
