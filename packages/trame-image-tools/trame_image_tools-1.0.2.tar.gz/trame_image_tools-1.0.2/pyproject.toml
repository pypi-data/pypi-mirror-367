[project]
name = "trame-image-tools"
version = "1.0.2"
description = "A trame package to display, manipulate, and select regions in images."
authors = [
    {name = "Alessandro Genova"},
]
dependencies = [
    "trame_client>=3.5",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "Apache Software License"}
keywords = ["Python", "Interactive", "Web", "Application", "Framework"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "ruff",
    "pytest",
    "codespell",
]

[build-system]
requires = ['setuptools', 'wheel']
build-backend = 'setuptools.build_meta'

[tool.setuptools.packages.find]
where = ["."]
# Editable installs don't work with the namespace packages if we
# include "trame" in this list. We must explicitly include "trame.modules"
# and "trame.widgets" instead.
include = ["trame.modules", "trame.widgets", "trame_image_tools"]

[tool.setuptools.package-data]
trame_image_tools = [
    "**/*.py",
    "**/*.js",
    "**/*.css",
]
[tool.semantic_release]
version_variables = [
    "trame_image_tools/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:project.version",
]
build_command = """
  python -m venv .venv
  source .venv/bin/activate
  pip install -U pip build
  python -m build .
"""

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["E", "W", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[lint.pydocstyle]
convention = "google"
