{"version":3,"file":"trame_image_tools.umd.js","sources":["../../../vue-components/src/components/defaults.ts","../../../vue-components/src/components/TrameImage.vue","../../../vue-components/src/components/TrameImageRoi.vue","../../../vue-components/src/components/TrameImageLine.vue","../../../vue-components/src/components/TrameImageCircle.vue","../../../vue-components/src/components/TrameImagePolygon.vue","../../../vue-components/src/components/index.js","../../../vue-components/src/components/TrameImageGrid.vue","../../../vue-components/src/main.js"],"sourcesContent":["import type { Vector2D } from \"@/types\";\n\nexport const DEFAULT_SCALE = 0.9;\nexport const DEFAULT_CENTER: Vector2D = [0.5, 0.5];\n","<script setup lang=\"ts\">\nimport {\n  ref,\n  computed,\n  useTemplateRef,\n  onMounted,\n  onBeforeUnmount,\n  defineModel,\n  withDefaults,\n} from \"vue\";\n\nimport type { Vector2D, ViewBox } from \"@/types\";\nimport { DEFAULT_SCALE, DEFAULT_CENTER } from \"@/components/defaults\";\n\ninterface Props {\n  src: string;\n  size: Vector2D;\n  borderColor?: string;\n  borderSize?: number;\n}\n\ntype Events = {};\n\nconst props = withDefaults(defineProps<Props>(), {\n  borderColor: \"white\",\n  borderSize: 1,\n});\n\ndefineEmits<Events>();\n\nconst scale = defineModel<number>(\"scale\", {\n  required: false,\n  default: DEFAULT_SCALE,\n});\nconst center = defineModel<Vector2D>(\"center\", {\n  required: false,\n  default: DEFAULT_CENTER,\n});\n\nconst svgEl = useTemplateRef<SVGElement>(\"svg-root\");\n\nconst viewPortSize = ref<Vector2D>([1, 1]);\n\nlet resizeObserver: ResizeObserver | null = null;\n\nconst viewBox = computed(() => {\n  return computeViewBox(\n    props.size,\n    viewPortSize.value,\n    scale.value,\n    center.value,\n  );\n});\nconst viewBoxStr = computed(() => viewBox.value.join(\" \"));\n\nconst imageRatio = computed(() => props.size[0] / props.size[1]);\nconst viewPortRatio = computed(\n  () => viewPortSize.value[0] / viewPortSize.value[1],\n);\nconst widthRatio = computed(() => props.size[0] / viewPortSize.value[0]);\nconst heightRatio = computed(() => props.size[1] / viewPortSize.value[1]);\nconst pixelRatio = computed(() =>\n  Math.max(widthRatio.value, heightRatio.value),\n);\n\nfunction computeViewBoxZoom(\n  currentViewBox: ViewBox,\n  imageSize: Vector2D,\n  scale: number,\n  focalPoint: Vector2D,\n): ViewBox {\n  const newWidth = imageSize[0] / scale;\n  const newHeight = imageSize[1] / scale;\n\n  const deltaWidth = currentViewBox[2] - newWidth;\n  const deltaHeight = currentViewBox[3] - newHeight;\n\n  return [\n    currentViewBox[0] + deltaWidth * focalPoint[0],\n    currentViewBox[1] + deltaHeight * focalPoint[1],\n    newWidth,\n    newHeight,\n  ];\n}\n\n// Zoom by mouse wheel\nfunction onWheel(ev: WheelEvent) {\n  ev.stopPropagation();\n\n  const deltaFactor = 0.2;\n  const zoomIn = ev.deltaY < 0;\n\n  let newScale: number;\n\n  if (zoomIn) {\n    newScale = scale.value * (1 + deltaFactor);\n  } else {\n    newScale = scale.value / (1 + deltaFactor);\n  }\n\n  const focalPoint: Vector2D = [0, 0];\n\n  if (imageRatio.value > viewPortRatio.value) {\n    focalPoint[0] = ev.offsetX / viewPortSize.value[0];\n    focalPoint[1] =\n      (imageRatio.value / viewPortRatio.value) *\n      (ev.offsetY / viewPortSize.value[1]);\n  } else {\n    focalPoint[0] =\n      (viewPortRatio.value / imageRatio.value) *\n      (ev.offsetX / viewPortSize.value[0]);\n    focalPoint[1] = ev.offsetY / viewPortSize.value[1];\n  }\n\n  const newViewBox = computeViewBoxZoom(\n    viewBox.value,\n    props.size,\n    newScale,\n    focalPoint,\n  );\n  const newCenter = calculateCenter(\n    props.size,\n    viewPortSize.value,\n    [newViewBox[0], newViewBox[1]],\n    newScale,\n  );\n\n  center.value = newCenter;\n  scale.value = newScale;\n}\n\n// Pan by dragging the view area\nfunction onMouseDown(ev: MouseEvent) {\n  const initialPosition = [ev.clientX, ev.clientY];\n  const initialOrigin: Vector2D = [viewBox.value[0], viewBox.value[1]];\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const newOrigin: Vector2D = [\n      initialOrigin[0] + (pixelRatio.value * dx) / scale.value,\n      initialOrigin[1] + (pixelRatio.value * dy) / scale.value,\n    ];\n\n    center.value = calculateCenter(\n      props.size,\n      viewPortSize.value,\n      newOrigin,\n      scale.value,\n    );\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n\nfunction calculateCenter(\n  imageSize: Vector2D,\n  viewPortSize: Vector2D,\n  origin: Vector2D,\n  scale: number,\n): Vector2D {\n  const imageWidth = imageSize[0];\n  const imageHeight = imageSize[1];\n  const viewPortWidth = viewPortSize[0];\n  const viewPortHeight = viewPortSize[1];\n  const imageAspectRatio = imageWidth / imageHeight;\n  const viewPortAspectRatio = viewPortWidth / viewPortHeight;\n\n  const center: Vector2D = [0, 0];\n\n  if (imageAspectRatio > viewPortAspectRatio) {\n    const ratio = imageAspectRatio / viewPortAspectRatio / scale;\n    center[0] = origin[0] / imageWidth + 0.5 / scale;\n    center[1] = origin[1] / imageHeight + ratio / 2;\n  } else {\n    const ratio = viewPortAspectRatio / imageAspectRatio / scale;\n    center[0] = origin[0] / imageWidth + ratio / 2;\n    center[1] = origin[1] / imageHeight + 0.5 / scale;\n  }\n\n  return center;\n}\n\nfunction computeViewBox(\n  imageSize: Vector2D,\n  viewPortSize: Vector2D,\n  scale: number,\n  center: Vector2D,\n): ViewBox {\n  const imageWidth = imageSize[0];\n  const imageHeight = imageSize[1];\n  const viewPortWidth = viewPortSize[0];\n  const viewPortHeight = viewPortSize[1];\n  const imageAspectRatio = imageWidth / imageHeight;\n  const viewPortAspectRatio = viewPortWidth / viewPortHeight;\n\n  const origin: Vector2D = [0, 0];\n\n  if (imageAspectRatio > viewPortAspectRatio) {\n    const ratio = imageAspectRatio / viewPortAspectRatio / scale;\n    origin[0] = -(1 / scale - 2 * center[0]) * 0.5 * imageWidth;\n    origin[1] = -(ratio - 2 * center[1]) * imageHeight * 0.5;\n  } else {\n    const ratio = viewPortAspectRatio / imageAspectRatio / scale;\n    origin[0] = -(ratio - 2 * center[0]) * imageWidth * 0.5;\n    origin[1] = -(1 / scale - 2 * center[1]) * 0.5 * imageHeight;\n  }\n\n  return [origin[0], origin[1], imageWidth / scale, imageHeight / scale];\n}\n\nonMounted(() => {\n  resizeObserver = new ResizeObserver(() => {\n    if (svgEl.value) {\n      viewPortSize.value = [svgEl.value.clientWidth, svgEl.value.clientHeight];\n    }\n  });\n\n  if (svgEl.value) {\n    resizeObserver.observe(svgEl.value);\n  }\n});\n\nonBeforeUnmount(() => {\n  if (resizeObserver) {\n    resizeObserver.disconnect();\n  }\n});\n</script>\n\n<template>\n  <svg\n    ref=\"svg-root\"\n    @wheel.prevent=\"onWheel\"\n    @mousedown=\"onMouseDown\"\n    version=\"1.1\"\n    width=\"100%\"\n    height=\"100%\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMinYMin meet\"\n    :viewBox=\"viewBoxStr\"\n  >\n    <image\n      :href=\"src\"\n      style=\"\n        image-rendering: auto;\n        image-rendering: crisp-edges;\n        image-rendering: pixelated;\n      \"\n    />\n    <rect\n      :width=\"size[0]\"\n      :height=\"size[1]\"\n      :stroke=\"borderColor\"\n      fill=\"transparent\"\n      :stroke-width=\"(borderSize * pixelRatio) / scale\"\n    />\n    <slot\n      :imageSize=\"size\"\n      :viewPortSize\n      :imageRatio\n      :viewPortRatio\n      :widthRatio\n      :heightRatio\n      :pixelRatio\n      :center\n      :scale\n      :viewBox\n    ></slot>\n  </svg>\n</template>\n","<script setup lang=\"ts\">\nimport { defineModel, withDefaults } from \"vue\";\n\nimport type { Vector2D, ViewBox } from \"@/types\";\n\ninterface Props {\n  imageSize: Vector2D;\n  pixelRatio: number;\n  scale: number;\n  constrain?: boolean;\n  fillColor?: string;\n  borderColor?: string;\n  borderSize?: number;\n  handleSize?: number;\n  handleFillColor?: string;\n  handleBorderColor?: string;\n}\n\ntype Events = {};\n\nconst props = withDefaults(defineProps<Props>(), {\n  constrain: true,\n  fillColor: \"transparent\",\n  borderColor: \"lime\",\n  borderSize: 2,\n  handleSize: 10,\n  handleFillColor: \"#ffffffdd\",\n  handleBorderColor: \"#000000dd\",\n});\n\ndefineEmits<Events>();\n\nconst roi = defineModel<ViewBox>({ required: true });\n\n// Drag widget\nfunction onMouseDownWidget(ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialRoi: ViewBox = [...roi.value];\n\n  const imageWidth = props.imageSize[0];\n  const imageHeight = props.imageSize[1];\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currRoi: ViewBox = [...roi.value];\n\n    let newRoi: ViewBox = [\n      initialRoi[0] - (props.pixelRatio * dx) / props.scale,\n      initialRoi[1] - (props.pixelRatio * dy) / props.scale,\n      currRoi[2],\n      currRoi[3],\n    ];\n\n    if (props.constrain) {\n      if (newRoi[0] < 0) {\n        newRoi[0] = 0;\n      }\n\n      if (newRoi[1] < 0) {\n        newRoi[1] = 0;\n      }\n\n      if (newRoi[0] + currRoi[2] > imageWidth) {\n        newRoi[0] = imageWidth - currRoi[2];\n      }\n\n      if (newRoi[1] + currRoi[3] > imageHeight) {\n        newRoi[1] = imageHeight - currRoi[3];\n      }\n    }\n\n    newRoi = newRoi.map((val) => Math.round(val)) as ViewBox;\n\n    let changed = false;\n\n    newRoi.forEach((val, i) => {\n      changed = changed || val !== currRoi[i];\n    });\n\n    if (changed) {\n      roi.value = newRoi;\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n\n// Drag handle\nfunction onMouseDownHandle(ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialRoi: ViewBox = [...roi.value];\n\n  const imageWidth = props.imageSize[0];\n  const imageHeight = props.imageSize[1];\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currRoi: ViewBox = [...roi.value];\n\n    let newRoi: ViewBox = [\n      currRoi[0],\n      currRoi[1],\n      initialRoi[2] - (props.pixelRatio * dx) / props.scale,\n      initialRoi[3] - (props.pixelRatio * dy) / props.scale,\n    ];\n\n    if (newRoi[2] < 1) {\n      newRoi[2] = 1;\n    }\n\n    if (newRoi[3] < 1) {\n      newRoi[3] = 1;\n    }\n\n    if (props.constrain) {\n      if (newRoi[0] + newRoi[2] > imageWidth) {\n        newRoi[2] = imageWidth - newRoi[0];\n      }\n\n      if (newRoi[1] + newRoi[3] > imageHeight) {\n        newRoi[3] = imageHeight - newRoi[1];\n      }\n    }\n\n    newRoi = newRoi.map((val) => Math.round(val)) as ViewBox;\n\n    let changed = false;\n\n    newRoi.forEach((val, i) => {\n      changed = changed || val !== currRoi[i];\n    });\n\n    if (changed) {\n      roi.value = newRoi;\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n</script>\n\n<template>\n  <g>\n    <rect\n      @mousedown=\"onMouseDownWidget\"\n      :x=\"roi[0]\"\n      :y=\"roi[1]\"\n      :width=\"roi[2]\"\n      :height=\"roi[3]\"\n      :stroke=\"borderColor\"\n      :fill=\"fillColor\"\n      :stroke-width=\"(borderSize * pixelRatio) / scale\"\n    />\n\n    <rect\n      @mousedown=\"onMouseDownHandle\"\n      :x=\"roi[0] + roi[2] - (0.5 * handleSize * pixelRatio) / scale\"\n      :y=\"roi[1] + roi[3] - (0.5 * handleSize * pixelRatio) / scale\"\n      :width=\"(handleSize * pixelRatio) / scale\"\n      :height=\"(handleSize * pixelRatio) / scale\"\n      :stroke=\"handleBorderColor\"\n      :fill=\"handleFillColor\"\n      :stroke-width=\"pixelRatio / scale\"\n    />\n  </g>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, defineModel, withDefaults } from \"vue\";\n\nimport type { Vector2D } from \"@/types\";\n\ninterface Props {\n  imageSize: Vector2D;\n  pixelRatio: number;\n  scale: number;\n  constrain?: boolean;\n  color?: string;\n  thickness?: number;\n  handleSize?: number;\n  handleFillColor?: string;\n  handleBorderColor?: string;\n  handleBorderSize?: number;\n}\n\ntype Events = {};\n\nconst props = withDefaults(defineProps<Props>(), {\n  constrain: true,\n  color: \"lime\",\n  thickness: 2,\n  handleSize: 10,\n  handleFillColor: \"#ffffffdd\",\n  handleBorderColor: \"#000000dd\",\n  handleBorderSize: 1,\n});\n\ndefineEmits<Events>();\n\nconst flatPoints = defineModel<number[]>({ required: true });\nconst nPoints = computed(() => Math.floor(flatPoints.value.length / 2));\nconst points = computed(() => {\n  const pairs: Vector2D[] = [];\n  for (let i = 0; i < nPoints.value; ++i) {\n    pairs.push([flatPoints.value[i * 2], flatPoints.value[i * 2 + 1]]);\n  }\n\n  return pairs;\n});\nconst pointsStr = computed(() =>\n  points.value.map((point) => point.join(\",\")).join(\" \"),\n);\n\n// Drag widget\nfunction onMouseDownWidget(ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialPoints = points.value.map((pt) => pt.map((v) => v));\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currPoints = points.value.map((pt) => pt.map((v) => v));\n\n    let newPoints = initialPoints.map(\n      (pt) =>\n        [\n          pt[0] - (props.pixelRatio * dx) / props.scale,\n          pt[1] - (props.pixelRatio * dy) / props.scale,\n        ] as Vector2D,\n    );\n\n    if (props.constrain) {\n      newPoints = newPoints.map((pt) => [\n        Math.min(Math.max(0, pt[0]), props.imageSize[0]),\n        Math.min(Math.max(0, pt[1]), props.imageSize[1]),\n      ]);\n    }\n\n    newPoints = newPoints.map(\n      (pt) => pt.map((val) => Math.round(val)) as Vector2D,\n    );\n\n    let changed = false;\n\n    newPoints.forEach((pt, i) => {\n      pt.forEach((val, j) => {\n        changed = changed || val !== currPoints[i][j];\n      });\n    });\n\n    if (changed) {\n      flatPoints.value = newPoints.flat();\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n\n// Drag handle\nfunction onMouseDownHandle(idx: number, ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialPoints = points.value.map((pt) => pt.map((v) => v));\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currPoints = points.value.map((pt) => pt.map((v) => v)) as Vector2D[];\n\n    let newPoints = points.value.map((pt) => pt.map((v) => v)) as Vector2D[];\n\n    newPoints[idx] = [\n      initialPoints[idx][0] - (props.pixelRatio * dx) / props.scale,\n      initialPoints[idx][1] - (props.pixelRatio * dy) / props.scale,\n    ];\n\n    if (props.constrain) {\n      newPoints[idx][0] = Math.min(\n        Math.max(0, newPoints[idx][0]),\n        props.imageSize[0],\n      );\n      newPoints[idx][1] = Math.min(\n        Math.max(0, newPoints[idx][1]),\n        props.imageSize[1],\n      );\n    }\n\n    newPoints = newPoints.map(\n      (pt) => pt.map((val) => Math.round(val)) as Vector2D,\n    );\n\n    let changed =\n      newPoints[idx][0] !== currPoints[idx][0] ||\n      newPoints[idx][1] !== currPoints[idx][1];\n\n    if (changed) {\n      flatPoints.value = newPoints.flat();\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n</script>\n\n<template>\n  <g>\n    <polyline\n      @mousedown=\"onMouseDownWidget\"\n      :points=\"pointsStr\"\n      :stroke=\"color\"\n      :stroke-width=\"(thickness * pixelRatio) / scale\"\n      fill=\"none\"\n    />\n\n    <rect\n      v-for=\"(point, i) in points\"\n      :key=\"i\"\n      @mousedown=\"(ev: MouseEvent) => onMouseDownHandle(i, ev)\"\n      :x=\"point[0] - (0.5 * handleSize * pixelRatio) / scale\"\n      :y=\"point[1] - (0.5 * handleSize * pixelRatio) / scale\"\n      :width=\"(handleSize * pixelRatio) / scale\"\n      :height=\"(handleSize * pixelRatio) / scale\"\n      :stroke=\"handleBorderColor\"\n      :fill=\"handleFillColor\"\n      :stroke-width=\"pixelRatio / scale\"\n    />\n  </g>\n</template>\n","<script setup lang=\"ts\">\nimport { defineModel, withDefaults } from \"vue\";\n\nimport type { Vector2D, Vector3D } from \"@/types\";\n\ninterface Props {\n  imageSize: Vector2D;\n  pixelRatio: number;\n  scale: number;\n  constrain?: boolean;\n  fillColor?: string;\n  borderColor?: string;\n  borderSize?: number;\n  handleSize?: number;\n  handleFillColor?: string;\n  handleBorderColor?: string;\n}\n\ntype Events = {};\n\nconst props = withDefaults(defineProps<Props>(), {\n  constrain: true,\n  fillColor: \"transparent\",\n  borderColor: \"lime\",\n  borderSize: 2,\n  handleSize: 10,\n  handleFillColor: \"#ffffffdd\",\n  handleBorderColor: \"#000000dd\",\n});\n\ndefineEmits<Events>();\n\nconst circle = defineModel<Vector3D>({ required: true });\n\n// Drag widget\nfunction onMouseDownWidget(ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialCircle: Vector3D = [...circle.value];\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currCircle: Vector3D = [...circle.value];\n\n    let newCircle: Vector3D = [\n      initialCircle[0] - (props.pixelRatio * dx) / props.scale,\n      initialCircle[1] - (props.pixelRatio * dy) / props.scale,\n      currCircle[2],\n    ];\n\n    if (props.constrain) {\n      newCircle[0] = Math.min(Math.max(0, newCircle[0]), props.imageSize[0]);\n      newCircle[1] = Math.min(Math.max(0, newCircle[1]), props.imageSize[1]);\n    }\n\n    newCircle = newCircle.map((val) => Math.round(val)) as Vector3D;\n\n    let changed = false;\n\n    newCircle.forEach((val, i) => {\n      changed = changed || val !== currCircle[i];\n    });\n\n    if (changed) {\n      circle.value = newCircle;\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n\n// Drag handle\nfunction onMouseDownHandle(idx: number, ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialCircle: Vector3D = [...circle.value];\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n\n    const currCircle: Vector3D = [...circle.value];\n\n    let newCircle: Vector3D = [\n      currCircle[0],\n      currCircle[1],\n      initialCircle[2] - (props.pixelRatio * dx) / props.scale,\n    ];\n\n    newCircle[2] = Math.max(1, newCircle[2]);\n\n    newCircle = newCircle.map((val) => Math.round(val)) as Vector3D;\n\n    let changed = false;\n\n    newCircle.forEach((val, i) => {\n      changed = changed || val !== currCircle[i];\n    });\n\n    if (changed) {\n      circle.value = newCircle;\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n</script>\n\n<template>\n  <g>\n    <circle\n      @mousedown=\"onMouseDownWidget\"\n      :cx=\"circle[0]\"\n      :cy=\"circle[1]\"\n      :r=\"circle[2]\"\n      :stroke=\"borderColor\"\n      :fill=\"fillColor\"\n      :stroke-width=\"(borderSize * pixelRatio) / scale\"\n    />\n\n    <circle\n      :cx=\"circle[0]\"\n      :cy=\"circle[1]\"\n      :r=\"(0.5 * pixelRatio) / scale\"\n      :stroke=\"borderColor\"\n      :stroke-width=\"(borderSize * pixelRatio) / scale\"\n      fill=\"transparent\"\n    />\n\n    <rect\n      @mousedown=\"(ev: MouseEvent) => onMouseDownHandle(0, ev)\"\n      :x=\"circle[0] + circle[2] - (0.5 * handleSize * pixelRatio) / scale\"\n      :y=\"circle[1] - (0.5 * handleSize * pixelRatio) / scale\"\n      :width=\"(handleSize * pixelRatio) / scale\"\n      :height=\"(handleSize * pixelRatio) / scale\"\n      :stroke=\"handleBorderColor\"\n      :fill=\"handleFillColor\"\n      :stroke-width=\"pixelRatio / scale\"\n    />\n  </g>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, defineModel, withDefaults } from \"vue\";\n\nimport type { Vector2D } from \"@/types\";\n\ninterface Props {\n  imageSize: Vector2D;\n  pixelRatio: number;\n  scale: number;\n  constrain?: boolean;\n  fillColor?: string;\n  borderColor?: string;\n  borderSize?: number;\n  handleSize?: number;\n  handleFillColor?: string;\n  handleBorderColor?: string;\n}\n\ntype Events = {};\n\nconst props = withDefaults(defineProps<Props>(), {\n  constrain: true,\n  fillColor: \"transparent\",\n  borderColor: \"lime\",\n  borderSize: 2,\n  handleSize: 10,\n  handleFillColor: \"#ffffffdd\",\n  handleBorderColor: \"#000000dd\",\n});\n\ndefineEmits<Events>();\n\nconst flatPoints = defineModel<number[]>({ required: true });\nconst nPoints = computed(() => Math.floor(flatPoints.value.length / 2));\nconst points = computed(() => {\n  const pairs: Vector2D[] = [];\n  for (let i = 0; i < nPoints.value; ++i) {\n    pairs.push([flatPoints.value[i * 2], flatPoints.value[i * 2 + 1]]);\n  }\n\n  return pairs;\n});\nconst pointsStr = computed(() =>\n  points.value.map((point) => point.join(\",\")).join(\" \"),\n);\n\n// Drag widget\nfunction onMouseDownWidget(ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialPoints = points.value.map((pt) => pt.map((v) => v));\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currPoints = points.value.map((pt) => pt.map((v) => v));\n\n    let newPoints = initialPoints.map(\n      (pt) =>\n        [\n          pt[0] - (props.pixelRatio * dx) / props.scale,\n          pt[1] - (props.pixelRatio * dy) / props.scale,\n        ] as Vector2D,\n    );\n\n    if (props.constrain) {\n      newPoints = newPoints.map((pt) => [\n        Math.min(Math.max(0, pt[0]), props.imageSize[0]),\n        Math.min(Math.max(0, pt[1]), props.imageSize[1]),\n      ]);\n    }\n\n    newPoints = newPoints.map(\n      (pt) => pt.map((val) => Math.round(val)) as Vector2D,\n    );\n\n    let changed = false;\n\n    newPoints.forEach((pt, i) => {\n      pt.forEach((val, j) => {\n        changed = changed || val !== currPoints[i][j];\n      });\n    });\n\n    if (changed) {\n      flatPoints.value = newPoints.flat();\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n\n// Drag handle\nfunction onMouseDownHandle(idx: number, ev: MouseEvent) {\n  ev.stopPropagation();\n\n  let initialPosition = [ev.clientX, ev.clientY];\n  const initialPoints = points.value.map((pt) => pt.map((v) => v));\n\n  function onMouseMove(ev: MouseEvent) {\n    const dx = initialPosition[0] - ev.clientX;\n    const dy = initialPosition[1] - ev.clientY;\n\n    const currPoints = points.value.map((pt) => pt.map((v) => v)) as Vector2D[];\n\n    let newPoints = points.value.map((pt) => pt.map((v) => v)) as Vector2D[];\n\n    newPoints[idx] = [\n      initialPoints[idx][0] - (props.pixelRatio * dx) / props.scale,\n      initialPoints[idx][1] - (props.pixelRatio * dy) / props.scale,\n    ];\n\n    if (props.constrain) {\n      newPoints[idx][0] = Math.min(\n        Math.max(0, newPoints[idx][0]),\n        props.imageSize[0],\n      );\n      newPoints[idx][1] = Math.min(\n        Math.max(0, newPoints[idx][1]),\n        props.imageSize[1],\n      );\n    }\n\n    newPoints = newPoints.map(\n      (pt) => pt.map((val) => Math.round(val)) as Vector2D,\n    );\n\n    let changed =\n      newPoints[idx][0] !== currPoints[idx][0] ||\n      newPoints[idx][1] !== currPoints[idx][1];\n\n    if (changed) {\n      flatPoints.value = newPoints.flat();\n    }\n  }\n\n  function onMouseUp() {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  }\n\n  document.addEventListener(\"mousemove\", onMouseMove);\n  document.addEventListener(\"mouseup\", onMouseUp);\n}\n</script>\n\n<template>\n  <g>\n    <polygon\n      @mousedown=\"onMouseDownWidget\"\n      :points=\"pointsStr\"\n      :stroke=\"borderColor\"\n      :fill=\"fillColor\"\n      :stroke-width=\"(borderSize * pixelRatio) / scale\"\n    />\n\n    <rect\n      v-for=\"(point, i) in points\"\n      :key=\"i\"\n      @mousedown=\"(ev: MouseEvent) => onMouseDownHandle(i, ev)\"\n      :x=\"point[0] - (0.5 * handleSize * pixelRatio) / scale\"\n      :y=\"point[1] - (0.5 * handleSize * pixelRatio) / scale\"\n      :width=\"(handleSize * pixelRatio) / scale\"\n      :height=\"(handleSize * pixelRatio) / scale\"\n      :stroke=\"handleBorderColor\"\n      :fill=\"handleFillColor\"\n      :stroke-width=\"pixelRatio / scale\"\n    />\n  </g>\n</template>\n","import TrameImage from \"./TrameImage.vue\";\nimport TrameImageRoi from \"./TrameImageRoi.vue\";\nimport TrameImageLine from \"./TrameImageLine.vue\";\nimport TrameImageCircle from \"./TrameImageCircle.vue\";\nimport TrameImagePolygon from \"./TrameImagePolygon.vue\";\nimport TrameImageGrid from \"./TrameImageGrid.vue\";\n\nexport default {\n  trameImage: TrameImage,\n  trameImageRoi: TrameImageRoi,\n  trameImageLine: TrameImageLine,\n  trameImageCircle: TrameImageCircle,\n  trameImagePolygon: TrameImagePolygon,\n  trameImageGrid: TrameImageGrid,\n};\n","<script setup lang=\"ts\">\nimport { withDefaults, computed } from \"vue\";\n\nimport type { Vector2D } from \"@/types\";\n\ninterface Props {\n  imageSize: Vector2D;\n  pixelRatio: number;\n  scale: number;\n  spacing: Vector2D;\n  color?: string;\n  thickness?: number;\n  fontFamily?: string;\n  fontSize?: number;\n}\n\ntype Events = {};\n\nconst props = withDefaults(defineProps<Props>(), {\n  color: \"#ffffffaa\",\n  thickness: 0.5,\n  fontFamily: \"monospace\",\n  fontSize: 12,\n});\n\ndefineEmits<Events>();\n\nconst xTicks = computed(() => {\n  const ticks = [];\n  const nTicks = Math.floor(props.imageSize[0] / props.spacing[0]) + 1;\n  for (let i = 0; i < nTicks; ++i) {\n    ticks.push(i * props.spacing[0]);\n  }\n\n  return ticks;\n});\n\nconst yTicks = computed(() => {\n  const ticks = [];\n  const nTicks = Math.floor(props.imageSize[1] / props.spacing[1]) + 1;\n  for (let i = 0; i < nTicks; ++i) {\n    ticks.push(i * props.spacing[1]);\n  }\n\n  return ticks;\n});\n</script>\n\n<template>\n  <g>\n    <template v-for=\"(x, i) in xTicks\" :key=\"i\">\n      <line\n        :x1=\"x\"\n        :y1=\"0\"\n        :x2=\"x\"\n        :y2=\"props.imageSize[1]\"\n        :stroke=\"color\"\n        :stroke-width=\"(thickness * pixelRatio) / scale\"\n        pointer-events=\"none\"\n      />\n\n      <text\n        :x=\"x\"\n        :y=\"(-fontSize * pixelRatio) / scale\"\n        :fill=\"color\"\n        :font-family=\"fontFamily\"\n        text-anchor=\"middle\"\n        :font-size=\"(fontSize * pixelRatio) / scale\"\n        pointer-events=\"none\"\n        style=\"user-select: none\"\n      >\n        {{ x }}\n      </text>\n    </template>\n\n    <template v-for=\"(y, i) in yTicks\" :key=\"i\">\n      <line\n        :x1=\"0\"\n        :y1=\"y\"\n        :x2=\"props.imageSize[0]\"\n        :y2=\"y\"\n        :stroke=\"color\"\n        :stroke-width=\"(thickness * pixelRatio) / scale\"\n        pointer-events=\"none\"\n      />\n\n      <text\n        :x=\"(-fontSize * pixelRatio) / scale\"\n        :y=\"y\"\n        :fill=\"color\"\n        :font-family=\"fontFamily\"\n        text-anchor=\"end\"\n        dominant-baseline=\"middle\"\n        :font-size=\"(fontSize * pixelRatio) / scale\"\n        pointer-events=\"none\"\n        style=\"user-select: none\"\n      >\n        {{ y }}\n      </text>\n    </template>\n  </g>\n</template>\n","import components from \"./components\";\n\nexport function install(Vue) {\n  Object.keys(components).forEach((name) => {\n    Vue.component(name, components[name]);\n  });\n}\n"],"names":["DEFAULT_CENTER","props","__props","scale","_useModel","center","svgEl","useTemplateRef","viewPortSize","ref","resizeObserver","viewBox","computed","computeViewBox","viewBoxStr","imageRatio","viewPortRatio","widthRatio","heightRatio","pixelRatio","computeViewBoxZoom","currentViewBox","imageSize","focalPoint","newWidth","newHeight","deltaWidth","deltaHeight","onWheel","ev","deltaFactor","zoomIn","newScale","newViewBox","newCenter","calculateCenter","onMouseDown","initialPosition","initialOrigin","onMouseMove","dx","dy","newOrigin","onMouseUp","origin","imageWidth","imageHeight","viewPortWidth","viewPortHeight","imageAspectRatio","viewPortAspectRatio","ratio","onMounted","onBeforeUnmount","roi","onMouseDownWidget","initialRoi","currRoi","newRoi","val","changed","onMouseDownHandle","flatPoints","nPoints","points","pairs","i","pointsStr","point","initialPoints","pt","v","currPoints","newPoints","j","idx","circle","initialCircle","currCircle","newCircle","components","TrameImage","TrameImageRoi","TrameImageLine","TrameImageCircle","TrameImagePolygon","xTicks","ticks","nTicks","yTicks","install","Vue","name"],"mappings":"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"}