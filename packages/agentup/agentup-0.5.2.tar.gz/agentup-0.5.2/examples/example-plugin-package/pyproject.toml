# Example AgentUp plugin package with trusted publishing configuration
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agentup-weather-plugin"
version = "1.2.0"
description = "Weather capabilities for AgentUp agents"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AgentUp Team", email = "plugins@agentup.dev"}
]
keywords = ["agentup", "plugin", "weather", "ai", "assistant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AgentUp",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

dependencies = [
    "agentup>=2.0.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0"
]

requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]

# Plugin entry points - this is how AgentUp discovers plugins
[project.entry-points."agentup.plugins"]
weather = "agentup_weather.plugin:WeatherPlugin"

[project.urls]
Homepage = "https://github.com/agentup-org/weather-plugin"
Repository = "https://github.com/agentup-org/weather-plugin"
Documentation = "https://docs.agentup.dev/plugins/weather"
"Bug Tracker" = "https://github.com/agentup-org/weather-plugin/issues"

# Trusted publishing configuration for AgentUp
[tool.agentup.trusted-publishing]
publisher = "agentup-official"              # Publisher identity
repository = "agentup-org/weather-plugin"   # GitHub repo that can publish this package
workflow = "publish.yml"                    # Specific workflow file that can publish
trust_level = "official"                    # Trust level assigned to this plugin

# Plugin metadata for verification
[tool.agentup.plugin]
security_hash = "sha256:abc123def456..."    # Hash of plugin code for integrity verification
capabilities = [
    "weather:current",
    "weather:forecast", 
    "weather:alerts"
]
scopes = [
    "web:search",
    "api:read"
]
min_agentup_version = "2.0.0"
plugin_api_version = "1.0"

# Build configuration
[tool.hatch.build.targets.wheel]
packages = ["src/agentup_weather"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml"
]

# Development tools configuration
[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__ files

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"