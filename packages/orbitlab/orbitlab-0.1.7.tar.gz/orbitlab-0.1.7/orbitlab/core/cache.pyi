from pathlib import Path
from typing import Any, Dict, Optional

class OrbitCache:
    """
    Sistema de cachÃ© para objetos serializados con dill.
    Soporta validaciÃ³n opcional por hash y limpieza selectiva.
    """
    cache_dir: Path

    def __init__(self, cache_dir: Path) -> None: ...
    def _generate_cache_key(self, identifier: str) -> str: ...
    def _get_cache_file(self, identifier: str) -> Path: ...
    def get(self, identifier: str, validate_hash: bool = ...) -> Optional[Dict[str, Any]]: ...
    def set(self, identifier: str, obj: Dict[str, Any]) -> None: ...
    def clear(self) -> None: ...
    def remove(self, identifier: str) -> bool: ...
    def _calculate_hash(self, data: bytes) -> str: ...
