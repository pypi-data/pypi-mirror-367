[project]
name = "pangea-authz-fastmcp"
version = "0.2.0"
description = "Pangea AuthZ integration for FastMCP"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Pangea", email = "support@pangea.cloud" }
]
requires-python = ">=3.11"
dependencies = [
    "fastmcp>=2.11.0",
    "mcp>=1.12.3",
    "pangea-sdk>=6.4.0",
    "pydantic>=2.11.7",
]

[project.scripts]
pangea-authz-fastmcp = "pangea_authz_fastmcp.cli:app"

[project.urls]
Homepage = "https://github.com/pangeacyber/pangea-authz-fastmcp"
Documentation = "https://github.com/pangeacyber/pangea-authz-fastmcp"
Source = "https://github.com/pangeacyber/pangea-authz-fastmcp"
Changelog = "https://github.com/pangeacyber/pangea-authz-fastmcp/releases"

[project.optional-dependencies]
cli = [
    "beaupy>=3.10.1",
    "cyclopts>=3.22.5",
    "google-api-python-client>=2.177.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.2",
    "pyjson5>=1.6.9",
]

[dependency-groups]
dev = [
    "google-api-python-client-stubs==1.30.0",
    "mypy==1.17.1",
    "pangea-authn-fastmcp==0.3.0",
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0",
    "ruff==0.12.7",
]

[build-system]
requires = ["hatchling==1.27.0"]
build-backend = "hatchling.build"

[tool.mypy]
plugins = ["pydantic.mypy"]
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
no_implicit_reexport = false
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
addopts = "--tb=short"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"
filterwarnings = ["error"]
testpaths = ["tests"]
xfail_strict = true

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",   # isort
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
    "UP",  # pyupgrade
]
flake8-type-checking.runtime-evaluated-base-classes = ["pydantic.BaseModel"]
