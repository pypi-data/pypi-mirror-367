[project]
name = "toynlp"
version = "0.2.0"
description = "A toy NLP library for educational purposes."
authors = [
    {name = "Xiangzhuang Shen", email = "datahonor@gmail.com"},
]
license = "Apache-2.0"
readme = "README.md"


classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">= 3.12"

dependencies = [
    "datasets>=3.2.0",
    "evaluate>=0.4.5",
    "huggingface-hub>=0.28.1",
    "numpy>=2.2.2",
    "pyyaml>=6.0",
    "safetensors>=0.5.3",
    "tokenizers>=0.21.0",
    "torch>=2.5.1",
    "wandb>=0.19.5",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "ipython",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "hypothesis>=6.112.0",
    "jupyterlab>=4.3.5",
    "ipywidgets>=8.1.5",
    "ruff>=0.12.7",
    "types-pyyaml>=6.0.12.20250516",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocstrings",
    "mkdocs-bibtex",
    "mkdocstrings-python",
    "mkdocs-autorefs",
    "mkdocs-git-committers-plugin-2",
    "mkdocs-git-revision-date-localized-plugin",
]


[project.urls]
"Homepage" = "https://shenxiangzhuang.github.io/toynlp"
"Bug Tracker" = "https://shenxiangzhuang.github.io/toynlp/issues"
"Documentation" = "https://shenxiangzhuang.github.io/toynlp"
"Source Code" = "https://github.com/shenxiangzhuang/toynlp"
"Release Notes" = "https://shenxiangzhuang.github.io/toynlp/changelog/"


[build-system]
requires = ["uv_build>=0.8.3,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "toynlp"
module-root = ""


[tool.uv.sources]
torch = [
    { index = "pytorch-cu121", marker = "sys_platform == 'linux'" },
    { index = "pytorch-cpu", marker = "sys_platform != 'linux'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu121"
url = "https://download.pytorch.org/whl/cu121"
explicit = true


# pytest coverage configuration: https://pytest-cov.readthedocs.io/en/latest/
[tool.coverage.run]
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "**/__init__.py",
    "**/train.py",
    "**/inference.py",
    "**/evaluation.py",
    "**/hub.py",
    "**/dataset.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"


[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_decorators = false
strict = false

[[tool.mypy.overrides]]
module = ["wandb", "wandb.*"]
ignore_missing_imports = true
ignore_errors = true
follow_imports = "skip"


# Ruff configuration: https://docs.astral.sh/ruff/configuration/#configuring-ruff
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "I001",    # Unsorted imports  # TODO: Enable this rule after find ruff's bug
    "FIX002",  # TODO checker
    "TD002",  # TODO checker
    "TD003",   # TODO checker
    "ANN201",  # Missing return type annotation for public function
    "ANN001",  # Missing type annotation for function argument
    "TRY003",  # Avoid specifying long messages outside the exception class

    "S101",   # assert
    "S106",   # Possible hardcoded password assigned to argument: "unk_token"

    "EM101",  # Exception must not use a string literal, assign to variable first
    "PLR2004", # Magic value used in comparison,
    "S311",    # Standard pseudo-random generators are not suitable for security/cryptographic purposes

    "FBT001",  # Boolean-typed positional argument in function definition
    "FBT002",  # Boolean default positional argument in function definition
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D107",   # undocumented-public-init
    "T201",   # print
    "RET504", # Unnecessary assignment before `return` statement
    "ERA001", # Found commented-out code
    "PLR0913", #  Too many arguments in function definition
    "RUF003"  # Comment contains ambiguous(FULLWIDTH COMMA)
]
pydocstyle = { convention = "google" }

[tool.ruff.lint.per-file-ignores]
'docs/*' = ["D"]
'tests/*' = ["D"]


# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
