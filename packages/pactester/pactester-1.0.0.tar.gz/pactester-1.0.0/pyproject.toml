[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "pactester"
version = "1.0.0"
description = "Command-line tool to check proxy resolution using PAC files"
authors = ["Javier Correa Guerrero <jcorreag@pm.me>"]
license = "GPL-3.0"
readme = "README.md"
packages = [
  { include = "pactester" }
]

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
bump = false

[tool.poetry.scripts]
pactester = "pactester.main:main"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry.dependencies]
python = ">=3.9,>=3.12"
requests = ">=2.25.0"
pacparser = ">=1.3.7"
toml = ">=0.10.2"
platformdirs = ">=4.00"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.12.0"
pytest = ">=8.0.0"
pre-commit = ">=4.0.0"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --tb=short"
testpaths = ["tests"]
pythonpath = "." 
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.ruff]
line-length = 120
exclude = [
  ".venv",
  "__pycache__",
]

[tool.ruff.lint]
select = [
  "F",     # pyflakes: undefined names, unused imports, etc.
  "E",     # pycodestyle (errors): whitespace and formatting issues
  "W",     # pycodestyle (warnings): line breaks, indentation
  "B",     # flake8-bugbear: likely bugs and design issues
  "UP",    # pyupgrade: suggests syntax improvements for newer Python versions
  "SIM",   # flake8-simplify: simplifies redundant code patterns
  "C4",    # flake8-comprehensions: improves use of list/set/dict comprehensions
  "TID",   # flake8-tidy-imports: catches disallowed or shadowed imports
  "PERF",  # perflint: flags inefficient code patterns
  "RUF",   # ruff-specific rules: ensures good Ruff usage itself
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
lines_after_imports = 1
