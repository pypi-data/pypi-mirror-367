[project]
name = "swh.shard"
authors = [
    {name="Software Heritage developers", email="swh-devel@inria.fr"},
]

description = "Software Heritage Shard File Format"
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
dependencies = [
    "click >= 8.2.0"
]

[project.optional-dependencies]
testing = [
    "pytest >= 8.1",
    "pytest-mock",
]

[build-system]
requires = ["scikit-build-core>=0.10", "pybind11", "setuptools_scm"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
minimum-version = "build-system.requires"
wheel.exclude = ["*.c", "*.cpp", "*.h", ".clang-format", "*.o"]
strict-config = false
# build.verbose = true

[tool.scikit-build.wheel.packages]
"swh" = "src/swh"

[tool.scikit-build.metadata]
version.provider = "scikit_build_core.metadata.setuptools_scm"

[project.urls]
"Homepage" = "https://gitlab.softwareheritage.org/swh/devel/swh-shard"
"Bug Reports" = "https://gitlab.softwareheritage.org/swh/devel/swh-shard/-/issues"
"Funding" = "https://www.softwareheritage.org/donate"
"Documentation" = "https://docs.softwareheritage.org/devel/swh-shard/"
"Source" = "https://gitlab.softwareheritage.org/swh/devel/swh-shard.git"

# have both the 'swh-shard' and 'swh shard' commands (if swh.core is installed)
[project.scripts]
"swh-shard" = "swh.shard.cli:main"

[project.entry-points."swh.cli.subcommands"]
"swh.shard" = "swh.shard.cli"

[tool.setuptools_scm]  # Section required
write_to = "src/swh/shard/_version.py"
fallback_version = "0.0.1"

[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
force_sort_within_sections = true
known_first_party = ['swh']

[tool.mypy]
namespace_packages = true
warn_unused_ignores = true
explicit_package_bases = true
# ^ Needed for mypy to detect py.typed from swh packages installed
# in editable mode

plugins = []

# 3rd party libraries without stubs (yet)
[[tool.mypy.overrides]]
module = [
    "swh.shard._shard.*",
    "swh.core.*",
]
ignore_missing_imports = true

[tool.flake8]
select = ["C", "E", "F", "W", "B950"]
ignore = [
    "E203", # whitespaces before ':' <https://github.com/psf/black/issues/315>
    "E231", # missing whitespace after ','
    "E501", # line too long, use B950 warning from flake8-bugbear instead
    "W503" # line break before binary operator <https://github.com/psf/black/issues/52>
]
max-line-length = 88
extend-exclude = ["build/"]

[tool.pytest.ini_options]
norecursedirs = "build docs .*"
consider_namespace_packages = true
markers = [
    "setrlimit(*limits): Set resource limits for the current test",
]

[tool.cibuildwheel]
enable = ["pypy"]