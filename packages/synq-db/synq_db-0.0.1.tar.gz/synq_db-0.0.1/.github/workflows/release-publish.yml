name: Release and Publish

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0, v1.2.3
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: pytest tests/ -v

    - name: Run integration tests
      run: pytest tests/integration/ -v --tb=short -m "not slow"

  build:
    name: Build Distribution
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/synq-db

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # Only publish to PyPI on tag pushes
    needs: 
    - build
    - publish-to-testpypi  # Ensure TestPyPI succeeds first
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/synq-db

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/')  # Only create release on tag pushes
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for creating releases
    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## Changes in v${{ steps.version.outputs.VERSION }}
          
          See [CHANGELOG.md](https://github.com/SudoAI-DEV/Synq/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          # Basic installation
          pip install synq-db==${{ steps.version.outputs.VERSION }}
          
          # With PostgreSQL support
          pip install synq-db[postgres]==${{ steps.version.outputs.VERSION }}
          
          # With MySQL support
          pip install synq-db[mysql]==${{ steps.version.outputs.VERSION }}
          ```
          
          ## What's New
          
          - Snapshot-based database migrations for SQLAlchemy
          - Offline migration generation
          - Support for PostgreSQL, MySQL, and SQLite
          - Intelligent migration naming
          - Full compatibility with SQLAlchemy 1.4+ and 2.0+
          
          Check the [README](https://github.com/SudoAI-DEV/Synq#readme) for usage instructions.
          
        draft: false
        prerelease: false