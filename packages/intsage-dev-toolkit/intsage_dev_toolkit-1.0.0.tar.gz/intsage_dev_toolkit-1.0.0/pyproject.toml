[build-system]
requires = [
    "setuptools>=64",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "intsage-dev-toolkit"
version = "1.0.0"
description = "SAGE Framework Development Toolkit - Unified development tools for SAGE project"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "IntelliStream Team", email = "intellistream@outlook.com" },
]
keywords = [
    "formatting",
    "framework",
    "intellistream",
    "ai",
    "development",
    "utilities",
    "testing",
    "data",
    "tools",
    "sage",
    "ml",
    "linting",
    "cli",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "pyyaml==6.0.2",
    "typer==0.16.0",
    "rich==14.1.0",
    "jinja2==3.1.6",
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0",
    "pytest-cov==6.2.1",
    "pytest-benchmark==5.1.0",
    "gitpython==3.1.45",
    "packaging>=21.0",
    "tomli>=2.0.0",
    "tomli-w>=1.0.0",
    "psutil==6.1.0",
    "pathspec==0.12.1",
    "pandas==2.3.1",
    "networkx==3.4.2",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Issues = "https://github.com/intellistream/SAGE/issues"

[project.scripts]
sage-dev = "sage_dev_toolkit.cli.main:app"
sage-toolkit = "sage_dev_toolkit.cli.main:app"
sagedev = "sage_dev_toolkit.cli.main:app"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = [
    "src",
]
include = [
    "sage_dev_toolkit*",
]
namespaces = true

[tool.setuptools.package-data]
sage_dev_toolkit = [
    "py.typed",
    "*.pyi",
]
"sage_dev_toolkit.config" = [
    "*.yaml",
]
"sage_dev_toolkit.templates" = [
    "**/*",
]

[tool.black]
line-length = 88
target-version = [
    "py310",
]
include = "\\.pyi?$"
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
]
ignore = [
    "E501",
    "B008",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=sage_dev_toolkit",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = [
    "src/sage_dev_toolkit",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
