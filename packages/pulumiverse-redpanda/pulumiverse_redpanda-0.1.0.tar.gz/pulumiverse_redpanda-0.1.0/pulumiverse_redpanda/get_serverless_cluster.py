# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetServerlessClusterResult',
    'AwaitableGetServerlessClusterResult',
    'get_serverless_cluster',
    'get_serverless_cluster_output',
]

@pulumi.output_type
class GetServerlessClusterResult:
    """
    A collection of values returned by getServerlessCluster.
    """
    def __init__(__self__, cluster_api_url=None, id=None, name=None, resource_group_id=None, serverless_region=None):
        if cluster_api_url and not isinstance(cluster_api_url, str):
            raise TypeError("Expected argument 'cluster_api_url' to be a str")
        pulumi.set(__self__, "cluster_api_url", cluster_api_url)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if resource_group_id and not isinstance(resource_group_id, str):
            raise TypeError("Expected argument 'resource_group_id' to be a str")
        pulumi.set(__self__, "resource_group_id", resource_group_id)
        if serverless_region and not isinstance(serverless_region, str):
            raise TypeError("Expected argument 'serverless_region' to be a str")
        pulumi.set(__self__, "serverless_region", serverless_region)

    @_builtins.property
    @pulumi.getter(name="clusterApiUrl")
    def cluster_api_url(self) -> _builtins.str:
        """
        The URL of the cluster API
        """
        return pulumi.get(self, "cluster_api_url")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the serverless cluster
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the serverless cluster
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> _builtins.str:
        """
        The ID of the resource group in which to create the serverless cluster
        """
        return pulumi.get(self, "resource_group_id")

    @_builtins.property
    @pulumi.getter(name="serverlessRegion")
    def serverless_region(self) -> _builtins.str:
        """
        Redpanda specific region for the serverless cluster
        """
        return pulumi.get(self, "serverless_region")


class AwaitableGetServerlessClusterResult(GetServerlessClusterResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerlessClusterResult(
            cluster_api_url=self.cluster_api_url,
            id=self.id,
            name=self.name,
            resource_group_id=self.resource_group_id,
            serverless_region=self.serverless_region)


def get_serverless_cluster(id: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServerlessClusterResult:
    """
    Data source for a Redpanda Cloud serverless cluster

    ## Usage

    ```python
    import pulumi
    import pulumi_redpanda as redpanda

    example = redpanda.get_serverless_cluster(id="serverless_cluster_id")
    ```

    ### Example Usage to create a serverless cluster

    ```python
    import pulumi
    import pulumiverse_redpanda as redpanda

    test_resource_group = redpanda.ResourceGroup("testResourceGroup")
    config = pulumi.Config()
    region = config.get("region")
    if region is None:
        region = "eu-west-1"
    test_serverless_cluster = redpanda.ServerlessCluster("testServerlessCluster",
        resource_group_id=test_resource_group.id,
        serverless_region=region)
    resource_group_name = config.get("resourceGroupName")
    if resource_group_name is None:
        resource_group_name = "testgroup"
    cluster_name = config.get("clusterName")
    if cluster_name is None:
        cluster_name = "testname"
    ```

    ## Limitations

    Can only be used with Redpanda Cloud serverless clusters.


    :param _builtins.str id: The ID of the serverless cluster
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('redpanda:index/getServerlessCluster:getServerlessCluster', __args__, opts=opts, typ=GetServerlessClusterResult).value

    return AwaitableGetServerlessClusterResult(
        cluster_api_url=pulumi.get(__ret__, 'cluster_api_url'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        resource_group_id=pulumi.get(__ret__, 'resource_group_id'),
        serverless_region=pulumi.get(__ret__, 'serverless_region'))
def get_serverless_cluster_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetServerlessClusterResult]:
    """
    Data source for a Redpanda Cloud serverless cluster

    ## Usage

    ```python
    import pulumi
    import pulumi_redpanda as redpanda

    example = redpanda.get_serverless_cluster(id="serverless_cluster_id")
    ```

    ### Example Usage to create a serverless cluster

    ```python
    import pulumi
    import pulumiverse_redpanda as redpanda

    test_resource_group = redpanda.ResourceGroup("testResourceGroup")
    config = pulumi.Config()
    region = config.get("region")
    if region is None:
        region = "eu-west-1"
    test_serverless_cluster = redpanda.ServerlessCluster("testServerlessCluster",
        resource_group_id=test_resource_group.id,
        serverless_region=region)
    resource_group_name = config.get("resourceGroupName")
    if resource_group_name is None:
        resource_group_name = "testgroup"
    cluster_name = config.get("clusterName")
    if cluster_name is None:
        cluster_name = "testname"
    ```

    ## Limitations

    Can only be used with Redpanda Cloud serverless clusters.


    :param _builtins.str id: The ID of the serverless cluster
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('redpanda:index/getServerlessCluster:getServerlessCluster', __args__, opts=opts, typ=GetServerlessClusterResult)
    return __ret__.apply(lambda __response__: GetServerlessClusterResult(
        cluster_api_url=pulumi.get(__response__, 'cluster_api_url'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        resource_group_id=pulumi.get(__response__, 'resource_group_id'),
        serverless_region=pulumi.get(__response__, 'serverless_region')))
