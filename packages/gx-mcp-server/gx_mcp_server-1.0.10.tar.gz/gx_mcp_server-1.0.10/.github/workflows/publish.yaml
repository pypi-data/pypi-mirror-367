name: Publish to PyPI and Docker Hub

# This workflow is triggered on version tags.
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*' # Trigger on version tags like v0.1.0

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating GitHub releases
      id-token: write # Required for trusted publishing to PyPI

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Install build dependencies
      run: python -m pip install hatch twine

    - name: Build package
      run: hatch build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # This uses trusted publishing, which is the recommended secure method.
        # You must configure this project as a trusted publisher on PyPI.
        # See: https://docs.pypi.org/trusted-publishers/
        attestations: true

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: davidf9999/gx-mcp-server

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: false
        prerelease: false
        generate_release_notes: true