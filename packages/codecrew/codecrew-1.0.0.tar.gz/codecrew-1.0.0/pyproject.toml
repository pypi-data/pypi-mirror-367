[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "codecrew"
dynamic = ["version"]
description = "CodeCrew Multi-Agent Development System"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "Derek Vitrano", email = "derek@example.com" },
]
keywords = [
    "ai",
    "agents",
    "development",
    "automation",
    "cli",
    "fastapi",
    "multi-agent",
    "code-generation",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "requests>=2.31.0",
    "click>=8.1.0",
    "rich>=13.6.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.4.0",
    # "safety>=2.3.0",  # Temporarily disabled due to build issues
    "bandit>=1.7.0",
    "pip-audit>=2.6.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]
all = [
    "codecrew[dev,docs]",
]

[project.scripts]
codecrew = "codecrew.cli:main"

[project.urls]
Documentation = "https://github.com/dscv101/codecrew#readme"
Issues = "https://github.com/dscv101/codecrew/issues"
Source = "https://github.com/dscv101/codecrew"

[tool.hatch.version]
path = "codecrew/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["codecrew"]

[tool.hatch.build.targets.sdist]
include = [
    "/codecrew",
    "/tests",
    "/docs",
    "/codecrew-example",
    "/SETUP.md",
    "/README.md",
]

# Hatch Environment Configuration
[tool.hatch.envs.default]
dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov=codecrew --cov-report=term-missing --cov-report=html {args:tests}"
cov-report = "coverage report"
cov-html = "coverage html"

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "bandit>=1.7.0",
]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:codecrew tests}"
style = [
    "flake8 {args:.}",
    "black --check --diff {args:.}",
    "isort --check-only --diff {args:.}",
]
fmt = [
    "isort {args:.}",
    "black {args:.}",
    "style",
]
security = "bandit -r {args:codecrew}"
all = [
    "style",
    "typing",
    "security",
]

[tool.hatch.envs.docs]
dependencies = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

# Development environment with all dependencies
[tool.hatch.envs.dev]
dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.4.0",
    # "safety>=2.3.0",  # Temporarily disabled due to build issues
    "bandit>=1.7.0",
    "pip-audit>=2.6.0",
]

[tool.hatch.envs.dev.scripts]
install-hooks = "pre-commit install"
security-check = [
    "safety check",
    "bandit -r codecrew",
    "pip-audit",
]
quality-check = [
    "test-cov",
    "style",
    "typing",
    "security-check",
]

# Tool Configuration
[tool.black]
target-version = ["py311"]
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["codecrew"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".env",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "sqlalchemy.*",
    "alembic.*",
    "redis.*",
    "jose.*",
    "passlib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["codecrew"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]
