[tool.coverage.run]
include = ['learning_credentials/**']
omit = ['*/migrations/*', 'tests/*']
plugins = ['django_coverage_plugin']

[tool.ruff]
line-length = 120
exclude = ['migrations', 'docs', 'manage.py']
target-version = 'py311'

[tool.ruff.lint]
select = [
    'F',    # Pyflakes
    'E',    # Pycodestyle (errors)
    'W',    # Pycodestyle (warnings)
    'C90',  # mccabe
    'I',    # isort
    'N',    # pep8-naming
    'D',    # pydocstyle
    'UP',   # pyupgrade
    'YTT',  # flake8-2020
    'ANN',  # flake8-annotations
    'ASYNC',# flake8-async
    'S',    # flake8-bandit
    'BLE',  # flake8-blind-except
    'FBT',  # flake8-boolean-trap
    'B',    # flake8-bugbear
    'A',    # flake8-builtins
    'COM',  # flake8-commas
    'C4',   # flake8-comprehensions
    'DTZ',  # flake8-datetimez
    'T10',  # flake8-debugger
    'DJ',   # flake8-django
    'EM',   # flake8-errmsg
    'EXE',  # flake8-executable
    'FA',   # flake8-future-annotations
    'ISC',  # flake8-implicit-str-concat
    'ICN',  # flake8-import-conventions
    'LOG',  # flake8-logging
    'G',    # flake8-logging-format
    'INP',  # flake8-no-pep420
    'PIE',  # flake8-pie
    'T20',  # flake8-print
    'PYI',  # flake8-pyi
    'PT',   # flake8-pytest-style
    'Q',    # flake8-quotes
    'RSE',  # flake8-raise
    'RET',  # flake8-return
    'SLF',  # flake8-self
    'SLOT', # flake8-slots
    'SIM',  # flake8-simplify
    'TID',  # flake8-tidy-imports
    'TC',   # flake8-type-checking
    'INT',  # flake8-gettext
    'ARG',  # flake8-unused-arguments
    'PTH',  # flake8-use-pathlib
    'TD',   # flake8-todos
    'ERA',  # eradicate
    'PD',   # pandas-vet
    'PGH',  # pygrep-hooks
    'PL',   # Pylint
    'TRY',  # tryceratops
    'FLY',  # flynt
    'NPY',  # NumPy-specific rules
    'AIR',  # Airflow
    'PERF', # Perflint
    'FURB', # refurb
    # TODO: Enable preview.
    # 'DOC',  # pydoclint
    'RUF',  # Ruff-specific rules
]
ignore = [
    'ANN002', # missing-type-args
    'ANN003', # missing-type-kwargs
    'ANN204', # missing-return-type-special-method
    'D203',   # one-blank-line-before-class
    'D212',   # multi-line-summary-first-line (incompatible with D213)
    'Q000',   # bad-quotes-inline-string
    'TD002',  # missing-t\odo-author
    'TD003',  # missing-t\odo-link
    'TRY003', # raise-vanilla-args
]

[tool.ruff.lint.per-file-ignores]
'tests/*' = [
    'S101',   # assert
    'INP001', # implicit-namespace-package
    'SLF001', # private-member-access
    'RUF018', # assignment-in-assert
]

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
allow-magic-value-types = ['int', 'str']

[tool.ruff.format]
quote-style = "preserve"

[tool.black]
line-length = 120
target-version = ['py311']
skip_string_normalization = true
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.pytest.ini_options]
filterwarnings = [
    # https://github.com/openedx/completion/pull/259
    "ignore:'index_together' is deprecated:django.utils.deprecation.RemovedInDjango51Warning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:Deprecated call to `pkg_resources.declare_namespace.*sphinxcontrib:DeprecationWarning",
    "ignore:'cgi' is deprecated:DeprecationWarning",
]
DJANGO_SETTINGS_MODULE = "test_settings"
addopts = "--cov learning_credentials --cov tests --cov-report term-missing --cov-report xml"
norecursedirs = ".* docs requirements site-packages"
