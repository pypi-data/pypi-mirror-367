Metadata-Version: 2.3
Name: pysr-abc-http-message
Version: 1.0.0
Summary: Стандартные рекомендации реализации HTTP сообщений
Author: Alexey Volkov
Author-email: webwizardry@hotmail.com
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Description-Content-Type: text/markdown

# PYSR ABC Http Message

Пакет описывает общие абстракции для представления HTTP сообщений в соответствии с [RFC 7230](https://tools.ietf.org/html/rfc7230) 
и [RFC 7231](https://tools.ietf.org/html/rfc7231), а также URI для использования с HTTP-сообщениями в соответствии 
с [RFC 3986](https://tools.ietf.org/html/rfc3986). 


## Стандартные рекомендации реализации HTTP сообщений

HTTP-сообщения являются основой веб-разработки. Веб-браузеры и HTTP-клиенты создают HTTP-запрос, который отправляется 
на веб-сервер, предоставляющий HTTP-ответ. Серверный код получает HTTP-запрос и возвращает ответное сообщение HTTP.

Структура HTTP-запроса:
POST /path HTTP/1.1
Host: example.com

foo=bar&baz=bat

Первая строка - "строка запроса", содержащая:
- HTTP-метод
- цель запроса (обычно абсолютный URI или путь)
- версию HTTP-протокола

Структура HTTP-ответа:
HTTP/1.1 200 OK
Content-Type: text/plain

Тело ответа

Первая строка - "строка статуса", содержащая:
- версию HTTP-протокола
- HTTP-код статуса
- поясняющую фразу

Сообщения HTTP обычно абстрагируются от конечного потребителя, но как разработчики, мы как правило должны знать, как 
они структурированы и как получить доступ к ним или манипулировать ими для выполнения наших задач, будь то выполнение запроса к HTTP API или обработка входящего запроса.

## Спецификация

### Сообщения
HTTP-сообщение - это либо запрос от клиента к серверу, либо ответ от сервера клиенту.

### HTTP-заголовки
- Имена заголовков нечувствительны к регистру, но оригинальный регистр должен сохраняться
- Заголовки могут иметь несколько значений, которые объединяются через запятую
- Особые случаи (как Set-Cookie) должны обрабатываться отдельно
- Заголовок Host должен соответствовать URI

### Потоки данных (Streams)
Тело сообщения может быть очень большим, поэтому используется потоковый интерфейс вместо строк.
Потоки могут быть:
- Читаемыми
- Записываемыми 
- Поисковыми (seekable)
- Иметь различные возможности в зависимости от реализации

### Цели запроса и URI
Запрос может иметь несколько форм:
- origin-form - только путь и query-строка
- absolute-form - полный URI
- authority-form - только authority (для CONNECT)
- asterisk-form - только * (для OPTIONS)

### Серверные запросы
Серверные запросы включают дополнительные данные:
- Параметры
- Куки
- Query параметры
- POST данные
- Загруженные файлы
- Атрибуты запроса

