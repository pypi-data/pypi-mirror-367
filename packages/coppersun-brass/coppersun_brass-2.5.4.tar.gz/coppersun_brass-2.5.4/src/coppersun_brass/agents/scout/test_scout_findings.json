{
  "last_updated": "2025-06-08T20:13:54.280653+00:00",
  "count": 43,
  "findings": [
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 8,
      "content": "Implement proper error handling",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 44,
      "is_researchable": false,
      "context_lines": [
        "    public void highConfidenceItems() {",
        "        // TODO: Implement proper error handling",
        "        // FIXME: Memory leak in this method"
      ],
      "content_hash": "e6bf7a6f71184b15",
      "created_at": "2025-06-08T13:13:54.278869"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 9,
      "content": "Memory leak in this method",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 59,
      "is_researchable": false,
      "context_lines": [
        "        // TODO: Implement proper error handling",
        "        // FIXME: Memory leak in this method",
        "        // BUG: Logic error in calculation"
      ],
      "content_hash": "55fdce5b7bd547b0",
      "created_at": "2025-06-08T13:13:54.278944"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 10,
      "content": "Logic error in calculation",
      "todo_type": "BUG",
      "confidence": 0.9,
      "priority_score": 59,
      "is_researchable": false,
      "context_lines": [
        "        // FIXME: Memory leak in this method",
        "        // BUG: Logic error in calculation",
        "    }"
      ],
      "content_hash": "a72e141d2ae7ee91",
      "created_at": "2025-06-08T13:13:54.278977"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 15,
      "content": "Temporary workaround for API limitation",
      "todo_type": "HACK",
      "confidence": 0.7,
      "priority_score": 27,
      "is_researchable": false,
      "context_lines": [
        "    public void mediumConfidenceItems() {",
        "        // HACK: Temporary workaround for API limitation",
        "        // XXX: This code is fragile and needs review"
      ],
      "content_hash": "acd3f38ad3449b79",
      "created_at": "2025-06-08T13:13:54.278999"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 16,
      "content": "This code is fragile and needs review",
      "todo_type": "XXX",
      "confidence": 0.7,
      "priority_score": 22,
      "is_researchable": false,
      "context_lines": [
        "        // HACK: Temporary workaround for API limitation",
        "        // XXX: This code is fragile and needs review",
        "    }"
      ],
      "content_hash": "69547bf643ab8f41",
      "created_at": "2025-06-08T13:13:54.279011"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 21,
      "content": "This might need optimization later",
      "todo_type": "NOTE",
      "confidence": 0.5,
      "priority_score": 15,
      "is_researchable": false,
      "context_lines": [
        "    public void lowConfidenceItems() {",
        "        // NOTE: This might need optimization later",
        "        // NOTE: Consider refactoring this approach"
      ],
      "content_hash": "cfb60e2c8a6cb92e",
      "created_at": "2025-06-08T13:13:54.279029"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 22,
      "content": "Consider refactoring this approach",
      "todo_type": "NOTE",
      "confidence": 0.5,
      "priority_score": 15,
      "is_researchable": false,
      "context_lines": [
        "        // NOTE: This might need optimization later",
        "        // NOTE: Consider refactoring this approach",
        "    }"
      ],
      "content_hash": "5f03258bab3ee956",
      "created_at": "2025-06-08T13:13:54.279040"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 35,
      "content": ":",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "        // TODO",
        "        // TODO:",
        "        // TODO -"
      ],
      "content_hash": "041acf8984ceb147",
      "created_at": "2025-06-08T13:13:54.279062"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 36,
      "content": "-",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "        // TODO:",
        "        // TODO -",
        "        // TODO - implement this feature"
      ],
      "content_hash": "cd58b07cd49bc37a",
      "created_at": "2025-06-08T13:13:54.279067"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 37,
      "content": "implement this feature",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "        // TODO -",
        "        // TODO - implement this feature",
        "        //TODO:missing space"
      ],
      "content_hash": "439eeb9bd1d1fdc5",
      "created_at": "2025-06-08T13:13:54.279075"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 38,
      "content": "missing space",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "        // TODO - implement this feature",
        "        //TODO:missing space",
        "        /* TODO: Multi-line "
      ],
      "content_hash": "3831d7853c927ab8",
      "created_at": "2025-06-08T13:13:54.279082"
    },
    {
      "file_path": "testdata/test_confidence_tiers.java",
      "line_number": 39,
      "content": "Multi-line",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "        //TODO:missing space",
        "        /* TODO: Multi-line ",
        "           comment style */"
      ],
      "content_hash": "9660d0e8c24d815a",
      "created_at": "2025-06-08T13:13:54.279089"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 5,
      "content": "Research Stripe API integration patterns",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": true,
      "context_lines": [
        "def payment_integration():",
        "    # TODO: Research Stripe API integration patterns",
        "    # Need to find best practices for webhook handling"
      ],
      "content_hash": "631d86ee6921c466",
      "created_at": "2025-06-08T13:13:54.279311"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 10,
      "content": "Investigate why this query is slow",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 44,
      "is_researchable": true,
      "context_lines": [
        "def optimization_task():",
        "    # FIXME: Investigate why this query is slow",
        "    # Research database indexing strategies"
      ],
      "content_hash": "25bdaa42949df66e",
      "created_at": "2025-06-08T13:13:54.279342"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 15,
      "content": "Find examples of JWT token validation",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": true,
      "context_lines": [
        "def security_implementation():",
        "    # TODO: Find examples of JWT token validation",
        "    # Look for industry standard approaches"
      ],
      "content_hash": "3dbba32d8bec7dbf",
      "created_at": "2025-06-08T13:13:54.279359"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 20,
      "content": "Research microservices vs monolith for this use case",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": true,
      "context_lines": [
        "def architecture_decision():",
        "    # TODO: Research microservices vs monolith for this use case",
        "    # Need to find performance comparisons and examples"
      ],
      "content_hash": "c8d984d95dcbe562",
      "created_at": "2025-06-08T13:13:54.279377"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 25,
      "content": "Find alternative to deprecated library XYZ",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 44,
      "is_researchable": true,
      "context_lines": [
        "def library_selection():",
        "    # FIXME: Find alternative to deprecated library XYZ",
        "    # Research modern replacements with similar API"
      ],
      "content_hash": "0c4085e59156e62d",
      "created_at": "2025-06-08T13:13:54.279392"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 30,
      "content": "Investigate Docker containerization patterns",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": true,
      "context_lines": [
        "def deployment_strategy():",
        "    # TODO: Investigate Docker containerization patterns",
        "    # Find examples for Python Flask applications"
      ],
      "content_hash": "7e9f2df1b5be0877",
      "created_at": "2025-06-08T13:13:54.279406"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 36,
      "content": "Add input validation",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "def simple_tasks():",
        "    # TODO: Add input validation",
        "    # FIXME: Fix typo in variable name"
      ],
      "content_hash": "a38c8d8d38e3f449",
      "created_at": "2025-06-08T13:13:54.279421"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 37,
      "content": "Fix typo in variable name",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 44,
      "is_researchable": false,
      "context_lines": [
        "    # TODO: Add input validation",
        "    # FIXME: Fix typo in variable name",
        "    # BUG: Handle null pointer exception"
      ],
      "content_hash": "233eb835835d9a54",
      "created_at": "2025-06-08T13:13:54.279430"
    },
    {
      "file_path": "testdata/test_researchable_todos.py",
      "line_number": 38,
      "content": "Handle null pointer exception",
      "todo_type": "BUG",
      "confidence": 0.9,
      "priority_score": 49,
      "is_researchable": false,
      "context_lines": [
        "    # FIXME: Fix typo in variable name",
        "    # BUG: Handle null pointer exception",
        "    pass"
      ],
      "content_hash": "7e45b173ff302c03",
      "created_at": "2025-06-08T13:13:54.279440"
    },
    {
      "file_path": "testdata/test_priority_modifiers.js",
      "line_number": 5,
      "content": "URGENT: Fix authentication bypass vulnerability",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 84,
      "is_researchable": false,
      "context_lines": [
        "function authenticateUser(credentials) {",
        "    // TODO URGENT: Fix authentication bypass vulnerability",
        "    return validateCredentials(credentials);"
      ],
      "content_hash": "8e5da4c7ba016322",
      "created_at": "2025-06-08T13:13:54.279768"
    },
    {
      "file_path": "testdata/test_priority_modifiers.js",
      "line_number": 11,
      "content": "CRITICAL: Payment validation is broken",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 74,
      "is_researchable": false,
      "context_lines": [
        "    processPayment(amount) {",
        "        // FIXME CRITICAL: Payment validation is broken",
        "        // This could allow unauthorized transactions"
      ],
      "content_hash": "99d7566dce9b195f",
      "created_at": "2025-06-08T13:13:54.279798"
    },
    {
      "file_path": "testdata/test_priority_modifiers.js",
      "line_number": 17,
      "content": "IMPORTANT: Add fraud detection before refund",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 54,
      "is_researchable": false,
      "context_lines": [
        "    refundPayment(transactionId) {",
        "        // TODO IMPORTANT: Add fraud detection before refund",
        "        return initiateRefund(transactionId);"
      ],
      "content_hash": "f18817d1af924990",
      "created_at": "2025-06-08T13:13:54.279826"
    },
    {
      "file_path": "testdata/test_priority_modifiers.js",
      "line_number": 22,
      "content": "ASAP: Remove this temporary workaround",
      "todo_type": "HACK",
      "confidence": 0.7,
      "priority_score": 47,
      "is_researchable": false,
      "context_lines": [
        "",
        "// HACK ASAP: Remove this temporary workaround",
        "function temporaryFix() {"
      ],
      "content_hash": "c795fd41f904170b",
      "created_at": "2025-06-08T13:13:54.279844"
    },
    {
      "file_path": "testdata/test_priority_modifiers.js",
      "line_number": 28,
      "content": "Optimize database queries for better performance",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 49,
      "is_researchable": false,
      "context_lines": [
        "function performanceTest() {",
        "    // TODO: Optimize database queries for better performance",
        "    // Current implementation is too slow for production"
      ],
      "content_hash": "7c5383c4321f10f1",
      "created_at": "2025-06-08T13:13:54.279866"
    },
    {
      "file_path": "testdata/test_priority_modifiers.js",
      "line_number": 34,
      "content": "Add proper input sanitization for security",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 64,
      "is_researchable": false,
      "context_lines": [
        "function securityAudit() {",
        "    // FIXME: Add proper input sanitization for security",
        "    // Missing XSS protection"
      ],
      "content_hash": "cecaffc1704d713b",
      "created_at": "2025-06-08T13:13:54.279888"
    },
    {
      "file_path": "testdata/test_basic_todos.py",
      "line_number": 5,
      "content": "Add error handling for division by zero",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 44,
      "is_researchable": false,
      "context_lines": [
        "def calculate_metrics():",
        "    # TODO: Add error handling for division by zero",
        "    total = sum(values)"
      ],
      "content_hash": "03051b2b68b1bd4f",
      "created_at": "2025-06-08T13:13:54.280126"
    },
    {
      "file_path": "testdata/test_basic_todos.py",
      "line_number": 11,
      "content": "Memory leak in batch processing",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 59,
      "is_researchable": false,
      "context_lines": [
        "    def __init__(self):",
        "        # FIXME: Memory leak in batch processing",
        "        self.cache = {}"
      ],
      "content_hash": "bb80595f3ca992e6",
      "created_at": "2025-06-08T13:13:54.280152"
    },
    {
      "file_path": "testdata/test_basic_todos.py",
      "line_number": 15,
      "content": "Race condition when processing concurrent batches",
      "todo_type": "BUG",
      "confidence": 0.9,
      "priority_score": 49,
      "is_researchable": false,
      "context_lines": [
        "    def process_batch(self, items):",
        "        # BUG: Race condition when processing concurrent batches",
        "        for item in items:"
      ],
      "content_hash": "2ee6107e1373e257",
      "created_at": "2025-06-08T13:13:54.280180"
    },
    {
      "file_path": "testdata/test_basic_todos.py",
      "line_number": 20,
      "content": "Implement proper resource cleanup",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": false,
      "context_lines": [
        "    def cleanup(self):",
        "        # TODO: Implement proper resource cleanup",
        "        pass"
      ],
      "content_hash": "b30413c8aee3286b",
      "created_at": "2025-06-08T13:13:54.280203"
    },
    {
      "file_path": "testdata/test_basic_todos.py",
      "line_number": 23,
      "content": "This entire class needs refactoring for performance",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 59,
      "is_researchable": false,
      "context_lines": [
        "",
        "# FIXME: This entire class needs refactoring for performance",
        "class LegacyHandler:"
      ],
      "content_hash": "0638c4f0ef94a60f",
      "created_at": "2025-06-08T13:13:54.280223"
    },
    {
      "file_path": "testdata/test_basic_todos.py",
      "line_number": 26,
      "content": "SQL injection vulnerability in query builder",
      "todo_type": "BUG",
      "confidence": 0.9,
      "priority_score": 69,
      "is_researchable": false,
      "context_lines": [
        "    def handle_request(self):",
        "        # BUG: SQL injection vulnerability in query builder",
        "        return \"processed\""
      ],
      "content_hash": "5143204dae0618bd",
      "created_at": "2025-06-08T13:13:54.280239"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 14,
      "content": "URGENT: SQL injection vulnerability in login",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 94,
      "is_researchable": false,
      "context_lines": [
        "    void authenticateUser() {",
        "        // FIXME URGENT: SQL injection vulnerability in login",
        "        // This is a critical security flaw that needs immediate attention"
      ],
      "content_hash": "6eea8af2d206ad28",
      "created_at": "2025-06-08T13:13:54.280438"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 21,
      "content": "Optimize this algorithm for better performance",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 49,
      "is_researchable": false,
      "context_lines": [
        "    void processLargeDataset() {",
        "        // TODO: Optimize this algorithm for better performance",
        "        // Current O(n\u00b2) complexity is too slow for production datasets"
      ],
      "content_hash": "3a6000f8adaaf99c",
      "created_at": "2025-06-08T13:13:54.280474"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 32,
      "content": "Research thread-safe design patterns",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": true,
      "context_lines": [
        "    void handleConcurrency() {",
        "        // TODO: Research thread-safe design patterns",
        "        // Need to find examples of producer-consumer implementations"
      ],
      "content_hash": "78fcd8d544640036",
      "created_at": "2025-06-08T13:13:54.280504"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 39,
      "content": "Temporary fix for memory alignment issue",
      "todo_type": "HACK",
      "confidence": 0.7,
      "priority_score": 27,
      "is_researchable": false,
      "context_lines": [
        "    void legacyCodeSection() {",
        "        // HACK: Temporary fix for memory alignment issue",
        "        // XXX: This workaround breaks on certain compilers"
      ],
      "content_hash": "902ac13a87ef0938",
      "created_at": "2025-06-08T13:13:54.280527"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 40,
      "content": "This workaround breaks on certain compilers",
      "todo_type": "XXX",
      "confidence": 0.7,
      "priority_score": 22,
      "is_researchable": false,
      "context_lines": [
        "        // HACK: Temporary fix for memory alignment issue",
        "        // XXX: This workaround breaks on certain compilers",
        "        char* buffer = reinterpret_cast<char*>(malloc(1024));"
      ],
      "content_hash": "c9c2c624bb7e6fc5",
      "created_at": "2025-06-08T13:13:54.280540"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 46,
      "content": "This function might benefit from refactoring",
      "todo_type": "NOTE",
      "confidence": 0.5,
      "priority_score": 15,
      "is_researchable": false,
      "context_lines": [
        "    void utilityFunction() {",
        "        // NOTE: This function might benefit from refactoring",
        "        // Consider splitting into smaller functions"
      ],
      "content_hash": "05d9581ef5115998",
      "created_at": "2025-06-08T13:13:54.280561"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 52,
      "content": "First, research async patterns",
      "todo_type": "TODO",
      "confidence": 0.9,
      "priority_score": 34,
      "is_researchable": true,
      "context_lines": [
        "    void complexComment() {",
        "        /* TODO: First, research async patterns",
        "         * FIXME: Then fix the race condition"
      ],
      "content_hash": "60921f8ee8d6f776",
      "created_at": "2025-06-08T13:13:54.280577"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 53,
      "content": "Then fix the race condition",
      "todo_type": "FIXME",
      "confidence": 0.9,
      "priority_score": 44,
      "is_researchable": false,
      "context_lines": [
        "        /* TODO: First, research async patterns",
        "         * FIXME: Then fix the race condition",
        "         * BUG: Also handle the memory leak"
      ],
      "content_hash": "21fb7e8545d42664",
      "created_at": "2025-06-08T13:13:54.280587"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 54,
      "content": "Also handle the memory leak",
      "todo_type": "BUG",
      "confidence": 0.9,
      "priority_score": 64,
      "is_researchable": false,
      "context_lines": [
        "         * FIXME: Then fix the race condition",
        "         * BUG: Also handle the memory leak",
        "         * NOTE: Consider performance implications"
      ],
      "content_hash": "46ace899eb292e6d",
      "created_at": "2025-06-08T13:13:54.280599"
    },
    {
      "file_path": "testdata/test_complex_scenarios.cpp",
      "line_number": 55,
      "content": "Consider performance implications",
      "todo_type": "NOTE",
      "confidence": 0.5,
      "priority_score": 30,
      "is_researchable": false,
      "context_lines": [
        "         * BUG: Also handle the memory leak",
        "         * NOTE: Consider performance implications",
        "         */"
      ],
      "content_hash": "e7b15279f3b40569",
      "created_at": "2025-06-08T13:13:54.280611"
    }
  ]
}