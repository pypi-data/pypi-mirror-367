name: Benchmark

permissions:
  contents: write

on:
  push:
    branches: [main]
    paths:
      - 'scripts/**'
      - 'src/**'
      - 'Cargo.*'
      - 'pyproject.toml'
  pull_request:
    paths:
      - 'scripts/**'
      - 'src/**'
      - 'Cargo.*'
      - 'pyproject.toml'
  schedule:
    - cron: '0 0 * * *'  # Daily benchmark

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dataset: ["small", "medium", "large"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history for commit info
          token: ${{ secrets.GITHUB_TOKEN }}  # Add token for write access

      - name: Get commit hash
        id: commit
        run: echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies and build
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install maturin numpy pandas plotly jinja2 scikit-learn faiss-cpu annoy psutil
          pip install .
          # Install Rust toolchain
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          source $HOME/.cargo/env
          maturin develop --release

      - name: Run benchmark
        shell: bash
        run: |
          source .venv/bin/activate
          mkdir -p benchmarks
          python scripts/benchmark.py \
            --dataset ${{ matrix.dataset }} \
            --output "benchmarks/${{ steps.commit.outputs.commit }}-${{ matrix.dataset }}.json"

      - name: Generate dashboard + badge
        shell: bash
        run: |
          source .venv/bin/activate
          python scripts/dashboard.py

      - name: Check for regressions
        shell: bash
        run: |
          source .venv/bin/activate
          python scripts/check_regression.py

      - name: Commit and push dashboard updates
        if: github.ref == 'refs/heads/main'  # Only push for main branch
        shell: bash
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -f benchmarks/*.json docs/index.html docs/dashboard-badge.svg
          git commit -m "chore: update benchmark dashboard [skip ci]" || echo "No changes to commit"
          # Push using token authentication
          git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main