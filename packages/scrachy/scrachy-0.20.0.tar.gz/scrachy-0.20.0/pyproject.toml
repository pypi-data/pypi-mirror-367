[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    "bump-my-version>=1.0.2",
    "livereload>=2.7.1",
    "pytest>=8.3.5",
    "sphinx-autoapi>=3.6.0",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx>=8.2.3",
    "toml-sort>=0.24.2",
    "pytest-postgresql>=7.0.1",
    "pytest-twisted>=1.14.3",
]

[project]
name = "scrachy"
version = "0.20.0"
description = "Provides an SqlAlchemy based cache storage backend, a Selenium middleware, and a few other utilities for working with Scrapy."
authors = [
    { name = "Reid Swanson", email = "reid@reidswanson.com" },
]
readme = "README.md"
keywords = [
    "httpcache",
    "scraping",
    "scrapy",
    "selenium",
]
requires-python = ">=3.12"
dependencies = [
    "cron-converter>=1.2.1",
    "msgspec>=0.19.0",
    "psutil>=7.0.0",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.2",
    "scrapy>=2.12.0",
    "selenium>=4.29.0",
    "twisted>=24.11.0",
    "w3lib>=2.3.1",
    "pywin32; os_name==\"nt\"",
    "sqlalchemy>=2.0.39",
    "sqlalchemy-utils>=0.41.2",
    "arrow>=1.3.0",
    "psycopg>=3.2.6",
    "scipy>=1.12.0",
    "rwskit[all]>=0.24.0",
]

[project.license]
file = "LICENSE.md"

[project.optional-dependencies]
all = [
    "scrachy[benchmark,content,html,mysql,postgresql]",
]
benchmark = [
    "tabulate>=0.9.0",
]
content = [
    "beautifulsoup4>=4.13.3",
    "boilerpy3>=1.0.7",
]
html = [
    "html5lib>=1.1",
    "lxml>=5.3.1",
]
mysql = [
    "pymysql>=1.1.1",
]
postgresql = [
    "psycopg>=3.2.6",
]

[project.urls]
Homepage = "https://bitbucket.org/reidswanson/scrachy"
Documentation = "https://scrachy.readthedocs.io/en/latest"

[tool.isort]
profile = "black"
case_sensitive = true
lines_after_imports = 1
lines_between_types = 1
import_heading_future = "Future Library"
import_heading_stdlib = "Standard Library"
import_heading_thirdparty = "3rd Party Library"
import_heading_firstparty = "1st Party Library"
import_heading_localfolder = "Project Library"

[tool.pytest.ini_options]
addopts = "--color=yes"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
console_output_style = "classic"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)-15s [%(name)s]:%(lineno)4d %(levelname)s %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
pythonpath = [
    "tests",
]
testpaths = [
    "tests",
]

[tool.ruff]
extend-select = [
    "I",
]
line-length = 88
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72
preview = true
quote-style = "double"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "T",
    "W",
    "C90",
    "I",
]
ignore = [
    "E501",
    "E741",
    "T201",
    "T203",
]

[tool.ruff.lint.isort]
lines-between-types = 1

[tool.pdm]
distribution = true
