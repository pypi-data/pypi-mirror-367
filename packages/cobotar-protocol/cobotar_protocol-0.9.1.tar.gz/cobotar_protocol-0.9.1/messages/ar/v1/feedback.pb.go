// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: ar/v1/feedback.proto

package arv1

import (
	v1 "github.com/cobotar/protocol/messages/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeedbackType int32

const (
	FeedbackType_FEEDBACK_TYPE_UNSPECIFIED         FeedbackType = 0
	FeedbackType_FEEDBACK_TYPE_TASK_HIGHLIGHT      FeedbackType = 10
	FeedbackType_FEEDBACK_TYPE_TASK_PART_HIGHLIGHT FeedbackType = 11
	FeedbackType_FEEDBACK_TYPE_TASK_TOOL_HIGHLIGHT FeedbackType = 12
	FeedbackType_FEEDBACK_TYPE_TASK_OVERVIEW       FeedbackType = 13
	FeedbackType_FEEDBACK_TYPE_ROBOT_PATH          FeedbackType = 50
	FeedbackType_FEEDBACK_TYPE_ROBOT_SILHOUETTE    FeedbackType = 51
	FeedbackType_FEEDBACK_TYPE_ROBOT_WAYPOINTS     FeedbackType = 52
	FeedbackType_FEEDBACK_TYPE_ROBOT_STATUS        FeedbackType = 53
	FeedbackType_FEEDBACK_TYPE_ROBOT_LIGHT         FeedbackType = 54
	FeedbackType_FEEDBACK_TYPE_MESSAGE             FeedbackType = 100
	FeedbackType_FEEDBACK_TYPE_ICON                FeedbackType = 101
	FeedbackType_FEEDBACK_TYPE_ZONE                FeedbackType = 102
	FeedbackType_FEEDBACK_TYPE_PLAY_SOUND          FeedbackType = 103
	FeedbackType_FEEDBACK_TYPE_RULER               FeedbackType = 104
)

// Enum value maps for FeedbackType.
var (
	FeedbackType_name = map[int32]string{
		0:   "FEEDBACK_TYPE_UNSPECIFIED",
		10:  "FEEDBACK_TYPE_TASK_HIGHLIGHT",
		11:  "FEEDBACK_TYPE_TASK_PART_HIGHLIGHT",
		12:  "FEEDBACK_TYPE_TASK_TOOL_HIGHLIGHT",
		13:  "FEEDBACK_TYPE_TASK_OVERVIEW",
		50:  "FEEDBACK_TYPE_ROBOT_PATH",
		51:  "FEEDBACK_TYPE_ROBOT_SILHOUETTE",
		52:  "FEEDBACK_TYPE_ROBOT_WAYPOINTS",
		53:  "FEEDBACK_TYPE_ROBOT_STATUS",
		54:  "FEEDBACK_TYPE_ROBOT_LIGHT",
		100: "FEEDBACK_TYPE_MESSAGE",
		101: "FEEDBACK_TYPE_ICON",
		102: "FEEDBACK_TYPE_ZONE",
		103: "FEEDBACK_TYPE_PLAY_SOUND",
		104: "FEEDBACK_TYPE_RULER",
	}
	FeedbackType_value = map[string]int32{
		"FEEDBACK_TYPE_UNSPECIFIED":         0,
		"FEEDBACK_TYPE_TASK_HIGHLIGHT":      10,
		"FEEDBACK_TYPE_TASK_PART_HIGHLIGHT": 11,
		"FEEDBACK_TYPE_TASK_TOOL_HIGHLIGHT": 12,
		"FEEDBACK_TYPE_TASK_OVERVIEW":       13,
		"FEEDBACK_TYPE_ROBOT_PATH":          50,
		"FEEDBACK_TYPE_ROBOT_SILHOUETTE":    51,
		"FEEDBACK_TYPE_ROBOT_WAYPOINTS":     52,
		"FEEDBACK_TYPE_ROBOT_STATUS":        53,
		"FEEDBACK_TYPE_ROBOT_LIGHT":         54,
		"FEEDBACK_TYPE_MESSAGE":             100,
		"FEEDBACK_TYPE_ICON":                101,
		"FEEDBACK_TYPE_ZONE":                102,
		"FEEDBACK_TYPE_PLAY_SOUND":          103,
		"FEEDBACK_TYPE_RULER":               104,
	}
)

func (x FeedbackType) Enum() *FeedbackType {
	p := new(FeedbackType)
	*p = x
	return p
}

func (x FeedbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_ar_v1_feedback_proto_enumTypes[0].Descriptor()
}

func (FeedbackType) Type() protoreflect.EnumType {
	return &file_ar_v1_feedback_proto_enumTypes[0]
}

func (x FeedbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedbackType.Descriptor instead.
func (FeedbackType) EnumDescriptor() ([]byte, []int) {
	return file_ar_v1_feedback_proto_rawDescGZIP(), []int{0}
}

type FeedbackMessage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon             string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Type             FeedbackType           `protobuf:"varint,5,opt,name=type,proto3,enum=ar.v1.FeedbackType" json:"type,omitempty"`
	Properties       []*v1.Property         `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
	OutputProperties []*v1.Property         `protobuf:"bytes,7,rep,name=output_properties,json=outputProperties,proto3" json:"output_properties,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FeedbackMessage) Reset() {
	*x = FeedbackMessage{}
	mi := &file_ar_v1_feedback_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedbackMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackMessage) ProtoMessage() {}

func (x *FeedbackMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ar_v1_feedback_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackMessage.ProtoReflect.Descriptor instead.
func (*FeedbackMessage) Descriptor() ([]byte, []int) {
	return file_ar_v1_feedback_proto_rawDescGZIP(), []int{0}
}

func (x *FeedbackMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedbackMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeedbackMessage) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *FeedbackMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeedbackMessage) GetType() FeedbackType {
	if x != nil {
		return x.Type
	}
	return FeedbackType_FEEDBACK_TYPE_UNSPECIFIED
}

func (x *FeedbackMessage) GetProperties() []*v1.Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *FeedbackMessage) GetOutputProperties() []*v1.Property {
	if x != nil {
		return x.OutputProperties
	}
	return nil
}

var File_ar_v1_feedback_proto protoreflect.FileDescriptor

const file_ar_v1_feedback_proto_rawDesc = "" +
	"\n" +
	"\x14ar/v1/feedback.proto\x12\x05ar.v1\x1a\x18common/v1/property.proto\"\x8b\x02\n" +
	"\x0fFeedbackMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\x04type\x18\x05 \x01(\x0e2\x13.ar.v1.FeedbackTypeR\x04type\x123\n" +
	"\n" +
	"properties\x18\x06 \x03(\v2\x13.common.v1.PropertyR\n" +
	"properties\x12@\n" +
	"\x11output_properties\x18\a \x03(\v2\x13.common.v1.PropertyR\x10outputProperties*\xe4\x03\n" +
	"\fFeedbackType\x12\x1d\n" +
	"\x19FEEDBACK_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cFEEDBACK_TYPE_TASK_HIGHLIGHT\x10\n" +
	"\x12%\n" +
	"!FEEDBACK_TYPE_TASK_PART_HIGHLIGHT\x10\v\x12%\n" +
	"!FEEDBACK_TYPE_TASK_TOOL_HIGHLIGHT\x10\f\x12\x1f\n" +
	"\x1bFEEDBACK_TYPE_TASK_OVERVIEW\x10\r\x12\x1c\n" +
	"\x18FEEDBACK_TYPE_ROBOT_PATH\x102\x12\"\n" +
	"\x1eFEEDBACK_TYPE_ROBOT_SILHOUETTE\x103\x12!\n" +
	"\x1dFEEDBACK_TYPE_ROBOT_WAYPOINTS\x104\x12\x1e\n" +
	"\x1aFEEDBACK_TYPE_ROBOT_STATUS\x105\x12\x1d\n" +
	"\x19FEEDBACK_TYPE_ROBOT_LIGHT\x106\x12\x19\n" +
	"\x15FEEDBACK_TYPE_MESSAGE\x10d\x12\x16\n" +
	"\x12FEEDBACK_TYPE_ICON\x10e\x12\x16\n" +
	"\x12FEEDBACK_TYPE_ZONE\x10f\x12\x1c\n" +
	"\x18FEEDBACK_TYPE_PLAY_SOUND\x10g\x12\x17\n" +
	"\x13FEEDBACK_TYPE_RULER\x10hB\x89\x01\n" +
	"\tcom.ar.v1B\rFeedbackProtoP\x01Z/github.com/cobotar/protocol/messages/ar/v1;arv1\xa2\x02\x03AXX\xaa\x02\x0eMessages.AR.V1\xca\x02\x05Ar\\V1\xe2\x02\x11Ar\\V1\\GPBMetadata\xea\x02\x06Ar::V1b\x06proto3"

var (
	file_ar_v1_feedback_proto_rawDescOnce sync.Once
	file_ar_v1_feedback_proto_rawDescData []byte
)

func file_ar_v1_feedback_proto_rawDescGZIP() []byte {
	file_ar_v1_feedback_proto_rawDescOnce.Do(func() {
		file_ar_v1_feedback_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ar_v1_feedback_proto_rawDesc), len(file_ar_v1_feedback_proto_rawDesc)))
	})
	return file_ar_v1_feedback_proto_rawDescData
}

var file_ar_v1_feedback_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ar_v1_feedback_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ar_v1_feedback_proto_goTypes = []any{
	(FeedbackType)(0),       // 0: ar.v1.FeedbackType
	(*FeedbackMessage)(nil), // 1: ar.v1.FeedbackMessage
	(*v1.Property)(nil),     // 2: common.v1.Property
}
var file_ar_v1_feedback_proto_depIdxs = []int32{
	0, // 0: ar.v1.FeedbackMessage.type:type_name -> ar.v1.FeedbackType
	2, // 1: ar.v1.FeedbackMessage.properties:type_name -> common.v1.Property
	2, // 2: ar.v1.FeedbackMessage.output_properties:type_name -> common.v1.Property
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ar_v1_feedback_proto_init() }
func file_ar_v1_feedback_proto_init() {
	if File_ar_v1_feedback_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ar_v1_feedback_proto_rawDesc), len(file_ar_v1_feedback_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ar_v1_feedback_proto_goTypes,
		DependencyIndexes: file_ar_v1_feedback_proto_depIdxs,
		EnumInfos:         file_ar_v1_feedback_proto_enumTypes,
		MessageInfos:      file_ar_v1_feedback_proto_msgTypes,
	}.Build()
	File_ar_v1_feedback_proto = out.File
	file_ar_v1_feedback_proto_goTypes = nil
	file_ar_v1_feedback_proto_depIdxs = nil
}
