// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: ar/v1/marker.proto

package arv1

import (
	v1 "github.com/cobotar/protocol/messages/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarkerType int32

const (
	MarkerType_MARKER_TYPE_UNSPECIFIED MarkerType = 0
	MarkerType_MARKER_TYPE_QR_CODE     MarkerType = 1
)

// Enum value maps for MarkerType.
var (
	MarkerType_name = map[int32]string{
		0: "MARKER_TYPE_UNSPECIFIED",
		1: "MARKER_TYPE_QR_CODE",
	}
	MarkerType_value = map[string]int32{
		"MARKER_TYPE_UNSPECIFIED": 0,
		"MARKER_TYPE_QR_CODE":     1,
	}
)

func (x MarkerType) Enum() *MarkerType {
	p := new(MarkerType)
	*p = x
	return p
}

func (x MarkerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarkerType) Descriptor() protoreflect.EnumDescriptor {
	return file_ar_v1_marker_proto_enumTypes[0].Descriptor()
}

func (MarkerType) Type() protoreflect.EnumType {
	return &file_ar_v1_marker_proto_enumTypes[0]
}

func (x MarkerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarkerType.Descriptor instead.
func (MarkerType) EnumDescriptor() ([]byte, []int) {
	return file_ar_v1_marker_proto_rawDescGZIP(), []int{0}
}

type MarkerMessage struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description         string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MarkerText          string                 `protobuf:"bytes,4,opt,name=marker_text,json=markerText,proto3" json:"marker_text,omitempty"` // Text on the physical marker (QR-code)
	Type                MarkerType             `protobuf:"varint,5,opt,name=type,proto3,enum=ar.v1.MarkerType" json:"type,omitempty"`
	Agents              []*v1.Agent            `protobuf:"bytes,6,rep,name=agents,proto3" json:"agents,omitempty"`                                                         // List of agents associated with this marker
	ArConfigs           []*ARConfigInfoMessage `protobuf:"bytes,7,rep,name=ar_configs,json=arConfigs,proto3" json:"ar_configs,omitempty"`                                  // List of ARConfigs which can be used to retrieve a specific configuration
	ArDisappearDistance int64                  `protobuf:"varint,8,opt,name=ar_disappear_distance,json=arDisappearDistance,proto3" json:"ar_disappear_distance,omitempty"` // Threshold distance in cm when the UI is expected to disable the AR for this marker
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MarkerMessage) Reset() {
	*x = MarkerMessage{}
	mi := &file_ar_v1_marker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkerMessage) ProtoMessage() {}

func (x *MarkerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ar_v1_marker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkerMessage.ProtoReflect.Descriptor instead.
func (*MarkerMessage) Descriptor() ([]byte, []int) {
	return file_ar_v1_marker_proto_rawDescGZIP(), []int{0}
}

func (x *MarkerMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MarkerMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarkerMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MarkerMessage) GetMarkerText() string {
	if x != nil {
		return x.MarkerText
	}
	return ""
}

func (x *MarkerMessage) GetType() MarkerType {
	if x != nil {
		return x.Type
	}
	return MarkerType_MARKER_TYPE_UNSPECIFIED
}

func (x *MarkerMessage) GetAgents() []*v1.Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *MarkerMessage) GetArConfigs() []*ARConfigInfoMessage {
	if x != nil {
		return x.ArConfigs
	}
	return nil
}

func (x *MarkerMessage) GetArDisappearDistance() int64 {
	if x != nil {
		return x.ArDisappearDistance
	}
	return 0
}

type MarkersMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markers       []*MarkerMessage       `protobuf:"bytes,1,rep,name=markers,proto3" json:"markers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkersMessage) Reset() {
	*x = MarkersMessage{}
	mi := &file_ar_v1_marker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkersMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkersMessage) ProtoMessage() {}

func (x *MarkersMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ar_v1_marker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkersMessage.ProtoReflect.Descriptor instead.
func (*MarkersMessage) Descriptor() ([]byte, []int) {
	return file_ar_v1_marker_proto_rawDescGZIP(), []int{1}
}

func (x *MarkersMessage) GetMarkers() []*MarkerMessage {
	if x != nil {
		return x.Markers
	}
	return nil
}

var File_ar_v1_marker_proto protoreflect.FileDescriptor

const file_ar_v1_marker_proto_rawDesc = "" +
	"\n" +
	"\x12ar/v1/marker.proto\x12\x05ar.v1\x1a\x12ar/v1/config.proto\x1a\x15common/v1/agent.proto\"\xb6\x02\n" +
	"\rMarkerMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vmarker_text\x18\x04 \x01(\tR\n" +
	"markerText\x12%\n" +
	"\x04type\x18\x05 \x01(\x0e2\x11.ar.v1.MarkerTypeR\x04type\x12(\n" +
	"\x06agents\x18\x06 \x03(\v2\x10.common.v1.AgentR\x06agents\x129\n" +
	"\n" +
	"ar_configs\x18\a \x03(\v2\x1a.ar.v1.ARConfigInfoMessageR\tarConfigs\x122\n" +
	"\x15ar_disappear_distance\x18\b \x01(\x03R\x13arDisappearDistance\"@\n" +
	"\x0eMarkersMessage\x12.\n" +
	"\amarkers\x18\x01 \x03(\v2\x14.ar.v1.MarkerMessageR\amarkers*B\n" +
	"\n" +
	"MarkerType\x12\x1b\n" +
	"\x17MARKER_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13MARKER_TYPE_QR_CODE\x10\x01B\x87\x01\n" +
	"\tcom.ar.v1B\vMarkerProtoP\x01Z/github.com/cobotar/protocol/messages/ar/v1;arv1\xa2\x02\x03AXX\xaa\x02\x0eMessages.AR.V1\xca\x02\x05Ar\\V1\xe2\x02\x11Ar\\V1\\GPBMetadata\xea\x02\x06Ar::V1b\x06proto3"

var (
	file_ar_v1_marker_proto_rawDescOnce sync.Once
	file_ar_v1_marker_proto_rawDescData []byte
)

func file_ar_v1_marker_proto_rawDescGZIP() []byte {
	file_ar_v1_marker_proto_rawDescOnce.Do(func() {
		file_ar_v1_marker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ar_v1_marker_proto_rawDesc), len(file_ar_v1_marker_proto_rawDesc)))
	})
	return file_ar_v1_marker_proto_rawDescData
}

var file_ar_v1_marker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ar_v1_marker_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ar_v1_marker_proto_goTypes = []any{
	(MarkerType)(0),             // 0: ar.v1.MarkerType
	(*MarkerMessage)(nil),       // 1: ar.v1.MarkerMessage
	(*MarkersMessage)(nil),      // 2: ar.v1.MarkersMessage
	(*v1.Agent)(nil),            // 3: common.v1.Agent
	(*ARConfigInfoMessage)(nil), // 4: ar.v1.ARConfigInfoMessage
}
var file_ar_v1_marker_proto_depIdxs = []int32{
	0, // 0: ar.v1.MarkerMessage.type:type_name -> ar.v1.MarkerType
	3, // 1: ar.v1.MarkerMessage.agents:type_name -> common.v1.Agent
	4, // 2: ar.v1.MarkerMessage.ar_configs:type_name -> ar.v1.ARConfigInfoMessage
	1, // 3: ar.v1.MarkersMessage.markers:type_name -> ar.v1.MarkerMessage
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ar_v1_marker_proto_init() }
func file_ar_v1_marker_proto_init() {
	if File_ar_v1_marker_proto != nil {
		return
	}
	file_ar_v1_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ar_v1_marker_proto_rawDesc), len(file_ar_v1_marker_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ar_v1_marker_proto_goTypes,
		DependencyIndexes: file_ar_v1_marker_proto_depIdxs,
		EnumInfos:         file_ar_v1_marker_proto_enumTypes,
		MessageInfos:      file_ar_v1_marker_proto_msgTypes,
	}.Build()
	File_ar_v1_marker_proto = out.File
	file_ar_v1_marker_proto_goTypes = nil
	file_ar_v1_marker_proto_depIdxs = nil
}
