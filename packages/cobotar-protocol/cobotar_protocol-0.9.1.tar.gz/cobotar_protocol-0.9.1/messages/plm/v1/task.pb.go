// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: plm/v1/task.proto

package plmv1

import (
	v1 "github.com/cobotar/protocol/messages/geometry/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskState int32

const (
	TaskState_TASK_STATE_UNSPECIFIED          TaskState = 0
	TaskState_TASK_STATE_MISSING_PRECONDITION TaskState = 1
	TaskState_TASK_STATE_WAITING              TaskState = 2
	TaskState_TASK_STATE_IN_PROGRESS          TaskState = 3
	TaskState_TASK_STATE_COMPLETED            TaskState = 4
	TaskState_TASK_STATE_ERROR                TaskState = 6
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "TASK_STATE_UNSPECIFIED",
		1: "TASK_STATE_MISSING_PRECONDITION",
		2: "TASK_STATE_WAITING",
		3: "TASK_STATE_IN_PROGRESS",
		4: "TASK_STATE_COMPLETED",
		6: "TASK_STATE_ERROR",
	}
	TaskState_value = map[string]int32{
		"TASK_STATE_UNSPECIFIED":          0,
		"TASK_STATE_MISSING_PRECONDITION": 1,
		"TASK_STATE_WAITING":              2,
		"TASK_STATE_IN_PROGRESS":          3,
		"TASK_STATE_COMPLETED":            4,
		"TASK_STATE_ERROR":                6,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_plm_v1_task_proto_enumTypes[0].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_plm_v1_task_proto_enumTypes[0]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_plm_v1_task_proto_rawDescGZIP(), []int{0}
}

type TaskType int32

const (
	TaskType_TASK_TYPE_UNSPECIFIED TaskType = 0
	TaskType_TASK_TYPE_INSPECT     TaskType = 1
	TaskType_TASK_TYPE_FASTEN      TaskType = 2
	TaskType_TASK_TYPE_UNFASTEN    TaskType = 3
	TaskType_TASK_TYPE_MOUNT       TaskType = 4
	TaskType_TASK_TYPE_UNMOUNT     TaskType = 5
	TaskType_TASK_TYPE_MOVE        TaskType = 6
	TaskType_TASK_TYPE_REMOVE      TaskType = 7
	TaskType_TASK_TYPE_APPLY       TaskType = 8
	TaskType_TASK_TYPE_WIPE        TaskType = 9
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_TYPE_UNSPECIFIED",
		1: "TASK_TYPE_INSPECT",
		2: "TASK_TYPE_FASTEN",
		3: "TASK_TYPE_UNFASTEN",
		4: "TASK_TYPE_MOUNT",
		5: "TASK_TYPE_UNMOUNT",
		6: "TASK_TYPE_MOVE",
		7: "TASK_TYPE_REMOVE",
		8: "TASK_TYPE_APPLY",
		9: "TASK_TYPE_WIPE",
	}
	TaskType_value = map[string]int32{
		"TASK_TYPE_UNSPECIFIED": 0,
		"TASK_TYPE_INSPECT":     1,
		"TASK_TYPE_FASTEN":      2,
		"TASK_TYPE_UNFASTEN":    3,
		"TASK_TYPE_MOUNT":       4,
		"TASK_TYPE_UNMOUNT":     5,
		"TASK_TYPE_MOVE":        6,
		"TASK_TYPE_REMOVE":      7,
		"TASK_TYPE_APPLY":       8,
		"TASK_TYPE_WIPE":        9,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_plm_v1_task_proto_enumTypes[1].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_plm_v1_task_proto_enumTypes[1]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_plm_v1_task_proto_rawDescGZIP(), []int{1}
}

type TaskAssignmentPreference int32

const (
	TaskAssignmentPreference_TASK_ASSIGNMENT_PREFERENCE_UNSPECIFIED  TaskAssignmentPreference = 0
	TaskAssignmentPreference_TASK_ASSIGNMENT_PREFERENCE_PREFER_HUMAN TaskAssignmentPreference = 1
	TaskAssignmentPreference_TASK_ASSIGNMENT_PREFERENCE_ONLY_HUMAN   TaskAssignmentPreference = 2
	TaskAssignmentPreference_TASK_ASSIGNMENT_PREFERENCE_PREFER_ROBOT TaskAssignmentPreference = 3
	TaskAssignmentPreference_TASK_ASSIGNMENT_PREFERENCE_ONLY_ROBOT   TaskAssignmentPreference = 4
)

// Enum value maps for TaskAssignmentPreference.
var (
	TaskAssignmentPreference_name = map[int32]string{
		0: "TASK_ASSIGNMENT_PREFERENCE_UNSPECIFIED",
		1: "TASK_ASSIGNMENT_PREFERENCE_PREFER_HUMAN",
		2: "TASK_ASSIGNMENT_PREFERENCE_ONLY_HUMAN",
		3: "TASK_ASSIGNMENT_PREFERENCE_PREFER_ROBOT",
		4: "TASK_ASSIGNMENT_PREFERENCE_ONLY_ROBOT",
	}
	TaskAssignmentPreference_value = map[string]int32{
		"TASK_ASSIGNMENT_PREFERENCE_UNSPECIFIED":  0,
		"TASK_ASSIGNMENT_PREFERENCE_PREFER_HUMAN": 1,
		"TASK_ASSIGNMENT_PREFERENCE_ONLY_HUMAN":   2,
		"TASK_ASSIGNMENT_PREFERENCE_PREFER_ROBOT": 3,
		"TASK_ASSIGNMENT_PREFERENCE_ONLY_ROBOT":   4,
	}
)

func (x TaskAssignmentPreference) Enum() *TaskAssignmentPreference {
	p := new(TaskAssignmentPreference)
	*p = x
	return p
}

func (x TaskAssignmentPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskAssignmentPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_plm_v1_task_proto_enumTypes[2].Descriptor()
}

func (TaskAssignmentPreference) Type() protoreflect.EnumType {
	return &file_plm_v1_task_proto_enumTypes[2]
}

func (x TaskAssignmentPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskAssignmentPreference.Descriptor instead.
func (TaskAssignmentPreference) EnumDescriptor() ([]byte, []int) {
	return file_plm_v1_task_proto_rawDescGZIP(), []int{2}
}

type TaskMessage struct {
	state                protoimpl.MessageState   `protogen:"open.v1"`
	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SequenceNumber       int64                    `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	PartId               string                   `protobuf:"bytes,5,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	ModelId              string                   `protobuf:"bytes,6,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	TaskType             TaskType                 `protobuf:"varint,7,opt,name=task_type,json=taskType,proto3,enum=plm.v1.TaskType" json:"task_type,omitempty"`
	Target               *v1.LocalizedPose        `protobuf:"bytes,8,opt,name=target,proto3" json:"target,omitempty"`
	Approach             *v1.Vector3              `protobuf:"bytes,9,opt,name=approach,proto3" json:"approach,omitempty"`
	ParentId             string                   `protobuf:"bytes,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	AgentsIds            []string                 `protobuf:"bytes,11,rep,name=agents_ids,json=agentsIds,proto3" json:"agents_ids,omitempty"`
	AssignedTo           string                   `protobuf:"bytes,12,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"`
	State                TaskState                `protobuf:"varint,13,opt,name=state,proto3,enum=plm.v1.TaskState" json:"state,omitempty"`
	Preconditions        []string                 `protobuf:"bytes,14,rep,name=preconditions,proto3" json:"preconditions,omitempty"`
	Dependants           []string                 `protobuf:"bytes,15,rep,name=dependants,proto3" json:"dependants,omitempty"`
	AssignmentPreference TaskAssignmentPreference `protobuf:"varint,19,opt,name=assignment_preference,json=assignmentPreference,proto3,enum=plm.v1.TaskAssignmentPreference" json:"assignment_preference,omitempty"`
	CanReassign          bool                     `protobuf:"varint,16,opt,name=can_reassign,json=canReassign,proto3" json:"can_reassign,omitempty"`
	CanDo                bool                     `protobuf:"varint,17,opt,name=can_do,json=canDo,proto3" json:"can_do,omitempty"`
	CanUndo              bool                     `protobuf:"varint,18,opt,name=can_undo,json=canUndo,proto3" json:"can_undo,omitempty"` // TODO: 'complete-importance': could be different levels of "this must be explicitly completed" or tie it together with user level, such that expertise level (expert, intermediate, novice) equal and above intermediate can {bulk, automatic, ... } complete and below must explicitly complete. This should potentially also be tied to the part and this field(s) can then be a custom override for this specific task.
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TaskMessage) Reset() {
	*x = TaskMessage{}
	mi := &file_plm_v1_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMessage) ProtoMessage() {}

func (x *TaskMessage) ProtoReflect() protoreflect.Message {
	mi := &file_plm_v1_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMessage.ProtoReflect.Descriptor instead.
func (*TaskMessage) Descriptor() ([]byte, []int) {
	return file_plm_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *TaskMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskMessage) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *TaskMessage) GetPartId() string {
	if x != nil {
		return x.PartId
	}
	return ""
}

func (x *TaskMessage) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TaskMessage) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_TYPE_UNSPECIFIED
}

func (x *TaskMessage) GetTarget() *v1.LocalizedPose {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *TaskMessage) GetApproach() *v1.Vector3 {
	if x != nil {
		return x.Approach
	}
	return nil
}

func (x *TaskMessage) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *TaskMessage) GetAgentsIds() []string {
	if x != nil {
		return x.AgentsIds
	}
	return nil
}

func (x *TaskMessage) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *TaskMessage) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_UNSPECIFIED
}

func (x *TaskMessage) GetPreconditions() []string {
	if x != nil {
		return x.Preconditions
	}
	return nil
}

func (x *TaskMessage) GetDependants() []string {
	if x != nil {
		return x.Dependants
	}
	return nil
}

func (x *TaskMessage) GetAssignmentPreference() TaskAssignmentPreference {
	if x != nil {
		return x.AssignmentPreference
	}
	return TaskAssignmentPreference_TASK_ASSIGNMENT_PREFERENCE_UNSPECIFIED
}

func (x *TaskMessage) GetCanReassign() bool {
	if x != nil {
		return x.CanReassign
	}
	return false
}

func (x *TaskMessage) GetCanDo() bool {
	if x != nil {
		return x.CanDo
	}
	return false
}

func (x *TaskMessage) GetCanUndo() bool {
	if x != nil {
		return x.CanUndo
	}
	return false
}

type TaskUpdatedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssignedTo    string                 `protobuf:"bytes,2,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"`
	State         TaskState              `protobuf:"varint,3,opt,name=state,proto3,enum=plm.v1.TaskState" json:"state,omitempty"`
	CanReassign   bool                   `protobuf:"varint,4,opt,name=can_reassign,json=canReassign,proto3" json:"can_reassign,omitempty"`
	CanDo         bool                   `protobuf:"varint,5,opt,name=can_do,json=canDo,proto3" json:"can_do,omitempty"`
	CanUndo       bool                   `protobuf:"varint,6,opt,name=can_undo,json=canUndo,proto3" json:"can_undo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdatedMessage) Reset() {
	*x = TaskUpdatedMessage{}
	mi := &file_plm_v1_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdatedMessage) ProtoMessage() {}

func (x *TaskUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_plm_v1_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdatedMessage.ProtoReflect.Descriptor instead.
func (*TaskUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_plm_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *TaskUpdatedMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskUpdatedMessage) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *TaskUpdatedMessage) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_UNSPECIFIED
}

func (x *TaskUpdatedMessage) GetCanReassign() bool {
	if x != nil {
		return x.CanReassign
	}
	return false
}

func (x *TaskUpdatedMessage) GetCanDo() bool {
	if x != nil {
		return x.CanDo
	}
	return false
}

func (x *TaskUpdatedMessage) GetCanUndo() bool {
	if x != nil {
		return x.CanUndo
	}
	return false
}

var File_plm_v1_task_proto protoreflect.FileDescriptor

const file_plm_v1_task_proto_rawDesc = "" +
	"\n" +
	"\x11plm/v1/task.proto\x12\x06plm.v1\x1a\x16geometry/v1/pose.proto\x1a\x19geometry/v1/vector3.proto\"\xbd\x05\n" +
	"\vTaskMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x03R\x0esequenceNumber\x12\x17\n" +
	"\apart_id\x18\x05 \x01(\tR\x06partId\x12\x19\n" +
	"\bmodel_id\x18\x06 \x01(\tR\amodelId\x12-\n" +
	"\ttask_type\x18\a \x01(\x0e2\x10.plm.v1.TaskTypeR\btaskType\x122\n" +
	"\x06target\x18\b \x01(\v2\x1a.geometry.v1.LocalizedPoseR\x06target\x120\n" +
	"\bapproach\x18\t \x01(\v2\x14.geometry.v1.Vector3R\bapproach\x12\x1b\n" +
	"\tparent_id\x18\n" +
	" \x01(\tR\bparentId\x12\x1d\n" +
	"\n" +
	"agents_ids\x18\v \x03(\tR\tagentsIds\x12\x1f\n" +
	"\vassigned_to\x18\f \x01(\tR\n" +
	"assignedTo\x12'\n" +
	"\x05state\x18\r \x01(\x0e2\x11.plm.v1.TaskStateR\x05state\x12$\n" +
	"\rpreconditions\x18\x0e \x03(\tR\rpreconditions\x12\x1e\n" +
	"\n" +
	"dependants\x18\x0f \x03(\tR\n" +
	"dependants\x12U\n" +
	"\x15assignment_preference\x18\x13 \x01(\x0e2 .plm.v1.TaskAssignmentPreferenceR\x14assignmentPreference\x12!\n" +
	"\fcan_reassign\x18\x10 \x01(\bR\vcanReassign\x12\x15\n" +
	"\x06can_do\x18\x11 \x01(\bR\x05canDo\x12\x19\n" +
	"\bcan_undo\x18\x12 \x01(\bR\acanUndo\"\xc3\x01\n" +
	"\x12TaskUpdatedMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vassigned_to\x18\x02 \x01(\tR\n" +
	"assignedTo\x12'\n" +
	"\x05state\x18\x03 \x01(\x0e2\x11.plm.v1.TaskStateR\x05state\x12!\n" +
	"\fcan_reassign\x18\x04 \x01(\bR\vcanReassign\x12\x15\n" +
	"\x06can_do\x18\x05 \x01(\bR\x05canDo\x12\x19\n" +
	"\bcan_undo\x18\x06 \x01(\bR\acanUndo*\xb0\x01\n" +
	"\tTaskState\x12\x1a\n" +
	"\x16TASK_STATE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fTASK_STATE_MISSING_PRECONDITION\x10\x01\x12\x16\n" +
	"\x12TASK_STATE_WAITING\x10\x02\x12\x1a\n" +
	"\x16TASK_STATE_IN_PROGRESS\x10\x03\x12\x18\n" +
	"\x14TASK_STATE_COMPLETED\x10\x04\x12\x14\n" +
	"\x10TASK_STATE_ERROR\x10\x06*\xe9\x01\n" +
	"\bTaskType\x12\x19\n" +
	"\x15TASK_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TASK_TYPE_INSPECT\x10\x01\x12\x14\n" +
	"\x10TASK_TYPE_FASTEN\x10\x02\x12\x16\n" +
	"\x12TASK_TYPE_UNFASTEN\x10\x03\x12\x13\n" +
	"\x0fTASK_TYPE_MOUNT\x10\x04\x12\x15\n" +
	"\x11TASK_TYPE_UNMOUNT\x10\x05\x12\x12\n" +
	"\x0eTASK_TYPE_MOVE\x10\x06\x12\x14\n" +
	"\x10TASK_TYPE_REMOVE\x10\a\x12\x13\n" +
	"\x0fTASK_TYPE_APPLY\x10\b\x12\x12\n" +
	"\x0eTASK_TYPE_WIPE\x10\t*\xf6\x01\n" +
	"\x18TaskAssignmentPreference\x12*\n" +
	"&TASK_ASSIGNMENT_PREFERENCE_UNSPECIFIED\x10\x00\x12+\n" +
	"'TASK_ASSIGNMENT_PREFERENCE_PREFER_HUMAN\x10\x01\x12)\n" +
	"%TASK_ASSIGNMENT_PREFERENCE_ONLY_HUMAN\x10\x02\x12+\n" +
	"'TASK_ASSIGNMENT_PREFERENCE_PREFER_ROBOT\x10\x03\x12)\n" +
	"%TASK_ASSIGNMENT_PREFERENCE_ONLY_ROBOT\x10\x04B\x8c\x01\n" +
	"\n" +
	"com.plm.v1B\tTaskProtoP\x01Z1github.com/cobotar/protocol/messages/plm/v1;plmv1\xa2\x02\x03PXX\xaa\x02\x0fMessages.Plm.V1\xca\x02\x06Plm\\V1\xe2\x02\x12Plm\\V1\\GPBMetadata\xea\x02\aPlm::V1b\x06proto3"

var (
	file_plm_v1_task_proto_rawDescOnce sync.Once
	file_plm_v1_task_proto_rawDescData []byte
)

func file_plm_v1_task_proto_rawDescGZIP() []byte {
	file_plm_v1_task_proto_rawDescOnce.Do(func() {
		file_plm_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plm_v1_task_proto_rawDesc), len(file_plm_v1_task_proto_rawDesc)))
	})
	return file_plm_v1_task_proto_rawDescData
}

var file_plm_v1_task_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_plm_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_plm_v1_task_proto_goTypes = []any{
	(TaskState)(0),                // 0: plm.v1.TaskState
	(TaskType)(0),                 // 1: plm.v1.TaskType
	(TaskAssignmentPreference)(0), // 2: plm.v1.TaskAssignmentPreference
	(*TaskMessage)(nil),           // 3: plm.v1.TaskMessage
	(*TaskUpdatedMessage)(nil),    // 4: plm.v1.TaskUpdatedMessage
	(*v1.LocalizedPose)(nil),      // 5: geometry.v1.LocalizedPose
	(*v1.Vector3)(nil),            // 6: geometry.v1.Vector3
}
var file_plm_v1_task_proto_depIdxs = []int32{
	1, // 0: plm.v1.TaskMessage.task_type:type_name -> plm.v1.TaskType
	5, // 1: plm.v1.TaskMessage.target:type_name -> geometry.v1.LocalizedPose
	6, // 2: plm.v1.TaskMessage.approach:type_name -> geometry.v1.Vector3
	0, // 3: plm.v1.TaskMessage.state:type_name -> plm.v1.TaskState
	2, // 4: plm.v1.TaskMessage.assignment_preference:type_name -> plm.v1.TaskAssignmentPreference
	0, // 5: plm.v1.TaskUpdatedMessage.state:type_name -> plm.v1.TaskState
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_plm_v1_task_proto_init() }
func file_plm_v1_task_proto_init() {
	if File_plm_v1_task_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plm_v1_task_proto_rawDesc), len(file_plm_v1_task_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plm_v1_task_proto_goTypes,
		DependencyIndexes: file_plm_v1_task_proto_depIdxs,
		EnumInfos:         file_plm_v1_task_proto_enumTypes,
		MessageInfos:      file_plm_v1_task_proto_msgTypes,
	}.Build()
	File_plm_v1_task_proto = out.File
	file_plm_v1_task_proto_goTypes = nil
	file_plm_v1_task_proto_depIdxs = nil
}
