// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: robot/v1/tcp.proto

package robotv1

import (
	v1 "github.com/cobotar/protocol/messages/geometry/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TcpMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotId       string                 `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	Position      *v1.Point              `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Orientation   *v1.Quad               `protobuf:"bytes,3,opt,name=orientation,proto3" json:"orientation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TcpMessage) Reset() {
	*x = TcpMessage{}
	mi := &file_robot_v1_tcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TcpMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpMessage) ProtoMessage() {}

func (x *TcpMessage) ProtoReflect() protoreflect.Message {
	mi := &file_robot_v1_tcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpMessage.ProtoReflect.Descriptor instead.
func (*TcpMessage) Descriptor() ([]byte, []int) {
	return file_robot_v1_tcp_proto_rawDescGZIP(), []int{0}
}

func (x *TcpMessage) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *TcpMessage) GetPosition() *v1.Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *TcpMessage) GetOrientation() *v1.Quad {
	if x != nil {
		return x.Orientation
	}
	return nil
}

var File_robot_v1_tcp_proto protoreflect.FileDescriptor

const file_robot_v1_tcp_proto_rawDesc = "" +
	"\n" +
	"\x12robot/v1/tcp.proto\x12\brobot.v1\x1a\x17geometry/v1/point.proto\x1a\x16geometry/v1/quad.proto\"\x8c\x01\n" +
	"\n" +
	"TcpMessage\x12\x19\n" +
	"\brobot_id\x18\x01 \x01(\tR\arobotId\x12.\n" +
	"\bposition\x18\x02 \x01(\v2\x12.geometry.v1.PointR\bposition\x123\n" +
	"\vorientation\x18\x03 \x01(\v2\x11.geometry.v1.QuadR\vorientationB\x9a\x01\n" +
	"\fcom.robot.v1B\bTcpProtoP\x01Z5github.com/cobotar/protocol/messages/robot/v1;robotv1\xa2\x02\x03RXX\xaa\x02\x12Messages.Common.V1\xca\x02\bRobot\\V1\xe2\x02\x14Robot\\V1\\GPBMetadata\xea\x02\tRobot::V1b\x06proto3"

var (
	file_robot_v1_tcp_proto_rawDescOnce sync.Once
	file_robot_v1_tcp_proto_rawDescData []byte
)

func file_robot_v1_tcp_proto_rawDescGZIP() []byte {
	file_robot_v1_tcp_proto_rawDescOnce.Do(func() {
		file_robot_v1_tcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_robot_v1_tcp_proto_rawDesc), len(file_robot_v1_tcp_proto_rawDesc)))
	})
	return file_robot_v1_tcp_proto_rawDescData
}

var file_robot_v1_tcp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_robot_v1_tcp_proto_goTypes = []any{
	(*TcpMessage)(nil), // 0: robot.v1.TcpMessage
	(*v1.Point)(nil),   // 1: geometry.v1.Point
	(*v1.Quad)(nil),    // 2: geometry.v1.Quad
}
var file_robot_v1_tcp_proto_depIdxs = []int32{
	1, // 0: robot.v1.TcpMessage.position:type_name -> geometry.v1.Point
	2, // 1: robot.v1.TcpMessage.orientation:type_name -> geometry.v1.Quad
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_robot_v1_tcp_proto_init() }
func file_robot_v1_tcp_proto_init() {
	if File_robot_v1_tcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_robot_v1_tcp_proto_rawDesc), len(file_robot_v1_tcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_robot_v1_tcp_proto_goTypes,
		DependencyIndexes: file_robot_v1_tcp_proto_depIdxs,
		MessageInfos:      file_robot_v1_tcp_proto_msgTypes,
	}.Build()
	File_robot_v1_tcp_proto = out.File
	file_robot_v1_tcp_proto_goTypes = nil
	file_robot_v1_tcp_proto_depIdxs = nil
}
