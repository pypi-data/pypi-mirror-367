// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: plm/v1/sequence.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messages.Plm.V1 {

  /// <summary>Holder for reflection information generated from plm/v1/sequence.proto</summary>
  public static partial class SequenceReflection {

    #region Descriptor
    /// <summary>File descriptor for plm/v1/sequence.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SequenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwbG0vdjEvc2VxdWVuY2UucHJvdG8SBnBsbS52MRoWZ2VvbWV0cnkvdjEv",
            "cG9zZS5wcm90byKwAwoPU2VxdWVuY2VNZXNzYWdlEg4KAmlkGAEgASgJUgJp",
            "ZBISCgRuYW1lGAIgASgJUgRuYW1lEiAKC2Rlc2NyaXB0aW9uGAMgASgJUgtk",
            "ZXNjcmlwdGlvbhInCg9zZXF1ZW5jZV9udW1iZXIYBCABKANSDnNlcXVlbmNl",
            "TnVtYmVyEjAKBWZyYW1lGAUgASgLMhouZ2VvbWV0cnkudjEuTG9jYWxpemVk",
            "UG9zZVIFZnJhbWUSGwoJcGFyZW50X2lkGAYgASgJUghwYXJlbnRJZBIhCgxz",
            "ZXF1ZW5jZV9pZHMYByADKAlSC3NlcXVlbmNlSWRzEhkKCHRhc2tfaWRzGAgg",
            "AygJUgd0YXNrSWRzEh8KC2Fzc2lnbmVkX3RvGAkgAygJUgphc3NpZ25lZFRv",
            "EisKBXN0YXRlGAogASgOMhUucGxtLnYxLlNlcXVlbmNlU3RhdGVSBXN0YXRl",
            "EicKD2NvbXBsZXRlZF90YXNrcxgLIAEoA1IOY29tcGxldGVkVGFza3MSKgoR",
            "Y2FuX2J1bGtfY29tcGxldGUYDCABKAhSD2NhbkJ1bGtDb21wbGV0ZSKwAQoW",
            "U2VxdWVuY2VVcGRhdGVkTWVzc2FnZRIfCgtzZXF1ZW5jZV9pZBgBIAEoCVIK",
            "c2VxdWVuY2VJZBIfCgthc3NpZ25lZF90bxgCIAMoCVIKYXNzaWduZWRUbxIr",
            "CgVzdGF0ZRgDIAEoDjIVLnBsbS52MS5TZXF1ZW5jZVN0YXRlUgVzdGF0ZRIn",
            "Cg9jb21wbGV0ZWRfdGFza3MYBCABKANSDmNvbXBsZXRlZFRhc2tzKrIBCg1T",
            "ZXF1ZW5jZVN0YXRlEh4KGlNFUVVFTkNFX1NUQVRFX1VOU1BFQ0lGSUVEEAAS",
            "JwojU0VRVUVOQ0VfU1RBVEVfTUlTU0lOR19QUkVDT05ESVRJT04QARIaChZT",
            "RVFVRU5DRV9TVEFURV9XQUlUSU5HEAISHgoaU0VRVUVOQ0VfU1RBVEVfSU5f",
            "UFJPR1JFU1MQAxIcChhTRVFVRU5DRV9TVEFURV9DT01QTEVURUQQBEKQAQoK",
            "Y29tLnBsbS52MUINU2VxdWVuY2VQcm90b1ABWjFnaXRodWIuY29tL2NvYm90",
            "YXIvcHJvdG9jb2wvbWVzc2FnZXMvcGxtL3YxO3BsbXYxogIDUFhYqgIPTWVz",
            "c2FnZXMuUGxtLlYxygIGUGxtXFYx4gISUGxtXFYxXEdQQk1ldGFkYXRh6gIH",
            "UGxtOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Messages.Common.V1.PoseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Messages.Plm.V1.SequenceState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Plm.V1.SequenceMessage), global::Messages.Plm.V1.SequenceMessage.Parser, new[]{ "Id", "Name", "Description", "SequenceNumber", "Frame", "ParentId", "SequenceIds", "TaskIds", "AssignedTo", "State", "CompletedTasks", "CanBulkComplete" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Plm.V1.SequenceUpdatedMessage), global::Messages.Plm.V1.SequenceUpdatedMessage.Parser, new[]{ "SequenceId", "AssignedTo", "State", "CompletedTasks" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SequenceState {
    [pbr::OriginalName("SEQUENCE_STATE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("SEQUENCE_STATE_MISSING_PRECONDITION")] MissingPrecondition = 1,
    [pbr::OriginalName("SEQUENCE_STATE_WAITING")] Waiting = 2,
    [pbr::OriginalName("SEQUENCE_STATE_IN_PROGRESS")] InProgress = 3,
    [pbr::OriginalName("SEQUENCE_STATE_COMPLETED")] Completed = 4,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SequenceMessage : pb::IMessage<SequenceMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SequenceMessage> _parser = new pb::MessageParser<SequenceMessage>(() => new SequenceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SequenceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.Plm.V1.SequenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SequenceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SequenceMessage(SequenceMessage other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      sequenceNumber_ = other.sequenceNumber_;
      frame_ = other.frame_ != null ? other.frame_.Clone() : null;
      parentId_ = other.parentId_;
      sequenceIds_ = other.sequenceIds_.Clone();
      taskIds_ = other.taskIds_.Clone();
      assignedTo_ = other.assignedTo_.Clone();
      state_ = other.state_;
      completedTasks_ = other.completedTasks_;
      canBulkComplete_ = other.canBulkComplete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SequenceMessage Clone() {
      return new SequenceMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 4;
    private long sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "frame" field.</summary>
    public const int FrameFieldNumber = 5;
    private global::Messages.Common.V1.LocalizedPose frame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Messages.Common.V1.LocalizedPose Frame {
      get { return frame_; }
      set {
        frame_ = value;
      }
    }

    /// <summary>Field number for the "parent_id" field.</summary>
    public const int ParentIdFieldNumber = 6;
    private string parentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParentId {
      get { return parentId_; }
      set {
        parentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_ids" field.</summary>
    public const int SequenceIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_sequenceIds_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> sequenceIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SequenceIds {
      get { return sequenceIds_; }
    }

    /// <summary>Field number for the "task_ids" field.</summary>
    public const int TaskIdsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_taskIds_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> taskIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TaskIds {
      get { return taskIds_; }
    }

    /// <summary>Field number for the "assigned_to" field.</summary>
    public const int AssignedToFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_assignedTo_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> assignedTo_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AssignedTo {
      get { return assignedTo_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 10;
    private global::Messages.Plm.V1.SequenceState state_ = global::Messages.Plm.V1.SequenceState.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Messages.Plm.V1.SequenceState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "completed_tasks" field.</summary>
    public const int CompletedTasksFieldNumber = 11;
    private long completedTasks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CompletedTasks {
      get { return completedTasks_; }
      set {
        completedTasks_ = value;
      }
    }

    /// <summary>Field number for the "can_bulk_complete" field.</summary>
    public const int CanBulkCompleteFieldNumber = 12;
    private bool canBulkComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanBulkComplete {
      get { return canBulkComplete_; }
      set {
        canBulkComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SequenceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SequenceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (!object.Equals(Frame, other.Frame)) return false;
      if (ParentId != other.ParentId) return false;
      if(!sequenceIds_.Equals(other.sequenceIds_)) return false;
      if(!taskIds_.Equals(other.taskIds_)) return false;
      if(!assignedTo_.Equals(other.assignedTo_)) return false;
      if (State != other.State) return false;
      if (CompletedTasks != other.CompletedTasks) return false;
      if (CanBulkComplete != other.CanBulkComplete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (SequenceNumber != 0L) hash ^= SequenceNumber.GetHashCode();
      if (frame_ != null) hash ^= Frame.GetHashCode();
      if (ParentId.Length != 0) hash ^= ParentId.GetHashCode();
      hash ^= sequenceIds_.GetHashCode();
      hash ^= taskIds_.GetHashCode();
      hash ^= assignedTo_.GetHashCode();
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) hash ^= State.GetHashCode();
      if (CompletedTasks != 0L) hash ^= CompletedTasks.GetHashCode();
      if (CanBulkComplete != false) hash ^= CanBulkComplete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(SequenceNumber);
      }
      if (frame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Frame);
      }
      if (ParentId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParentId);
      }
      sequenceIds_.WriteTo(output, _repeated_sequenceIds_codec);
      taskIds_.WriteTo(output, _repeated_taskIds_codec);
      assignedTo_.WriteTo(output, _repeated_assignedTo_codec);
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (CompletedTasks != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CompletedTasks);
      }
      if (CanBulkComplete != false) {
        output.WriteRawTag(96);
        output.WriteBool(CanBulkComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(SequenceNumber);
      }
      if (frame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Frame);
      }
      if (ParentId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParentId);
      }
      sequenceIds_.WriteTo(ref output, _repeated_sequenceIds_codec);
      taskIds_.WriteTo(ref output, _repeated_taskIds_codec);
      assignedTo_.WriteTo(ref output, _repeated_assignedTo_codec);
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (CompletedTasks != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CompletedTasks);
      }
      if (CanBulkComplete != false) {
        output.WriteRawTag(96);
        output.WriteBool(CanBulkComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (SequenceNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNumber);
      }
      if (frame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Frame);
      }
      if (ParentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentId);
      }
      size += sequenceIds_.CalculateSize(_repeated_sequenceIds_codec);
      size += taskIds_.CalculateSize(_repeated_taskIds_codec);
      size += assignedTo_.CalculateSize(_repeated_assignedTo_codec);
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (CompletedTasks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompletedTasks);
      }
      if (CanBulkComplete != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SequenceMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.SequenceNumber != 0L) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.frame_ != null) {
        if (frame_ == null) {
          Frame = new global::Messages.Common.V1.LocalizedPose();
        }
        Frame.MergeFrom(other.Frame);
      }
      if (other.ParentId.Length != 0) {
        ParentId = other.ParentId;
      }
      sequenceIds_.Add(other.sequenceIds_);
      taskIds_.Add(other.taskIds_);
      assignedTo_.Add(other.assignedTo_);
      if (other.State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        State = other.State;
      }
      if (other.CompletedTasks != 0L) {
        CompletedTasks = other.CompletedTasks;
      }
      if (other.CanBulkComplete != false) {
        CanBulkComplete = other.CanBulkComplete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 42: {
            if (frame_ == null) {
              Frame = new global::Messages.Common.V1.LocalizedPose();
            }
            input.ReadMessage(Frame);
            break;
          }
          case 50: {
            ParentId = input.ReadString();
            break;
          }
          case 58: {
            sequenceIds_.AddEntriesFrom(input, _repeated_sequenceIds_codec);
            break;
          }
          case 66: {
            taskIds_.AddEntriesFrom(input, _repeated_taskIds_codec);
            break;
          }
          case 74: {
            assignedTo_.AddEntriesFrom(input, _repeated_assignedTo_codec);
            break;
          }
          case 80: {
            State = (global::Messages.Plm.V1.SequenceState) input.ReadEnum();
            break;
          }
          case 88: {
            CompletedTasks = input.ReadInt64();
            break;
          }
          case 96: {
            CanBulkComplete = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 42: {
            if (frame_ == null) {
              Frame = new global::Messages.Common.V1.LocalizedPose();
            }
            input.ReadMessage(Frame);
            break;
          }
          case 50: {
            ParentId = input.ReadString();
            break;
          }
          case 58: {
            sequenceIds_.AddEntriesFrom(ref input, _repeated_sequenceIds_codec);
            break;
          }
          case 66: {
            taskIds_.AddEntriesFrom(ref input, _repeated_taskIds_codec);
            break;
          }
          case 74: {
            assignedTo_.AddEntriesFrom(ref input, _repeated_assignedTo_codec);
            break;
          }
          case 80: {
            State = (global::Messages.Plm.V1.SequenceState) input.ReadEnum();
            break;
          }
          case 88: {
            CompletedTasks = input.ReadInt64();
            break;
          }
          case 96: {
            CanBulkComplete = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Update published when the state of an sequence have changed
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SequenceUpdatedMessage : pb::IMessage<SequenceUpdatedMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SequenceUpdatedMessage> _parser = new pb::MessageParser<SequenceUpdatedMessage>(() => new SequenceUpdatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SequenceUpdatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.Plm.V1.SequenceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SequenceUpdatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SequenceUpdatedMessage(SequenceUpdatedMessage other) : this() {
      sequenceId_ = other.sequenceId_;
      assignedTo_ = other.assignedTo_.Clone();
      state_ = other.state_;
      completedTasks_ = other.completedTasks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SequenceUpdatedMessage Clone() {
      return new SequenceUpdatedMessage(this);
    }

    /// <summary>Field number for the "sequence_id" field.</summary>
    public const int SequenceIdFieldNumber = 1;
    private string sequenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SequenceId {
      get { return sequenceId_; }
      set {
        sequenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assigned_to" field.</summary>
    public const int AssignedToFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_assignedTo_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> assignedTo_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AssignedTo {
      get { return assignedTo_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Messages.Plm.V1.SequenceState state_ = global::Messages.Plm.V1.SequenceState.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Messages.Plm.V1.SequenceState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "completed_tasks" field.</summary>
    public const int CompletedTasksFieldNumber = 4;
    private long completedTasks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CompletedTasks {
      get { return completedTasks_; }
      set {
        completedTasks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SequenceUpdatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SequenceUpdatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SequenceId != other.SequenceId) return false;
      if(!assignedTo_.Equals(other.assignedTo_)) return false;
      if (State != other.State) return false;
      if (CompletedTasks != other.CompletedTasks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SequenceId.Length != 0) hash ^= SequenceId.GetHashCode();
      hash ^= assignedTo_.GetHashCode();
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) hash ^= State.GetHashCode();
      if (CompletedTasks != 0L) hash ^= CompletedTasks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SequenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SequenceId);
      }
      assignedTo_.WriteTo(output, _repeated_assignedTo_codec);
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (CompletedTasks != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CompletedTasks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SequenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SequenceId);
      }
      assignedTo_.WriteTo(ref output, _repeated_assignedTo_codec);
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (CompletedTasks != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CompletedTasks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SequenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SequenceId);
      }
      size += assignedTo_.CalculateSize(_repeated_assignedTo_codec);
      if (State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (CompletedTasks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompletedTasks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SequenceUpdatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.SequenceId.Length != 0) {
        SequenceId = other.SequenceId;
      }
      assignedTo_.Add(other.assignedTo_);
      if (other.State != global::Messages.Plm.V1.SequenceState.Unspecified) {
        State = other.State;
      }
      if (other.CompletedTasks != 0L) {
        CompletedTasks = other.CompletedTasks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SequenceId = input.ReadString();
            break;
          }
          case 18: {
            assignedTo_.AddEntriesFrom(input, _repeated_assignedTo_codec);
            break;
          }
          case 24: {
            State = (global::Messages.Plm.V1.SequenceState) input.ReadEnum();
            break;
          }
          case 32: {
            CompletedTasks = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SequenceId = input.ReadString();
            break;
          }
          case 18: {
            assignedTo_.AddEntriesFrom(ref input, _repeated_assignedTo_codec);
            break;
          }
          case 24: {
            State = (global::Messages.Plm.V1.SequenceState) input.ReadEnum();
            break;
          }
          case 32: {
            CompletedTasks = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
