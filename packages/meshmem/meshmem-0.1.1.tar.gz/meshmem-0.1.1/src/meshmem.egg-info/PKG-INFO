Metadata-Version: 2.4
Name: meshmem
Version: 0.1.1
Summary: MeshMem SDK ‚Äì Protocol-native, auditable, and composable cognitive memory for AI and multi-agent systems
Home-page: https://meshmem.io
Author: Hongwei Xu, Consenix Labs Ltd
Author-email: Consenix Labs Ltd <info@consenix.com>
License: # MeshMem SDK ‚Äì License & Intellectual Property Notice
        
        **MeshMem Public License v1.0**  
        **Effective Date:** 2025-08-04  
        **Version:** 1.0
        
        ---
        
        **Author & Inventor:** Hongwei Xu, Consenix Labs Ltd  
        **Copyright Owner & Publisher:** Consenix Group Ltd, United Kingdom
        
        MeshMem‚Ñ¢, MeshMemory‚Ñ¢, Cognitive Memory Block (CMB)‚Ñ¢, Symbolic‚ÄìVector Attention Fusion (SVAF)‚Ñ¢, CAT7‚Ñ¢, SYMBit‚Ñ¢, and all related product or protocol names are trademarks or proprietary marks of Consenix Group Ltd.
        
        ---
        
        ## 1. Copyright & Trademark
        
        ¬© 2025 Consenix Group Ltd, United Kingdom. All rights reserved.  
        MeshMem‚Ñ¢, MeshMemory‚Ñ¢, CMB‚Ñ¢, SVAF‚Ñ¢, CAT7‚Ñ¢, SYMBit‚Ñ¢, and all related protocol, SDK, and documentation are protected marks of Consenix Group Ltd.
        
        ---
        
        ## 2. Scope of Protection
        
        This license applies to:
        
        - All protocol specifications, technical documentation, source code, SDKs, APIs, scripts, demos, and data
        - All website content, diagrams, UX/UI, terminology, and system models
        - All related designs, architectures, field schemas, and protocol flows
        
        ---
        
        ## 3. License Terms
        
        **Permitted:**
        
        - Academic review, non-commercial research, and scientific citation **with clear and prominent attribution:**
          > ‚ÄúPowered by MeshMem ‚Äî ¬© 2025 Consenix Group Ltd. All Rights Reserved. https://consenix.com‚Äù
        - Bug reporting and documentation suggestions for protocol RFC consideration.
        
        **Strictly Prohibited:**
        
        - Any creation, development, publication, distribution, or commercialization of derivative works, forks, adaptations, re-implementations, or competing protocols/products/services‚Äîincluding:
          - Protocol forks, variants, or adaptations
          - Competing SDKs, APIs, agent frameworks, mesh cognition, or assetization protocols
          - Any commercial use (enterprise, SaaS, consulting, paid integration, resale) without written license
        - Removal or modification of any copyright, license, trademark, or attribution notice.
        
        ---
        
        ## 4. No Derivative Protocols, Products, or Services
        
        You may **not** (without explicit, written, signed permission from Consenix Group Ltd):
        
        - Fork, clone, derive, adapt, or re-implement MeshMem, MeshMemory protocol, SDK, SVAF, clarifiers, CAT7, SYMBit, or related systems in any form.
        - Use any protocol structure, terminology, field schema, cognitive flow, or architectural pattern as the basis for any new software, protocols, or commercial products‚Äîeven if substantially modified.
        - Attempt to reverse-engineer, extract, or replicate any part of the protocol for independent or competing use.
        
        ---
        
        ## 5. Academic & Reference Use
        
        You may quote, cite, or review these materials in academic publications or technical analyses, **provided that:**
        
        - You include clear, prominent attribution as above.
        - You do **not** use these materials to develop, commercialize, or publish any derivative protocol, SDK, or product.
        
        ---
        
        ## 6. Commercial Licensing & Contact
        
        To request a commercial evaluation, enterprise license, partnership, or protocol integration, contact:  
        [licensing@consenix.com](mailto:licensing@consenix.com)  
        or apply online: [https://consenix.com/license](https://consenix.com/license)
        
        For enterprise support, integration, or managed services, contact SYM.BOT Ltd at [support@sym.bot](mailto:support@sym.bot) or [https://sym.bot](https://sym.bot)
        
        ---
        
        ## 7. Enforcement & Jurisdiction
        
        Any violation‚Äîincluding unlicensed commercial use, creation of derivatives, protocol forking, omission of attribution, or reverse engineering‚Äîwill result in immediate license termination and legal action under the laws of England and Wales and applicable international treaties.  
        All disputes are subject to the exclusive jurisdiction of the English courts.
        
        ---
        
        ## 8. TL;DR (For Developers, VCs, Acquirers)
        
        - **No forks. No derivatives. No commercial use or integration without explicit written license.**
        - Academic review/citation allowed **with prominent attribution**.
        - **All protocol, SDK, docs, and content are globally protected and enforceable under international IP law.**
        - **Consenix Group Ltd reserves all rights not expressly granted.**
        
        ---
        
        ¬© 2025 Consenix Group Ltd, United Kingdom. All rights reserved.  
        MeshMem‚Ñ¢, MeshMemory‚Ñ¢, CMB‚Ñ¢, SVAF‚Ñ¢, CAT7‚Ñ¢, SYMBit‚Ñ¢ are trademarks of Consenix Group Ltd.
        
        ---
        
        **End of License**
        
        ---
Project-URL: Homepage, https://meshmem.io
Project-URL: Documentation, https://docs.meshmem.io
Project-URL: Repository, https://github.com/meshmem/meshmem-sdk
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: IP_NOTICE.md
Requires-Dist: numpy>=1.20
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# MeshMem SDK

**MeshMem‚Ñ¢** is the protocol-native, event-driven SDK for composable, auditable, and lawful cognitive memory in AI and multi-agent systems‚Äîbuilt and governed by Consenix Group Ltd.

---

## üöÄ What is MeshMem?

**MeshMem turns any agent, LLM app, or distributed system into a protocol-governed, semantically continuous, and auditable cognitive agent.**
It‚Äôs more than an ‚ÄúAI memory‚Äù layer‚Äîit‚Äôs the full, lawful substrate for composable, explainable, and capitalizable mesh cognition.

---

## üèÜ Key Capabilities

* **Field-complete Cognitive Memory Blocks (CMBs):**  
  Structured, protocol-auditable memory with symbolic fields and vectors‚Äînot just blobs or chunks.

* **Lawful Memory Evolution:**  
  Every memory change (creation, remix, clarification, canonization) is a protocol event‚Äîfully logged, validator/auditor-signed, and auditable.

* **Protocol-grade Semantic Fusion (SVAF):**  
  Field-wise, mathematically rigorous, drift-bounded fusion; no more ‚Äújust average the embeddings.‚Äù

* **Semantic Drift Detection & Clarifier Logic:**  
  Built-in drift detection and clarifier agents maintain mesh-wide semantic continuity.

* **Full Auditability & Regulatory Compliance:**  
  Every event is protocol-logged: who, what, when, why, and how.

* **Composable, Programmable Mesh Memory:**  
  Remix, clarify, and canonize memories into cognitive assets‚Äîready for assetization, staking, and multi-agent collaboration.

---

## üßë‚Äçüíª Developer Quickstart

**Install from PyPI:**

```bash
pip install meshmem
```

**From source:**

```bash
git clone https://github.com/meshmem/meshmem-sdk.git
cd meshmem-sdk
pip install -e .
```

> See [`examples/`](./examples/) for ready-to-run demos.

---

### ‚ö° Minimal Example

```python
from meshmem import create, remix, clarify

raw_input = "List the main compliance and technical risks for Q4."
cmb, audit = create(raw_input, api_key="sk-...")

# Fuse with anchor CMBs
fused_cmb, remix_audit = remix(cmb, [cmb2, cmb3])

# Clarify semantic drift
decision, clarifier_audit = clarify(fused_cmb, drift_scores={"block": remix_audit["svaf_details"]["block_drift"]}, config={...})
```

---

## üìñ Documentation

* [Protocol Overview](./docs/protocol_overview.md)
* [SVAF API Reference](./docs/svaf_api_reference.md)
* [Memory Evolution API Reference](./docs/memory_evolution_api_reference.md)
* [Metrics & Experiments](./docs/metrics.md)
* [Replication & Reproducibility](./docs/replication.md)

---

## üí° Why MeshMem? (vs. Other ‚ÄúMemory‚Äù Tools)

<details>
<summary><strong>MeshMem is protocol-native, mesh-ready, and audit-grade‚Äîhere‚Äôs how it stands apart:</strong> (click to expand)</summary>

### **Feature Comparison Table**

| Feature            | MeshMem (SDK)                                  | LangMem / MemGPT / etc.       |
| ------------------ | ---------------------------------------------- | ----------------------------- |
| Memory Structure   | Protocol-defined CMBs, fields, vectors, labels | ‚ÄúChunks‚Äù, text blobs, vectors |
| Semantic Alignment | Field-wise, drift-bounded SVAF fusion          | Heuristic, vector avg/concat  |
| Drift Detection    | Built-in, protocol-governed, clarifier logic   | Rare or ad hoc                |
| Audit Trail        | Validator-signed, event-driven, forensic       | Minimal or app-level          |
| Governance         | Mesh protocol law, validator circles, RFCs     | None or app-specific          |
| Assetization       | Canonize as programmable assets (MCATs, etc.)  | No, or only as DB records     |
| Compliance         | Native, protocol-signed, explainable           | No protocol, no compliance    |
| Mesh/Inter-agent   | Designed for mesh/collab cognition across orgs | Agent-local or per-app        |

**Bottom Line:**
MeshMem does for AI memory what blockchain did for transactions:
It makes memory lawful, composable, auditable, and programmable‚Äîenabling collective intelligence, regulatory compliance, and epistemic assetization.

</details>

---

## ‚ö°Ô∏è Upgrade Path: Open Source ‚Üí Enterprise

MeshMem is free for non-commercial research, academic, and protocol evaluation.
**For enterprise/commercial deployments, production support, or integration:**

### **SYM.BOT Ltd ‚Äî Exclusive Enterprise Steward for MeshMem**

[![Enterprise Support: SYM.BOT](https://img.shields.io/badge/Enterprise--Support-SYM.BOT-25D0FF?style=flat-square&logo=datadog&logoColor=white)](https://sym.bot)

* LTS releases, onboarding, and SLAs
* Enterprise integrations, compliance, and security features
* Professional support, consulting, and managed deployments
* Custom features and OEM licensing

üìß [support@sym.bot](mailto:support@sym.bot)  
üåê [https://sym.bot](https://sym.bot)

*All protocol law and underlying technology remain governed by Consenix Group Ltd.*

---

## üíº IP, Licensing, and Commercial Use

**MeshMem SDK and protocol are exclusive IP of Consenix Group Ltd.**

* No commercial use, redistribution, or integration permitted without written license.
* See [LICENSE](./LICENSE) and [IP\_NOTICE.md](./IP_NOTICE.md) for details.

All protocol IP, research, and governance inquiries:  
üìß [licensing@consenix.com](mailto:licensing@consenix.com)  
üåê [https://consenix.com/license](https://consenix.com/license)

---

## ü§ù Contributing

* Bug reports and documentation suggestions are welcome.
* Protocol law changes/features require RFC via Consenix governance.
* All contributions are subject to IP assignment.

See [CONTRIBUTING.md](./CONTRIBUTING.md)

---

¬© 2025 Consenix Group Ltd. All Rights Reserved.  
MeshMem‚Ñ¢, MeshMemory‚Ñ¢, CMB‚Ñ¢, SVAF‚Ñ¢, CAT7‚Ñ¢, and SYMBit‚Ñ¢ are trademarks of Consenix Group Ltd.

---

**MeshMem: Turn any agent into a protocol-governed, compliant, and composable node of collective intelligence.**

---
