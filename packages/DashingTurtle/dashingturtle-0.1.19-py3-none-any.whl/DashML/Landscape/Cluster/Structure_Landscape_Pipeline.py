import sys, os
import platform
import subprocess
import sys
import pandas as pd
import library as lib
import numpy as np


#### Part 1 Landscape Observation
# get native mfes - requires library with secondary structure
#   -extracts native mfe from files
# Adjust distance function to pad top and bottom, currently only pads tops and positions are wrong
# TODO: get unmodified cluster sizes and mfes for comparison, very important
#   do unmodified clusters represent the native structure most or what are the distributions
#   should be closer together with less spread in the clusters, and/or fewer clusters
#   yes, ideally we dont predict modifications in dmso and this is true
#   dmso has no clusters, only compare mfes and distance from native structure
#  for kmeans distance function we dont reactivity from file
#   assume native structure is the main cluster calculate based on that
# get predicted centroid clusters with reactivity
# get putative structures from centroids clusters with reactivity as soft constraints
#       reactivity as soft constraints
#       lowest MEA based MFEs
#       compiles cluster sizes and mfes
#       get delta(native mfe, cluster mfe)
#       TODO: get difference between clustering methods, why are the distributions different, especially btwn two dominant clusters
#       if we push kmeans to hamming does it become more similar
#  get distance from native structures using distance between centroids (kmeans and hamming)
#           # confirmed structure (hamming s vs bp), predictions on unmodified structure (kmeans)
#           # get the reactivitives of the unmodified structure and compare to native structure
#           # this is all relative so its a little sticky, given the native structure is 0 : bp, 1: ss
# TODO: compile table MFE of unmodified/native and control structures and sizes for all sequences
# get VARNA images of native and putative structures for all clusters/centroids
# TODO: make images pretty
# TODO: phase based relationships using networkx weighted graph, with correlation/hamming distance vs mfe
    # node is cluster size and/or mfe
    # TODO: get correlation and distant matrices

#handle missing data in clusters, right now it codes as 0 or non reactive
# TODO: do we have to handle it, maybe compile statistics on all missing reads and percentages
# good caveat
# TODO: remove short reads from source file in ACIM, DMSO, and preprocessing, difficult to detect in post processing
# no good way to handle missing data in post processing because we are using multiple predictors we could add something
# but preprocessing makes the most sense

###### Run Order
# ? Same process on unmodified data
# 0. Preprocess RNAeval.py on native structures from library, extracts native mfes
# 1. dendrogram removes poor reads, extracts clusters, sizes, centroids
# 1A. for control data run dendrogram_native to get cluster distances from native structure
# 1B. for control data run figures_tables to generate plots and tables.
# 2. RNAfold runs RNAfold on generated centroids and reactivities, extracts mfes

# Cluster Images: generated by Cluster_Images.py

#remove short read counts, seqlen's less than .7 removed
def remove_short_reads():
    dfrlen = df.groupby(by=['read_index'])['read_index'].count().reset_index(name='count')
    seqlen = seqlib.get_seqlen(seq)
    dfrlen['count'] = (dfrlen['count']/seqlen)
    ar = len(dfrlen)
    dfrlen = dfrlen.loc[dfrlen['count'] >= .7, 'read_index']
    valid_reads = dfrlen.to_list()
    df = df.loc[df['read_index'].isin(valid_reads)]


#Friday
#latex tables with minimum mfe and structural distances
#make easy to rerun script
#get native reactivities for kmeans, instead of hamming in Dendrogram-Native
    #  TODO: get reactivities for native structures using native reactivities calculated in Native_Nanopore
# run predict was altered here to get full length sequences in read_depth_full out files, propagate to other versions
