[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "yaapp-core"
dynamic = ["version"]
description = "yaapp-core - Minimal core functionality for yaapp framework"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
license-files = ["LICENSE"]
authors = [
    {name = "yaapp Team"},
]
keywords = ["cli", "framework", "plugin", "core"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "click>=8.0.0",
    "docker>=7.1.0",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "pyyaml>=6.0",
    "vulture>=2.14",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "vulture>=2.3",
]

[project.urls]
Homepage = "https://github.com/yaapp-team/yaapp-core"
Repository = "https://github.com/yaapp-team/yaapp-core"
Issues = "https://github.com/yaapp-team/yaapp-core/issues"

[project.scripts]
yaapp = "yaapp:main"

# UV-specific configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "vulture>=2.3",
    "fastapi>=0.116.1",
    "uvicorn>=0.33.0",
    "pydantic>=2.10.6",
    "requests>=2.32.4",
]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["yaapp.third_party", "yaapp.third_party.*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.dynamic]
version = {attr = "yaapp.__version__"}

[tool.black]
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::pytest.PytestReturnNotNoneWarning",
]
markers = [
    "asyncio: marks tests as async",
]
asyncio_mode = "auto"
