"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.acp.v0.base_pb2
import ansys.api.acp.v0.enum_types_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _CutoffRuleType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CutoffRuleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CutoffRuleType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    GEOMETRY: CutoffRuleType.ValueType = ...  # 0
    TAPER: CutoffRuleType.ValueType = ...  # 1
class CutoffRuleType(_CutoffRuleType, metaclass=_CutoffRuleTypeEnumTypeWrapper):
    pass

GEOMETRY: CutoffRuleType.ValueType = ...  # 0
TAPER: CutoffRuleType.ValueType = ...  # 1
global___CutoffRuleType = CutoffRuleType


class _PlyCutoffType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PlyCutoffTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PlyCutoffType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PRODUCTION_PLY_CUTOFF: PlyCutoffType.ValueType = ...  # 0
    ANALYSIS_PLY_CUTOFF: PlyCutoffType.ValueType = ...  # 1
class PlyCutoffType(_PlyCutoffType, metaclass=_PlyCutoffTypeEnumTypeWrapper):
    pass

PRODUCTION_PLY_CUTOFF: PlyCutoffType.ValueType = ...  # 0
ANALYSIS_PLY_CUTOFF: PlyCutoffType.ValueType = ...  # 1
global___PlyCutoffType = PlyCutoffType


class Properties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    CUTOFF_RULE_TYPE_FIELD_NUMBER: builtins.int
    CUTOFF_GEOMETRY_FIELD_NUMBER: builtins.int
    TAPER_EDGE_SET_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    ANGLE_FIELD_NUMBER: builtins.int
    PLY_CUTOFF_TYPE_FIELD_NUMBER: builtins.int
    PLY_TAPERING_FIELD_NUMBER: builtins.int
    status: ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...
    cutoff_rule_type: global___CutoffRuleType.ValueType = ...
    @property
    def cutoff_geometry(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    @property
    def taper_edge_set(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    offset: builtins.float = ...
    angle: builtins.float = ...
    ply_cutoff_type: global___PlyCutoffType.ValueType = ...
    ply_tapering: builtins.bool = ...
    def __init__(self,
        *,
        status : ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...,
        cutoff_rule_type : global___CutoffRuleType.ValueType = ...,
        cutoff_geometry : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        taper_edge_set : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        offset : builtins.float = ...,
        angle : builtins.float = ...,
        ply_cutoff_type : global___PlyCutoffType.ValueType = ...,
        ply_tapering : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cutoff_geometry",b"cutoff_geometry","taper_edge_set",b"taper_edge_set"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["angle",b"angle","cutoff_geometry",b"cutoff_geometry","cutoff_rule_type",b"cutoff_rule_type","offset",b"offset","ply_cutoff_type",b"ply_cutoff_type","ply_tapering",b"ply_tapering","status",b"status","taper_edge_set",b"taper_edge_set"]) -> None: ...
global___Properties = Properties

class ObjectInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFO_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> ansys.api.acp.v0.base_pb2.BasicInfo: ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        info : typing.Optional[ansys.api.acp.v0.base_pb2.BasicInfo] = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> None: ...
global___ObjectInfo = ObjectInfo

class ListReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OBJECTS_FIELD_NUMBER: builtins.int
    @property
    def objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectInfo]: ...
    def __init__(self,
        *,
        objects : typing.Optional[typing.Iterable[global___ObjectInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["objects",b"objects"]) -> None: ...
global___ListReply = ListReply

class CreateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLLECTION_PATH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def collection_path(self) -> ansys.api.acp.v0.base_pb2.CollectionPath: ...
    name: typing.Text = ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        collection_path : typing.Optional[ansys.api.acp.v0.base_pb2.CollectionPath] = ...,
        name : typing.Text = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","name",b"name","properties",b"properties"]) -> None: ...
global___CreateRequest = CreateRequest
