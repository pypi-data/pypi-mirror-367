"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.acp.v0.array_types_pb2
import ansys.api.acp.v0.base_pb2
import ansys.api.acp.v0.enum_types_pb2
import ansys.api.acp.v0.linked_selection_rule_pb2
import ansys.api.acp.v0.ply_material_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ThicknessType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ThicknessTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ThicknessType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    NOMINAL: ThicknessType.ValueType = ...  # 0
    FROM_GEOMETRY: ThicknessType.ValueType = ...  # 1
    FROM_TABLE: ThicknessType.ValueType = ...  # 2
class ThicknessType(_ThicknessType, metaclass=_ThicknessTypeEnumTypeWrapper):
    pass

NOMINAL: ThicknessType.ValueType = ...  # 0
FROM_GEOMETRY: ThicknessType.ValueType = ...  # 1
FROM_TABLE: ThicknessType.ValueType = ...  # 2
global___ThicknessType = ThicknessType


class _ThicknessFieldType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ThicknessFieldTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ThicknessFieldType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ABSOLUTE_VALUES: ThicknessFieldType.ValueType = ...  # 0
    RELATIVE_SCALING_FACTOR: ThicknessFieldType.ValueType = ...  # 1
class ThicknessFieldType(_ThicknessFieldType, metaclass=_ThicknessFieldTypeEnumTypeWrapper):
    pass

ABSOLUTE_VALUES: ThicknessFieldType.ValueType = ...  # 0
RELATIVE_SCALING_FACTOR: ThicknessFieldType.ValueType = ...  # 1
global___ThicknessFieldType = ThicknessFieldType


class TaperEdge(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EDGE_SET_FIELD_NUMBER: builtins.int
    ANGLE_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    @property
    def edge_set(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    angle: builtins.float = ...
    offset: builtins.float = ...
    def __init__(self,
        *,
        edge_set : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        angle : builtins.float = ...,
        offset : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["edge_set",b"edge_set"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["angle",b"angle","edge_set",b"edge_set","offset",b"offset"]) -> None: ...
global___TaperEdge = TaperEdge

class Properties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    ORIENTED_SELECTION_SETS_FIELD_NUMBER: builtins.int
    PLY_MATERIAL_FIELD_NUMBER: builtins.int
    PLY_ANGLE_FIELD_NUMBER: builtins.int
    NUMBER_OF_LAYERS_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    GLOBAL_PLY_NR_FIELD_NUMBER: builtins.int
    DRAPING_FIELD_NUMBER: builtins.int
    DRAPING_SEED_POINT_FIELD_NUMBER: builtins.int
    AUTO_DRAPING_DIRECTION_FIELD_NUMBER: builtins.int
    DRAPING_DIRECTION_FIELD_NUMBER: builtins.int
    USE_DEFAULT_DRAPING_MESH_SIZE_FIELD_NUMBER: builtins.int
    DRAPING_MESH_SIZE_FIELD_NUMBER: builtins.int
    DRAPING_THICKNESS_CORRECTION_FIELD_NUMBER: builtins.int
    DRAPING_ANGLE_1_FIELD_FIELD_NUMBER: builtins.int
    DRAPING_ANGLE_2_FIELD_FIELD_NUMBER: builtins.int
    SELECTION_RULES_FIELD_NUMBER: builtins.int
    THICKNESS_TYPE_FIELD_NUMBER: builtins.int
    THICKNESS_GEOMETRY_FIELD_NUMBER: builtins.int
    THICKNESS_FIELD_FIELD_NUMBER: builtins.int
    THICKNESS_FIELD_TYPE_FIELD_NUMBER: builtins.int
    TAPER_EDGES_FIELD_NUMBER: builtins.int
    status: ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...
    @property
    def oriented_selection_sets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ansys.api.acp.v0.base_pb2.ResourcePath]: ...
    @property
    def ply_material(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    ply_angle: builtins.float = ...
    number_of_layers: builtins.int = ...
    active: builtins.bool = ...
    global_ply_nr: builtins.int = ...
    draping: ansys.api.acp.v0.ply_material_pb2.DrapingType.ValueType = ...
    """draping-related properties"""

    @property
    def draping_seed_point(self) -> ansys.api.acp.v0.array_types_pb2.DoubleArray: ...
    auto_draping_direction: builtins.bool = ...
    @property
    def draping_direction(self) -> ansys.api.acp.v0.array_types_pb2.DoubleArray: ...
    use_default_draping_mesh_size: builtins.bool = ...
    draping_mesh_size: builtins.float = ...
    draping_thickness_correction: builtins.bool = ...
    @property
    def draping_angle_1_field(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    @property
    def draping_angle_2_field(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    @property
    def selection_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ansys.api.acp.v0.linked_selection_rule_pb2.LinkedSelectionRule]: ...
    thickness_type: global___ThicknessType.ValueType = ...
    """variable thickness"""

    @property
    def thickness_geometry(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    @property
    def thickness_field(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    thickness_field_type: global___ThicknessFieldType.ValueType = ...
    """The thickness_field_type is discarded when the thickness_field is not set"""

    @property
    def taper_edges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TaperEdge]:
        """taper edges"""
        pass
    def __init__(self,
        *,
        status : ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...,
        oriented_selection_sets : typing.Optional[typing.Iterable[ansys.api.acp.v0.base_pb2.ResourcePath]] = ...,
        ply_material : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        ply_angle : builtins.float = ...,
        number_of_layers : builtins.int = ...,
        active : builtins.bool = ...,
        global_ply_nr : builtins.int = ...,
        draping : ansys.api.acp.v0.ply_material_pb2.DrapingType.ValueType = ...,
        draping_seed_point : typing.Optional[ansys.api.acp.v0.array_types_pb2.DoubleArray] = ...,
        auto_draping_direction : builtins.bool = ...,
        draping_direction : typing.Optional[ansys.api.acp.v0.array_types_pb2.DoubleArray] = ...,
        use_default_draping_mesh_size : builtins.bool = ...,
        draping_mesh_size : builtins.float = ...,
        draping_thickness_correction : builtins.bool = ...,
        draping_angle_1_field : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        draping_angle_2_field : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        selection_rules : typing.Optional[typing.Iterable[ansys.api.acp.v0.linked_selection_rule_pb2.LinkedSelectionRule]] = ...,
        thickness_type : global___ThicknessType.ValueType = ...,
        thickness_geometry : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        thickness_field : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        thickness_field_type : global___ThicknessFieldType.ValueType = ...,
        taper_edges : typing.Optional[typing.Iterable[global___TaperEdge]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["draping_angle_1_field",b"draping_angle_1_field","draping_angle_2_field",b"draping_angle_2_field","draping_direction",b"draping_direction","draping_seed_point",b"draping_seed_point","ply_material",b"ply_material","thickness_field",b"thickness_field","thickness_geometry",b"thickness_geometry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active",b"active","auto_draping_direction",b"auto_draping_direction","draping",b"draping","draping_angle_1_field",b"draping_angle_1_field","draping_angle_2_field",b"draping_angle_2_field","draping_direction",b"draping_direction","draping_mesh_size",b"draping_mesh_size","draping_seed_point",b"draping_seed_point","draping_thickness_correction",b"draping_thickness_correction","global_ply_nr",b"global_ply_nr","number_of_layers",b"number_of_layers","oriented_selection_sets",b"oriented_selection_sets","ply_angle",b"ply_angle","ply_material",b"ply_material","selection_rules",b"selection_rules","status",b"status","taper_edges",b"taper_edges","thickness_field",b"thickness_field","thickness_field_type",b"thickness_field_type","thickness_geometry",b"thickness_geometry","thickness_type",b"thickness_type","use_default_draping_mesh_size",b"use_default_draping_mesh_size"]) -> None: ...
global___Properties = Properties

class ObjectInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFO_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> ansys.api.acp.v0.base_pb2.BasicInfo: ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        info : typing.Optional[ansys.api.acp.v0.base_pb2.BasicInfo] = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> None: ...
global___ObjectInfo = ObjectInfo

class ListReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OBJECTS_FIELD_NUMBER: builtins.int
    @property
    def objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectInfo]: ...
    def __init__(self,
        *,
        objects : typing.Optional[typing.Iterable[global___ObjectInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["objects",b"objects"]) -> None: ...
global___ListReply = ListReply

class CreateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLLECTION_PATH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def collection_path(self) -> ansys.api.acp.v0.base_pb2.CollectionPath: ...
    name: typing.Text = ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        collection_path : typing.Optional[ansys.api.acp.v0.base_pb2.CollectionPath] = ...,
        name : typing.Text = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","name",b"name","properties",b"properties"]) -> None: ...
global___CreateRequest = CreateRequest
