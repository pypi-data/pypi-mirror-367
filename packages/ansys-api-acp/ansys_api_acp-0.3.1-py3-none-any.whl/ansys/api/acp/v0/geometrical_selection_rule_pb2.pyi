"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.acp.v0.base_pb2
import ansys.api.acp.v0.enum_types_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _GeometricalRuleType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _GeometricalRuleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GeometricalRuleType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    GEOMETRY: GeometricalRuleType.ValueType = ...  # 0
    ELEMENT_SETS: GeometricalRuleType.ValueType = ...  # 1
class GeometricalRuleType(_GeometricalRuleType, metaclass=_GeometricalRuleTypeEnumTypeWrapper):
    pass

GEOMETRY: GeometricalRuleType.ValueType = ...  # 0
ELEMENT_SETS: GeometricalRuleType.ValueType = ...  # 1
global___GeometricalRuleType = GeometricalRuleType


class Properties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    GEOMETRICAL_RULE_TYPE_FIELD_NUMBER: builtins.int
    GEOMETRY_FIELD_NUMBER: builtins.int
    ELEMENT_SETS_FIELD_NUMBER: builtins.int
    INCLUDE_RULE_TYPE_FIELD_NUMBER: builtins.int
    USE_DEFAULT_TOLERANCES_FIELD_NUMBER: builtins.int
    IN_PLANE_CAPTURE_TOLERANCE_FIELD_NUMBER: builtins.int
    NEGATIVE_CAPTURE_TOLERANCE_FIELD_NUMBER: builtins.int
    POSITIVE_CAPTURE_TOLERANCE_FIELD_NUMBER: builtins.int
    status: ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...
    geometrical_rule_type: global___GeometricalRuleType.ValueType = ...
    @property
    def geometry(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    @property
    def element_sets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ansys.api.acp.v0.base_pb2.ResourcePath]: ...
    include_rule_type: builtins.bool = ...
    use_default_tolerances: builtins.bool = ...
    in_plane_capture_tolerance: builtins.float = ...
    negative_capture_tolerance: builtins.float = ...
    positive_capture_tolerance: builtins.float = ...
    def __init__(self,
        *,
        status : ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...,
        geometrical_rule_type : global___GeometricalRuleType.ValueType = ...,
        geometry : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        element_sets : typing.Optional[typing.Iterable[ansys.api.acp.v0.base_pb2.ResourcePath]] = ...,
        include_rule_type : builtins.bool = ...,
        use_default_tolerances : builtins.bool = ...,
        in_plane_capture_tolerance : builtins.float = ...,
        negative_capture_tolerance : builtins.float = ...,
        positive_capture_tolerance : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["geometry",b"geometry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["element_sets",b"element_sets","geometrical_rule_type",b"geometrical_rule_type","geometry",b"geometry","in_plane_capture_tolerance",b"in_plane_capture_tolerance","include_rule_type",b"include_rule_type","negative_capture_tolerance",b"negative_capture_tolerance","positive_capture_tolerance",b"positive_capture_tolerance","status",b"status","use_default_tolerances",b"use_default_tolerances"]) -> None: ...
global___Properties = Properties

class ObjectInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFO_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> ansys.api.acp.v0.base_pb2.BasicInfo: ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        info : typing.Optional[ansys.api.acp.v0.base_pb2.BasicInfo] = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> None: ...
global___ObjectInfo = ObjectInfo

class ListReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OBJECTS_FIELD_NUMBER: builtins.int
    @property
    def objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectInfo]: ...
    def __init__(self,
        *,
        objects : typing.Optional[typing.Iterable[global___ObjectInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["objects",b"objects"]) -> None: ...
global___ListReply = ListReply

class CreateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLLECTION_PATH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def collection_path(self) -> ansys.api.acp.v0.base_pb2.CollectionPath: ...
    name: typing.Text = ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        collection_path : typing.Optional[ansys.api.acp.v0.base_pb2.CollectionPath] = ...,
        name : typing.Text = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","name",b"name","properties",b"properties"]) -> None: ...
global___CreateRequest = CreateRequest
