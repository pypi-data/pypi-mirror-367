"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.acp.v0.base_pb2
import ansys.api.acp.v0.enum_types_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _Dimension:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DimensionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Dimension.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN: Dimension.ValueType = ...  # 0
    LINE: Dimension.ValueType = ...  # 1
    SURFACE: Dimension.ValueType = ...  # 2
    SOLID: Dimension.ValueType = ...  # 3
class Dimension(_Dimension, metaclass=_DimensionEnumTypeWrapper):
    pass

UNKNOWN: Dimension.ValueType = ...  # 0
LINE: Dimension.ValueType = ...  # 1
SURFACE: Dimension.ValueType = ...  # 2
SOLID: Dimension.ValueType = ...  # 3
global___Dimension = Dimension


class SubShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CAD_GEOMETRY_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    @property
    def cad_geometry(self) -> ansys.api.acp.v0.base_pb2.ResourcePath: ...
    path: typing.Text = ...
    def __init__(self,
        *,
        cad_geometry : typing.Optional[ansys.api.acp.v0.base_pb2.ResourcePath] = ...,
        path : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cad_geometry",b"cad_geometry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cad_geometry",b"cad_geometry","path",b"path"]) -> None: ...
global___SubShape = SubShape

class Properties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    DIMENSION_FIELD_NUMBER: builtins.int
    SUB_SHAPES_FIELD_NUMBER: builtins.int
    status: ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...
    dimension: global___Dimension.ValueType = ...
    @property
    def sub_shapes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubShape]:
        """Refer to the CADComponent by its (topological) path instead of the
        resource_path, since the CADComponent object may not yet exist in
        the tree (if the geometry is not up-to-date).
        In the backend this is handled by introducing the CADReference object,
        but this is intentionally not exposed via the API.
        """
        pass
    def __init__(self,
        *,
        status : ansys.api.acp.v0.enum_types_pb2.StatusType.ValueType = ...,
        dimension : global___Dimension.ValueType = ...,
        sub_shapes : typing.Optional[typing.Iterable[global___SubShape]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimension",b"dimension","status",b"status","sub_shapes",b"sub_shapes"]) -> None: ...
global___Properties = Properties

class ObjectInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFO_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> ansys.api.acp.v0.base_pb2.BasicInfo: ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        info : typing.Optional[ansys.api.acp.v0.base_pb2.BasicInfo] = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["info",b"info","properties",b"properties"]) -> None: ...
global___ObjectInfo = ObjectInfo

class ListReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OBJECTS_FIELD_NUMBER: builtins.int
    @property
    def objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectInfo]: ...
    def __init__(self,
        *,
        objects : typing.Optional[typing.Iterable[global___ObjectInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["objects",b"objects"]) -> None: ...
global___ListReply = ListReply

class CreateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLLECTION_PATH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def collection_path(self) -> ansys.api.acp.v0.base_pb2.CollectionPath: ...
    name: typing.Text = ...
    @property
    def properties(self) -> global___Properties: ...
    def __init__(self,
        *,
        collection_path : typing.Optional[ansys.api.acp.v0.base_pb2.CollectionPath] = ...,
        name : typing.Text = ...,
        properties : typing.Optional[global___Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collection_path",b"collection_path","name",b"name","properties",b"properties"]) -> None: ...
global___CreateRequest = CreateRequest
