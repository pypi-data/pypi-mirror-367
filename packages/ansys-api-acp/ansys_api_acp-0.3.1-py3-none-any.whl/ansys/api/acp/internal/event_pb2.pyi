"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.acp.v0.base_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _EventType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    INIT: EventType.ValueType = ...  # 0
    """signals the start of the stream"""

    CREATE: EventType.ValueType = ...  # 1
    PUT: EventType.ValueType = ...  # 2
    DELETE: EventType.ValueType = ...  # 3
class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
    pass

INIT: EventType.ValueType = ...  # 0
"""signals the start of the stream"""

CREATE: EventType.ValueType = ...  # 1
PUT: EventType.ValueType = ...  # 2
DELETE: EventType.ValueType = ...  # 3
global___EventType = EventType


class CreateEventData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFO_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> ansys.api.acp.v0.base_pb2.BasicInfo: ...
    def __init__(self,
        *,
        info : typing.Optional[ansys.api.acp.v0.base_pb2.BasicInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["info",b"info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["info",b"info"]) -> None: ...
global___CreateEventData = CreateEventData

class PutEventData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFO_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> ansys.api.acp.v0.base_pb2.BasicInfo: ...
    def __init__(self,
        *,
        info : typing.Optional[ansys.api.acp.v0.base_pb2.BasicInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["info",b"info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["info",b"info"]) -> None: ...
global___PutEventData = PutEventData

class DeleteEventData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UUID_FIELD_NUMBER: builtins.int
    uuid: typing.Text = ...
    def __init__(self,
        *,
        uuid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["uuid",b"uuid"]) -> None: ...
global___DeleteEventData = DeleteEventData

class Event(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    CREATE_FIELD_NUMBER: builtins.int
    PUT_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    type: global___EventType.ValueType = ...
    @property
    def create(self) -> global___CreateEventData: ...
    @property
    def put(self) -> global___PutEventData: ...
    @property
    def delete(self) -> global___DeleteEventData: ...
    def __init__(self,
        *,
        type : global___EventType.ValueType = ...,
        create : typing.Optional[global___CreateEventData] = ...,
        put : typing.Optional[global___PutEventData] = ...,
        delete : typing.Optional[global___DeleteEventData] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create",b"create","data",b"data","delete",b"delete","put",b"put"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create",b"create","data",b"data","delete",b"delete","put",b"put","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data",b"data"]) -> typing.Optional[typing_extensions.Literal["create","put","delete"]]: ...
global___Event = Event
