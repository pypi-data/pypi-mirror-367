[tool.poetry]
name = "ctxctx"
version = "0.3.0"
description = "Intelligently select, format, and present relevant project files and directory structure as context for LLMs."
authors = ["Toomes Gud <toomesgud@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/gkegke/ctxctx"
keywords = ["llm", "context", "cli", "code", "directory", "files"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Utilities",
    "Environment :: Console",
]
packages = [ 
    {include = "ctxctx"}
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
PyYAML = { version = "^6.0", optional = true } # Optional for ctx itself, but good for testing profiles

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
black = "^24.0.0"
mypy = "^1.0"
flake8 = "^7.0.0"
isort = "^5.0.0"
pytest-mock = "^3.12.0" # For mocking
pyfakefs = "^5.3.0" # For mocking file system

[tool.poetry.extras]
yaml = ["PyYAML"]

[tool.poetry.scripts]
ctx = "ctxctx.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 99
