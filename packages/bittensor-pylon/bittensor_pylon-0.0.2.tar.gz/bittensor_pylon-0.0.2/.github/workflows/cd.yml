name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - master
      - main
      - dev
  push:
     push:
       tags:
         - 'v*'  # Trigger on version tags like v1.0.0

env:
  TAG_VERSION: "v1-latest"
  DOCKER_REPO_NAME: "backenddevelopersltd/bittensor-pylon"

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: astral-sh/setup-uv@v6

      - name: Build release distributions
        run: uv build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/


  pypi-publish:
    runs-on: ubuntu-latest
    needs: release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  docker-push:
    runs-on: ubuntu-latest
    needs: release-build

    steps:
      - uses: actions/checkout@v4

      - name: Docker build and push
        run: |
          IMAGE_NAME="${DOCKER_REPO_NAME}:${TAG_VERSION}"
          SHA_IMAGE_NAME="${DOCKER_REPO_NAME}:git-${GITHUB_SHA}"

          docker build -t "${IMAGE_NAME}" -f Dockerfile .

          docker image tag "${IMAGE_NAME}" "${SHA_IMAGE_NAME}"

          echo "${{ secrets.DOCKERHUB_KEY }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

          docker push "${IMAGE_NAME}"
          docker push "${SHA_IMAGE_NAME}"
