name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - master
      - main
      - dev
  push:
    branches:
      - master
      - main
      - dev
    paths:
      - 'pylon_client/__init__.py'

env:
  TAG_VERSION: "v1-latest"
  DOCKER_REPO_NAME: "backenddevelopersltd/bittensor-pylon"

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: astral-sh/setup-uv@v6

      - name: Build release distributions
        run: uv build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/


  pypi-publish:
    runs-on: ubuntu-latest
    needs: release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   repository-url: https://test.pypi.org/legacy/

  # docker-push:
  #   runs-on: ubuntu-latest
  #   needs: release-build
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Docker build and push
  #       run: |
  #         VERSION="${{ needs.release-build.outputs.version }}"
  #         VERSIONED_IMAGE_NAME="${DOCKER_REPO_NAME}:v${VERSION}"
  #         LATEST_IMAGE_NAME="${DOCKER_REPO_NAME}:${TAG_VERSION}"
  #         SHA_IMAGE_NAME="${DOCKER_REPO_NAME}:git-${GITHUB_SHA}"
  #
  #         # Build Docker image
  #         docker build -t "${VERSIONED_IMAGE_NAME}" -f Dockerfile .
  #
  #         # Tag with latest and SHA
  #         docker image tag "${VERSIONED_IMAGE_NAME}" "${LATEST_IMAGE_NAME}"
  #         docker image tag "${VERSIONED_IMAGE_NAME}" "${SHA_IMAGE_NAME}"
  #
  #         # Login to Docker Hub
  #         echo "${{ secrets.DOCKERHUB_KEY }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
  #
  #         # Push all tags
  #         echo "Pushing Docker images to Docker Hub"
  #         docker push "${VERSIONED_IMAGE_NAME}"
  #         docker push "${LATEST_IMAGE_NAME}"
  #         docker push "${SHA_IMAGE_NAME}"

  # github-release:
  #   runs-on: ubuntu-latest
  #   needs: [release-build, pypi-publish, docker-push]
  #   permissions:
  #     contents: write
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Create GitHub Release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: v${{ needs.release-build.outputs.version }}
  #         release_name: Release ${{ needs.release-build.outputs.version }}
  #         body: |
  #           ## Pylon v${{ needs.release-build.outputs.version }}
  #
  #           **PyPI Package:**
  #           Published to PyPI: https://pypi.org/project/bittensor-pylon/${{ needs.release-build.outputs.version }}/
  #           Install with: `pip install bittensor-pylon==${{ needs.release-build.outputs.version }}`
  #
  #           **Docker Images:**
  #           - `${{ env.DOCKER_REPO_NAME }}:v${{ needs.release-build.outputs.version }}`
  #           - `${{ env.DOCKER_REPO_NAME }}:v1-latest`
  #         draft: false
  #         prerelease: false

