"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from google.protobuf.timestamp_pb2 import (
    Timestamp,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class InstrumentPool(Message):
    """标的池消息"""
    DESCRIPTOR: Descriptor = ...
    POOL_ID_FIELD_NUMBER: int
    POOL_NAME_FIELD_NUMBER: int
    SYMBOLS_FIELD_NUMBER: int
    CREATED_AT_FIELD_NUMBER: int
    UPDATED_AT_FIELD_NUMBER: int
    pool_id: Text = ...
    """标的池ID"""

    pool_name: Text = ...
    """标的池名"""

    @property
    def symbols(self) -> RepeatedScalarFieldContainer[Text]:
        """标的池代码集合"""
        pass
    @property
    def created_at(self) -> Timestamp:
        """标的池创建时间"""
        pass
    @property
    def updated_at(self) -> Timestamp:
        """标的池修改时间"""
        pass
    def __init__(self,
        *,
        pool_id : Text = ...,
        pool_name : Text = ...,
        symbols : Optional[Iterable[Text]] = ...,
        created_at : Optional[Timestamp] = ...,
        updated_at : Optional[Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"created_at",b"created_at",u"updated_at",b"updated_at"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"created_at",b"created_at",u"pool_id",b"pool_id",u"pool_name",b"pool_name",u"symbols",b"symbols",u"updated_at",b"updated_at"]) -> None: ...

class AddInstrumentPoolReq(Message):
    """新增标的池请求"""
    DESCRIPTOR: Descriptor = ...
    POOL_NAME_FIELD_NUMBER: int
    SYMBOLS_FIELD_NUMBER: int
    pool_name: Text = ...
    """标的池名字"""

    @property
    def symbols(self) -> RepeatedScalarFieldContainer[Text]:
        """标的池代码集合"""
        pass
    def __init__(self,
        *,
        pool_name : Text = ...,
        symbols : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pool_name",b"pool_name",u"symbols",b"symbols"]) -> None: ...

class AddInstrumentPoolRsp(Message):
    """新增标的池响应"""
    DESCRIPTOR: Descriptor = ...
    POOL_ID_FIELD_NUMBER: int
    pool_id: Text = ...
    """标的池ID"""

    def __init__(self,
        *,
        pool_id : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pool_id",b"pool_id"]) -> None: ...

class DelInstrumentPoolReq(Message):
    """删除标的池请求"""
    DESCRIPTOR: Descriptor = ...
    POOL_IDS_FIELD_NUMBER: int
    @property
    def pool_ids(self) -> RepeatedScalarFieldContainer[Text]:
        """标的池ID"""
        pass
    def __init__(self,
        *,
        pool_ids : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pool_ids",b"pool_ids"]) -> None: ...

class SetInstrumentPoolNameReq(Message):
    """修改标的池名字请求"""
    DESCRIPTOR: Descriptor = ...
    POOL_ID_FIELD_NUMBER: int
    POOL_NAME_FIELD_NUMBER: int
    pool_id: Text = ...
    """标的池ID"""

    pool_name: Text = ...
    """标的池名字"""

    def __init__(self,
        *,
        pool_id : Text = ...,
        pool_name : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pool_id",b"pool_id",u"pool_name",b"pool_name"]) -> None: ...

class SetInstrumentPoolSymbolsReq(Message):
    """修改标的池代码集合请求"""
    DESCRIPTOR: Descriptor = ...
    POOL_ID_FIELD_NUMBER: int
    SYMBOLS_FIELD_NUMBER: int
    pool_id: Text = ...
    """标的池ID"""

    @property
    def symbols(self) -> RepeatedScalarFieldContainer[Text]:
        """标的池代码集合"""
        pass
    def __init__(self,
        *,
        pool_id : Text = ...,
        symbols : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pool_id",b"pool_id",u"symbols",b"symbols"]) -> None: ...

class GetInstrumentPoolsReq(Message):
    """查询用户所有标的池列表请求"""
    DESCRIPTOR: Descriptor = ...
    def __init__(self,
        ) -> None: ...

class GetInstrumentPoolsRsp(Message):
    """查询用户所有标的池列表响应"""
    DESCRIPTOR: Descriptor = ...
    class Item(Message):
        DESCRIPTOR: Descriptor = ...
        POOL_ID_FIELD_NUMBER: int
        POOL_NAME_FIELD_NUMBER: int
        SYMBOL_COUNT_FIELD_NUMBER: int
        pool_id: Text = ...
        """标的池ID"""

        pool_name: Text = ...
        """标的池名字"""

        symbol_count: int = ...
        """标的池代码数量"""

        def __init__(self,
            *,
            pool_id : Text = ...,
            pool_name : Text = ...,
            symbol_count : int = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"pool_id",b"pool_id",u"pool_name",b"pool_name",u"symbol_count",b"symbol_count"]) -> None: ...

    POOLS_FIELD_NUMBER: int
    @property
    def pools(self) -> RepeatedCompositeFieldContainer[GetInstrumentPoolsRsp.Item]:
        """标的池列表"""
        pass
    def __init__(self,
        *,
        pools : Optional[Iterable[GetInstrumentPoolsRsp.Item]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pools",b"pools"]) -> None: ...

class GetInstrumentPoolByIdReq(Message):
    """查询标的池"""
    DESCRIPTOR: Descriptor = ...
    POOL_ID_FIELD_NUMBER: int
    pool_id: Text = ...
    def __init__(self,
        *,
        pool_id : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"pool_id",b"pool_id"]) -> None: ...
