"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    float,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    ScalarMap,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Mapping,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class GetIPOQuotaReq(Message):
    DESCRIPTOR: Descriptor = ...
    class PropertiesEntry(Message):
        DESCRIPTOR: Descriptor = ...
        KEY_FIELD_NUMBER: int
        VALUE_FIELD_NUMBER: int
        key: Text = ...
        value: Text = ...
        def __init__(self,
            *,
            key : Text = ...,
            value : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    PROPERTIES_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    account_id: Text = ...
    account_name: Text = ...
    channel_id: Text = ...
    @property
    def properties(self) -> ScalarMap[Text, Text]: ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        properties : Optional[Mapping[Text, Text]] = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"properties",b"properties",u"rid",b"rid"]) -> None: ...

class GetIPOQuotaRsp(Message):
    DESCRIPTOR: Descriptor = ...
    class IPOQI(Message):
        DESCRIPTOR: Descriptor = ...
        EXCHANGE_FIELD_NUMBER: int
        QUOTA_FIELD_NUMBER: int
        SSE_STAR_QUOTA_FIELD_NUMBER: int
        exchange: Text = ...
        """市场"""

        quota: float = ...
        """市场配额"""

        SSE_STAR_quota: float = ...
        """上海科创板配额"""

        def __init__(self,
            *,
            exchange : Text = ...,
            quota : float = ...,
            SSE_STAR_quota : float = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"SSE_STAR_quota",b"SSE_STAR_quota",u"exchange",b"exchange",u"quota",b"quota"]) -> None: ...

    QUOTA_FIELD_NUMBER: int
    DATA_FIELD_NUMBER: int
    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    quota: float = ...
    """申购配额，本字段作废"""

    @property
    def data(self) -> RepeatedCompositeFieldContainer[GetIPOQuotaRsp.IPOQI]:
        """申购配额，按市场和板块"""
        pass
    account_id: Text = ...
    """请求响应可能异步推送，增加账户ID与RID支持"""

    account_name: Text = ...
    channel_id: Text = ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        quota : float = ...,
        data : Optional[Iterable[GetIPOQuotaRsp.IPOQI]] = ...,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"data",b"data",u"quota",b"quota",u"rid",b"rid"]) -> None: ...

class GetIPOInstrumentsReq(Message):
    DESCRIPTOR: Descriptor = ...
    class PropertiesEntry(Message):
        DESCRIPTOR: Descriptor = ...
        KEY_FIELD_NUMBER: int
        VALUE_FIELD_NUMBER: int
        key: Text = ...
        value: Text = ...
        def __init__(self,
            *,
            key : Text = ...,
            value : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    SEC_TYPE_FIELD_NUMBER: int
    PROPERTIES_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    account_id: Text = ...
    account_name: Text = ...
    channel_id: Text = ...
    sec_type: int = ...
    @property
    def properties(self) -> ScalarMap[Text, Text]: ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        sec_type : int = ...,
        properties : Optional[Mapping[Text, Text]] = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"properties",b"properties",u"rid",b"rid",u"sec_type",b"sec_type"]) -> None: ...

class GetIPOInstrumentsRsp(Message):
    DESCRIPTOR: Descriptor = ...
    class IPOI(Message):
        DESCRIPTOR: Descriptor = ...
        SYMBOL_FIELD_NUMBER: int
        PRICE_FIELD_NUMBER: int
        MIN_VOL_FIELD_NUMBER: int
        MAX_VOL_FIELD_NUMBER: int
        symbol: Text = ...
        """申购新股symbol"""

        price: float = ...
        """申购价格"""

        min_vol: int = ...
        """申购最小数量"""

        max_vol: int = ...
        """申购最大数量"""

        def __init__(self,
            *,
            symbol : Text = ...,
            price : float = ...,
            min_vol : int = ...,
            max_vol : int = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"max_vol",b"max_vol",u"min_vol",b"min_vol",u"price",b"price",u"symbol",b"symbol"]) -> None: ...

    DATA_FIELD_NUMBER: int
    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    @property
    def data(self) -> RepeatedCompositeFieldContainer[GetIPOInstrumentsRsp.IPOI]: ...
    account_id: Text = ...
    """请求响应可能异步推送，增加账户ID与RID支持"""

    account_name: Text = ...
    channel_id: Text = ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        data : Optional[Iterable[GetIPOInstrumentsRsp.IPOI]] = ...,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"data",b"data",u"rid",b"rid"]) -> None: ...

class GetIPOMatchNumberReq(Message):
    DESCRIPTOR: Descriptor = ...
    class PropertiesEntry(Message):
        DESCRIPTOR: Descriptor = ...
        KEY_FIELD_NUMBER: int
        VALUE_FIELD_NUMBER: int
        key: Text = ...
        value: Text = ...
        def __init__(self,
            *,
            key : Text = ...,
            value : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    START_DATE_FIELD_NUMBER: int
    END_DATE_FIELD_NUMBER: int
    PROPERTIES_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    account_id: Text = ...
    account_name: Text = ...
    channel_id: Text = ...
    start_date: int = ...
    """开始日期"""

    end_date: int = ...
    """结束日期"""

    @property
    def properties(self) -> ScalarMap[Text, Text]: ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        start_date : int = ...,
        end_date : int = ...,
        properties : Optional[Mapping[Text, Text]] = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"end_date",b"end_date",u"properties",b"properties",u"rid",b"rid",u"start_date",b"start_date"]) -> None: ...

class GetIPOMatchNumberRsp(Message):
    DESCRIPTOR: Descriptor = ...
    class IMN(Message):
        DESCRIPTOR: Descriptor = ...
        ORDER_ID_FIELD_NUMBER: int
        SYMBOL_FIELD_NUMBER: int
        VOLUME_FIELD_NUMBER: int
        MATCH_NUMBER_FIELD_NUMBER: int
        ORDER_AT_FIELD_NUMBER: int
        MATCH_AT_FIELD_NUMBER: int
        order_id: Text = ...
        """委托号"""

        symbol: Text = ...
        """新股symbol"""

        volume: int = ...
        """成交数量"""

        match_number: Text = ...
        """申购配号"""

        order_at: int = ...
        """委托日期"""

        match_at: int = ...
        """配号日期"""

        def __init__(self,
            *,
            order_id : Text = ...,
            symbol : Text = ...,
            volume : int = ...,
            match_number : Text = ...,
            order_at : int = ...,
            match_at : int = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"match_at",b"match_at",u"match_number",b"match_number",u"order_at",b"order_at",u"order_id",b"order_id",u"symbol",b"symbol",u"volume",b"volume"]) -> None: ...

    DATA_FIELD_NUMBER: int
    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    @property
    def data(self) -> RepeatedCompositeFieldContainer[GetIPOMatchNumberRsp.IMN]: ...
    account_id: Text = ...
    """请求响应可能异步推送，增加账户ID与RID支持"""

    account_name: Text = ...
    channel_id: Text = ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        data : Optional[Iterable[GetIPOMatchNumberRsp.IMN]] = ...,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"data",b"data",u"rid",b"rid"]) -> None: ...

class GetIPOLotInfoReq(Message):
    DESCRIPTOR: Descriptor = ...
    class PropertiesEntry(Message):
        DESCRIPTOR: Descriptor = ...
        KEY_FIELD_NUMBER: int
        VALUE_FIELD_NUMBER: int
        key: Text = ...
        value: Text = ...
        def __init__(self,
            *,
            key : Text = ...,
            value : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    START_DATE_FIELD_NUMBER: int
    END_DATE_FIELD_NUMBER: int
    PROPERTIES_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    account_id: Text = ...
    account_name: Text = ...
    channel_id: Text = ...
    start_date: int = ...
    """开始日期"""

    end_date: int = ...
    """结束日期"""

    @property
    def properties(self) -> ScalarMap[Text, Text]: ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        start_date : int = ...,
        end_date : int = ...,
        properties : Optional[Mapping[Text, Text]] = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"end_date",b"end_date",u"properties",b"properties",u"rid",b"rid",u"start_date",b"start_date"]) -> None: ...

class GetIPOLotInfoRsp(Message):
    DESCRIPTOR: Descriptor = ...
    class ILI(Message):
        DESCRIPTOR: Descriptor = ...
        SYMBOL_FIELD_NUMBER: int
        ORDER_AT_FIELD_NUMBER: int
        LOT_AT_FIELD_NUMBER: int
        LOT_VOLUME_FIELD_NUMBER: int
        GIVE_UP_VOLUME_FIELD_NUMBER: int
        PRICE_FIELD_NUMBER: int
        AMOUNT_FIELD_NUMBER: int
        PAY_VOLUME_FIELD_NUMBER: int
        PAY_AMOUNT_FIELD_NUMBER: int
        symbol: Text = ...
        """新股symbol"""

        order_at: int = ...
        """委托日期"""

        lot_at: int = ...
        """中签日期"""

        lot_volume: int = ...
        """中签数量"""

        give_up_volume: int = ...
        """放弃数量"""

        price: float = ...
        """中签价格"""

        amount: float = ...
        """中签金额"""

        pay_volume: float = ...
        """已缴款数量"""

        pay_amount: float = ...
        """已缴款金额"""

        def __init__(self,
            *,
            symbol : Text = ...,
            order_at : int = ...,
            lot_at : int = ...,
            lot_volume : int = ...,
            give_up_volume : int = ...,
            price : float = ...,
            amount : float = ...,
            pay_volume : float = ...,
            pay_amount : float = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"amount",b"amount",u"give_up_volume",b"give_up_volume",u"lot_at",b"lot_at",u"lot_volume",b"lot_volume",u"order_at",b"order_at",u"pay_amount",b"pay_amount",u"pay_volume",b"pay_volume",u"price",b"price",u"symbol",b"symbol"]) -> None: ...

    DATA_FIELD_NUMBER: int
    ACCOUNT_ID_FIELD_NUMBER: int
    ACCOUNT_NAME_FIELD_NUMBER: int
    CHANNEL_ID_FIELD_NUMBER: int
    RID_FIELD_NUMBER: int
    @property
    def data(self) -> RepeatedCompositeFieldContainer[GetIPOLotInfoRsp.ILI]: ...
    account_id: Text = ...
    """请求响应可能异步推送，增加账户ID与RID支持"""

    account_name: Text = ...
    channel_id: Text = ...
    rid: Text = ...
    """请求ID，唯一标识本次请求"""

    def __init__(self,
        *,
        data : Optional[Iterable[GetIPOLotInfoRsp.ILI]] = ...,
        account_id : Text = ...,
        account_name : Text = ...,
        channel_id : Text = ...,
        rid : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"account_name",b"account_name",u"channel_id",b"channel_id",u"data",b"data",u"rid",b"rid"]) -> None: ...
