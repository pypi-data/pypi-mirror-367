"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    float,
    int,
)

from gm.pb.common_pb2 import (
    Filter,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class GetAccountConnectionsReq(Message):
    DESCRIPTOR: Descriptor = ...
    FILTER_FIELD_NUMBER: int
    ACCOUNT_IDS_FIELD_NUMBER: int
    @property
    def filter(self) -> Filter: ...
    @property
    def account_ids(self) -> RepeatedScalarFieldContainer[Text]: ...
    def __init__(self,
        *,
        filter : Optional[Filter] = ...,
        account_ids : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"filter",b"filter"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"account_ids",b"account_ids",u"filter",b"filter"]) -> None: ...

class DelAccountConnectionsReq(Message):
    DESCRIPTOR: Descriptor = ...
    ACCOUNT_IDS_FIELD_NUMBER: int
    @property
    def account_ids(self) -> RepeatedScalarFieldContainer[Text]: ...
    def __init__(self,
        *,
        account_ids : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_ids",b"account_ids"]) -> None: ...

class GetAccountStatusesReq(Message):
    DESCRIPTOR: Descriptor = ...
    FILTER_FIELD_NUMBER: int
    ACCOUNT_IDS_FIELD_NUMBER: int
    @property
    def filter(self) -> Filter: ...
    @property
    def account_ids(self) -> RepeatedScalarFieldContainer[Text]: ...
    def __init__(self,
        *,
        filter : Optional[Filter] = ...,
        account_ids : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"filter",b"filter"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"account_ids",b"account_ids",u"filter",b"filter"]) -> None: ...

class SetAccountCumInoutReq(Message):
    DESCRIPTOR: Descriptor = ...
    ACCOUNT_ID_FIELD_NUMBER: int
    CUM_INOUT_FIELD_NUMBER: int
    account_id: Text = ...
    cum_inout: float = ...
    def __init__(self,
        *,
        account_id : Text = ...,
        cum_inout : float = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"cum_inout",b"cum_inout"]) -> None: ...

class SetAccountCredentialReq(Message):
    DESCRIPTOR: Descriptor = ...
    ACCOUNT_ID_FIELD_NUMBER: int
    PASSWORD_FIELD_NUMBER: int
    account_id: Text = ...
    password: Text = ...
    def __init__(self,
        *,
        account_id : Text = ...,
        password : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id",u"password",b"password"]) -> None: ...

class GetAccountCredentialReq(Message):
    DESCRIPTOR: Descriptor = ...
    ACCOUNT_ID_FIELD_NUMBER: int
    account_id: Text = ...
    def __init__(self,
        *,
        account_id : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id"]) -> None: ...

class GetAccountCredentialRsp(Message):
    DESCRIPTOR: Descriptor = ...
    HAS_CREDENTIAL_FIELD_NUMBER: int
    has_credential: bool = ...
    def __init__(self,
        *,
        has_credential : bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"has_credential",b"has_credential"]) -> None: ...

class DelAccountCredentialReq(Message):
    DESCRIPTOR: Descriptor = ...
    ACCOUNT_ID_FIELD_NUMBER: int
    account_id: Text = ...
    def __init__(self,
        *,
        account_id : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"account_id",b"account_id"]) -> None: ...
