"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    float,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class RuntimeConfig(Message):
    DESCRIPTOR: Descriptor = ...
    OWNER_ID_FIELD_NUMBER: int
    KEY_FIELD_NUMBER: int
    VALUE_FIELD_NUMBER: int
    NAME_FIELD_NUMBER: int
    INTRO_FIELD_NUMBER: int
    owner_id: Text = ...
    """配置项拥有者ID(策略ID/账户ID etc.)"""

    key: Text = ...
    """配置项键"""

    value: bytes = ...
    """配置项值"""

    name: Text = ...
    """配置项名"""

    intro: Text = ...
    """配置项说明"""

    def __init__(self,
        *,
        owner_id : Text = ...,
        key : Text = ...,
        value : bytes = ...,
        name : Text = ...,
        intro : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"intro",b"intro",u"key",b"key",u"name",b"name",u"owner_id",b"owner_id",u"value",b"value"]) -> None: ...

class Parameter(Message):
    """动态参数"""
    DESCRIPTOR: Descriptor = ...
    KEY_FIELD_NUMBER: int
    VALUE_FIELD_NUMBER: int
    MIN_FIELD_NUMBER: int
    MAX_FIELD_NUMBER: int
    NAME_FIELD_NUMBER: int
    INTRO_FIELD_NUMBER: int
    GROUP_FIELD_NUMBER: int
    READONLY_FIELD_NUMBER: int
    key: Text = ...
    """参数键"""

    value: float = ...
    """参数值"""

    min: float = ...
    """可设置的最小值"""

    max: float = ...
    """可设置的最大值"""

    name: Text = ...
    """参数名"""

    intro: Text = ...
    """参数说明"""

    group: Text = ...
    """组名"""

    readonly: bool = ...
    """是否只读"""

    def __init__(self,
        *,
        key : Text = ...,
        value : float = ...,
        min : float = ...,
        max : float = ...,
        name : Text = ...,
        intro : Text = ...,
        group : Text = ...,
        readonly : bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"group",b"group",u"intro",b"intro",u"key",b"key",u"max",b"max",u"min",b"min",u"name",b"name",u"readonly",b"readonly",u"value",b"value"]) -> None: ...

class Parameters(Message):
    DESCRIPTOR: Descriptor = ...
    OWNER_ID_FIELD_NUMBER: int
    PARAMETERS_FIELD_NUMBER: int
    owner_id: Text = ...
    """参数拥有者ID(策略ID/账户ID etc.)"""

    @property
    def parameters(self) -> RepeatedCompositeFieldContainer[Parameter]:
        """参数集合"""
        pass
    def __init__(self,
        *,
        owner_id : Text = ...,
        parameters : Optional[Iterable[Parameter]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"owner_id",b"owner_id",u"parameters",b"parameters"]) -> None: ...

class Symbols(Message):
    DESCRIPTOR: Descriptor = ...
    OWNER_ID_FIELD_NUMBER: int
    SYMBOLS_FIELD_NUMBER: int
    owner_id: Text = ...
    """交易代码拥有者ID(策略ID/账户ID etc.)"""

    @property
    def symbols(self) -> RepeatedScalarFieldContainer[Text]:
        """交易代码集合"""
        pass
    def __init__(self,
        *,
        owner_id : Text = ...,
        symbols : Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"owner_id",b"owner_id",u"symbols",b"symbols"]) -> None: ...
