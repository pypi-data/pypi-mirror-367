###
POST http://localhost:2031/execute
Content-Type: text/plain

new .5 mod_freq
new SineNode modulator
new 50 mod_gain
new MultiplyNode multiply
new AddNode add
new 440 avg_freq
new SineNode sine
link mod_freq.out -> modulator.frequency
link modulator.out -> multiply.a
link mod_gain.out -> multiply.b
link multiply.out -> add.a
link avg_freq.out -> add.b
link add.out -> sine.frequency

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

###
POST http://localhost:2031/nodes/output?type=PlaybackNode

###
GET http://localhost:2031/nodes

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

###
GET http://localhost:2031/nodes/sine

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

###
GET http://localhost:2031/connections

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

###
PATCH http://localhost:2031/connections
Content-Type: application/json

{
  "source": {
    "node_name": "sine",
    "port_name": "out"
  },
  "sink": {
    "node_name": "output",
    "port_name": "left"
  }
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
