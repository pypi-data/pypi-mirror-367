%import common.DIGIT
%import common.SIGNED_INT
%import common.SIGNED_FLOAT
%import common.ESCAPED_STRING
%import common.LETTER
%import common.CNAME
%import common.NEWLINE -> _NEWLINE
%import python.atom

%import common.WS_INLINE
%import common.CPP_COMMENT
%import common.C_COMMENT
%ignore WS_INLINE
%ignore CPP_COMMENT
%ignore C_COMMENT


UPPERCASE_NAME: "A".."Z" ("_" | LETTER | DIGIT)*
LOWERCASE_NAME: "_"? "a".."z" ("_" | LETTER | DIGIT)*

// Literal values
BOOLEAN.1: "true"i | "false"i
NULL.1: "none"i | "null"i
UNDERSCORE: "_"

?value: SIGNED_INT             -> int
      | SIGNED_FLOAT           -> float
      | ESCAPED_STRING         -> string
      | (NULL | UNDERSCORE)    -> null
      | BOOLEAN                -> bool
      | "[" (value ","?)* "]"  -> array
      | "$" CNAME              -> global_var

// Node instantiation
node_type: UPPERCASE_NAME
arguments: (value ","?)*
keyword_arguments: (CNAME "=" value ","?)*

// Graph elements
node: LOWERCASE_NAME
port: node "." CNAME
input: port
output: port
connection: output "->" input

?element: (node | port | connection)

// Commands
?expression: (value | node_type | node | port | connection)

?command: "start"i                                                                      -> start
        | "stop"i                                                                       -> stop
        | "clear"i                                                                      -> clear
        | ("export"i | "save"i)                                                         -> export
        | ("create"i | "new"i)                     (node_type | value) LOWERCASE_NAME?  -> create
        | ("link"i | "connect"i | "attach"i)       connection                           -> link
        | ("unlink"i | "disconnect"i | "detach"i)  element                              -> unlink
        | ("remove"i | "delete"i)                  node                                 -> remove
        | ["eval"i | "get"i | "query"i]            expression

?delimited_command: command? ";" _NEWLINE* | command _NEWLINE+
script: delimited_command* command?
?start: script
