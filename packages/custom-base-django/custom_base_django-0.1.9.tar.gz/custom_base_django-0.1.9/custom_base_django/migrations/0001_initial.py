# Generated by Django 5.1.2 on 2025-07-20 14:35

import custom_base_django.models.choices
import custom_base_django.utils
import django.db.models.deletion
import functools
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('struct_name', models.CharField(max_length=255, verbose_name='struct_name')),
                ('extra_non_required_fields', models.JSONField(blank=True, default=list, null=True, verbose_name='extra_non_required_fields')),
                ('nested', models.JSONField(blank=True, default=dict, null=True, verbose_name='nested')),
                ('nested_fields', models.JSONField(blank=True, default=dict, null=True, verbose_name='nested_fields')),
                ('extra_writable_fields', models.JSONField(blank=True, default=list, null=True, verbose_name='extra_writable_fields')),
                ('readonly_fields', models.JSONField(blank=True, default=list, null=True, verbose_name='readonly_fields')),
                ('exclude_fields', models.JSONField(blank=True, default=list, null=True, verbose_name='exclude_fields')),
                ('extra_fields', models.JSONField(blank=True, default=list, null=True, verbose_name='extra_fields')),
                ('extra_validations', models.JSONField(blank=True, default=list, null=True, verbose_name='extra_validations')),
                ('blank_objects', models.JSONField(blank=True, default=dict, null=True, verbose_name='blank_objects')),
                ('pk_field', models.IntegerField(blank=True, null=True, verbose_name='pk')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='model')),
                ('must_save', models.BooleanField(default=True, verbose_name='must_save')),
                ('need_authentication', models.BooleanField(default=False, verbose_name='need_authentication')),
                ('custom_query', models.JSONField(blank=True, default=dict, null=True, verbose_name='custom_query')),
                ('fields', models.JSONField(blank=True, default=list, null=True, verbose_name='fields')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PeriodicTasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('functions', models.JSONField(default=list, verbose_name='Functions')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('run_parallel', models.BooleanField(default=True, verbose_name='run_parallel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('category', models.CharField(max_length=255, verbose_name='category')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('category_title', models.CharField(blank=True, editable=False, max_length=255, null=True, unique=True, verbose_name='category_title')),
                ('translated_title', models.JSONField(blank=True, default=functools.partial(custom_base_django.utils.Defaults.fix_json, *({'en': '', 'fa': ''},), **{}), null=True, verbose_name='translated_title')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('category', 'title'), name='unique_category_title')],
            },
        ),
        migrations.CreateModel(
            name='RunPeriodicTasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('start_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='start_time')),
                ('end_time', models.DateTimeField(auto_now=True, null=True, verbose_name='end_time')),
                ('res', models.JSONField(blank=True, null=True, verbose_name='res')),
                ('status', custom_base_django.models.choices.ChoiceForeignKey(blank=True, default=functools.partial(custom_base_django.utils.Defaults.first_object, *(), **{'filters': {'category': None}, 'model': custom_base_django.models.choices.Choice}), limit_choices_to=models.Q(('category', 'task_status')), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_status', to='custom_base_django.choice', to_field='category_title', verbose_name='task_status')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='custom_base_django.periodictasks', verbose_name='task')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='workflow_name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('transition_status', custom_base_django.models.choices.ChoiceForeignKey(blank=True, default=functools.partial(custom_base_django.utils.Defaults.first_object, *(), **{'filters': {'category': None}, 'model': custom_base_django.models.choices.Choice}), limit_choices_to=models.Q(('category', 'transition_status')), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transition_status_choices', to='custom_base_django.choice', to_field='category_title', verbose_name='transition_status')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='WorkflowState_name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('serializer_struct', models.JSONField(default=list, verbose_name='serializer_struct')),
                ('extra_data', models.JSONField(blank=True, default=dict, null=True, verbose_name='extra_data')),
                ('order_number', models.IntegerField(default=0, verbose_name='order_number')),
                ('get_single_form', models.BooleanField(default=False, verbose_name='get_single_form')),
                ('can_transition_to', models.ManyToManyField(blank=True, to='custom_base_django.workflowstate', verbose_name='can_transition_to')),
                ('next_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='self_next_state', to='custom_base_django.workflowstate', verbose_name='next_state')),
                ('previous_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='self_previous_state', to='custom_base_django.workflowstate', verbose_name='previous_state')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_states', to='custom_base_django.workflow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('action_type', models.CharField(blank=True, choices=[('update', 'Update'), ('create', 'Create')], default='update', max_length=100, verbose_name='action_type')),
                ('object_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='object_id')),
                ('additional_data', models.JSONField(blank=True, default=dict, verbose_name='additional data')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='description')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='deadline')),
                ('creator_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_creator_%(model_name)s', to=settings.AUTH_USER_MODEL, verbose_name='creator_user')),
                ('editor_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_updator_%(model_name)s', to=settings.AUTH_USER_MODEL, verbose_name='updator_user')),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_histories', to=settings.AUTH_USER_MODEL, verbose_name='assign to user')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(model_name)s_user', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='workflow_histories', to='custom_base_django.workflow')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='state_histories', to='custom_base_django.workflowstate')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
