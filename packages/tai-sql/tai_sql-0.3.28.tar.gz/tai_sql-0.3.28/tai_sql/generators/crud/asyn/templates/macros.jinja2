

{% macro pydantic_model_config() -%}
    class Config:
        # Performance optimizations
        arbitrary_types_allowed = False  # Más rápido al validar tipos estrictos
        use_enum_values = True
        validate_assignment = True  # Evita validación en cada asignación
        frozen = False  # Hace el objeto inmutable y más rápido
        str_strip_whitespace = False  # Evita procesamiento innecesario de strings
        validate_default = False  # No valida valores por defecto
        extra = "forbid"  # Más rápido que "allow" o "ignore"
{%- endmacro %}


{% macro generate_query_parameters(model) -%}
{% for column in model.columns -%}
{% if not column.args.get('autoincrement', False) -%}
    {% if column.args.get('primary_key', False) or column.is_foreign_key -%}
{{ column.name }}: Optional[{{ column.type }}] = None,
    {% elif 'str' == column.type or 'Text' == column.type or 'bool' == column.type -%}
{{ column.name }}: Optional[{{ column.type }}] = None,
    {% elif  'date' == column.type or 'int' == column.type or 'BigInteger' == column.type -%}
{{ column.name }}: Optional[{{ column.type }}] = None,
min_{{ column.name }}: Optional[{{ column.type }}] = None,
max_{{ column.name }}: Optional[{{ column.type }}] = None,
    {% elif 'float' == column.type or 'Numeric' == column.type or 'datetime' == column.type or 'time' == column.type -%}
min_{{ column.name }}: Optional[{{ column.type }}] = None,
max_{{ column.name }}: Optional[{{ column.type }}] = None,
    {% else -%}
{{ column.name }}: Optional[{{ column.type }}] = None,
    {%- endif -%}
{%- endif -%}
{%- endfor -%}
{%- endmacro -%}


{% macro generate_query_args(model) -%}
{% for column in model.columns -%}
{% if not column.args.get('autoincrement', False) -%}
{% if column.args.get('primary_key', False) or column.is_foreign_key -%}
{{ column.name }}: Filtrar por {{ column.name }}
{% elif 'str' == column.type or 'Text' == column.type or 'bool' == column.type -%}
{{ column.name }}: Filtrar por {{ column.name }}
{% elif  'date' == column.type or 'int' == column.type or 'BigInteger' == column.type -%}
{{ column.name }}: Filtrar por {{ column.name }}
min_{{ column.name }}: Filtrar por fecha mínima (incluída)
max_{{ column.name }}: Filtrar por fecha máxima (incluída)
{% elif 'float' == column.type or 'Numeric' == column.type or 'datetime' == column.type or 'time' == column.type -%}
min_{{ column.name }}: Filtrar por valor mínimo de {{ column.name }} (incluído)
max_{{ column.name }}: Filtrar por valor máximo de {{ column.name }} (incluído)
{% else -%}
{{ column.name }}: Filtrar por {{ column.name }}
{%- endif -%}
{%- endif -%}
{%- endfor -%}
{%- endmacro %}


{% macro asing_parameters(model) -%}
{% for column in model.columns -%}
{% if not column.args.get('autoincrement', False) -%}
{% if column.args.get('primary_key', False) or column.is_foreign_key -%}
{{ column.name }}={{ column.name }},
{% elif 'str' == column.type or 'Text' == column.type or 'bool' == column.type -%}
{{ column.name }}={{ column.name }},
{% elif  'date' == column.type or 'int' == column.type or 'BigInteger' == column.type -%}
{{ column.name }}={{ column.name }},
min_{{ column.name }}=min_{{ column.name }},
max_{{ column.name }}=max_{{ column.name }},
{% elif 'float' == column.type or 'Numeric' == column.type or 'datetime' == column.type or 'time' == column.type -%}
min_{{ column.name }}=min_{{ column.name }},
max_{{ column.name }}=max_{{ column.name }},
{% else -%}
{{ column.name }}={{ column.name }},
{%- endif -%}
{%- endif -%}
{%- endfor -%}
{%- endmacro %}


{% macro generate_filter_query(model) -%}
{% for column in model.columns -%}
{% if not column.args.get('autoincrement', False) -%}
{% if column.args.get('primary_key', False) or column.is_foreign_key -%}
if {{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} == {{ column.name }})
{% elif 'str' == column.type or 'Text' == column.type or 'bool' == column.type -%}
if {{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} == {{ column.name }})
{% elif 'date' == column.type or 'int' == column.type or 'BigInteger' == column.type -%}
if {{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} == {{ column.name }})
if min_{{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} >= min_{{ column.name }})
if max_{{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} <= max_{{ column.name }})
{% elif 'float' == column.type or 'Numeric' == column.type or 'datetime' == column.type or 'time' == column.type -%}
if min_{{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} >= min_{{ column.name }})
if max_{{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} <= max_{{ column.name }})
{% else -%}
if {{ column.name }} is not None:
    query = query.where({{ model.name }}.{{ column.name }} == {{ column.name }})
{%- endif -%}
{%- endif -%}
{%- endfor -%}
{%- endmacro %}