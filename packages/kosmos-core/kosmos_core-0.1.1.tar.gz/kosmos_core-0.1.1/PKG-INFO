Metadata-Version: 2.4
Name: kosmos-core
Version: 0.1.1
Summary: Koordinations-, Optimierungs- und Simulations-Software für Modulare Quanten-Systeme in 6G Netzwerken
Author-email: Michael Kölle <michael.koelle@aignosco.com>
License-Expression: MIT
Keywords: api,kosmos,kosmos-core
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydantic>=2.11.7
Requires-Dist: pydantic-settings>=2.10.1
Provides-Extra: dev
Requires-Dist: pytest>=8.4.1; extra == "dev"
Requires-Dist: pytest-cov>=6.2.1; extra == "dev"
Requires-Dist: pytest-asyncio>=1.1.0; extra == "dev"
Requires-Dist: ruff>=0.12.7; extra == "dev"
Requires-Dist: pre-commit>=4.2.0; extra == "dev"
Requires-Dist: pipreqs>=0.4.13; extra == "dev"
Dynamic: license-file

# Kosmos

Koordinations-, Optimierungs- und Simulations-Software für Modulare Quanten-Systeme in 6G Netzwerken

Make sure that you have Python version >=3.13

## Installation

### Install from PyPI (when published)

```sh
pip install kosmos
```

### Development Setup

```sh
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
pip install --upgrade pip
pip install -e ".[dev]"
```

## Usage

```sh
python -m kosmos.main
```

### Run tests

```sh
pytest -v
```

### Get test coverage

```sh
coverage run -m pytest tests/ && coverage report -m
```

### Run lint

```sh
ruff check .
```

### Run format

```sh
ruff format .
```

## Building and Publishing

### Build the package

```sh
python -m build
```

### Publish to PyPI

```sh
pip install twine
twine upload dist/*
```
