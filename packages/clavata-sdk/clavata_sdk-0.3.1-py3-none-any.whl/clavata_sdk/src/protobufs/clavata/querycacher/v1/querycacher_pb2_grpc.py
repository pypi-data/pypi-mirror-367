# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from clavata.querycacher.v1 import querycacher_pb2 as clavata_dot_querycacher_dot_v1_dot_querycacher__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in clavata/querycacher/v1/querycacher_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QueryCacherServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/clavata.querycacher.v1.QueryCacherService/Get',
                request_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.GetRequest.SerializeToString,
                response_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.GetResponse.FromString,
                _registered_method=True)
        self.Put = channel.unary_unary(
                '/clavata.querycacher.v1.QueryCacherService/Put',
                request_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.PutRequest.SerializeToString,
                response_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.PutResponse.FromString,
                _registered_method=True)
        self.Flush = channel.unary_unary(
                '/clavata.querycacher.v1.QueryCacherService/Flush',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.FlushResponse.FromString,
                _registered_method=True)
        self.BatchGet = channel.unary_unary(
                '/clavata.querycacher.v1.QueryCacherService/BatchGet',
                request_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchGetRequest.SerializeToString,
                response_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchGetResponse.FromString,
                _registered_method=True)
        self.BatchPut = channel.unary_unary(
                '/clavata.querycacher.v1.QueryCacherService/BatchPut',
                request_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchPutRequest.SerializeToString,
                response_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchPutResponse.FromString,
                _registered_method=True)


class QueryCacherServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchPut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryCacherServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.GetRequest.FromString,
                    response_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.GetResponse.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.PutRequest.FromString,
                    response_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.PutResponse.SerializeToString,
            ),
            'Flush': grpc.unary_unary_rpc_method_handler(
                    servicer.Flush,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.FlushResponse.SerializeToString,
            ),
            'BatchGet': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGet,
                    request_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchGetRequest.FromString,
                    response_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchGetResponse.SerializeToString,
            ),
            'BatchPut': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchPut,
                    request_deserializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchPutRequest.FromString,
                    response_serializer=clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchPutResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'clavata.querycacher.v1.QueryCacherService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('clavata.querycacher.v1.QueryCacherService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QueryCacherService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.querycacher.v1.QueryCacherService/Get',
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.GetRequest.SerializeToString,
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.querycacher.v1.QueryCacherService/Put',
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.PutRequest.SerializeToString,
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.PutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Flush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.querycacher.v1.QueryCacherService/Flush',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.FlushResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.querycacher.v1.QueryCacherService/BatchGet',
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchGetRequest.SerializeToString,
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchPut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.querycacher.v1.QueryCacherService/BatchPut',
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchPutRequest.SerializeToString,
            clavata_dot_querycacher_dot_v1_dot_querycacher__pb2.BatchPutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
