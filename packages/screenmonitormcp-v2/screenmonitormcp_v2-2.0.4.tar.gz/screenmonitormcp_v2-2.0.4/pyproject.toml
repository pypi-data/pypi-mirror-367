[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "screenmonitormcp-v2"
version = "2.0.4"
description = "A revolutionary Model Context Protocol (MCP) server that gives AI real-time vision capabilities and enhanced UI intelligence power"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
]
keywords = ["mcp", "screen", "monitor", "capture", "ai", "vision", "automation"]
authors = [{name = "inkbytefo", email = "inkbytefo@gmail.com"}]
maintainers = [{name = "inkbytefo", email = "inkbytefo@gmail.com"}]
license = {text = "MIT"}
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sse-starlette>=1.6.5",
    "python-socketio>=5.10.0",
    "mss>=9.0.1",
    "Pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "openai>=1.3.0",
    "pytesseract>=0.3.10",
    "easyocr>=1.7.0",
    "pygetwindow>=0.0.9",
    "pyautogui>=0.9.54",
    "psutil>=5.9.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "structlog>=23.1.0",
    "prometheus-client>=0.17.0",
    "tenacity>=8.2.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "mcp>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
testing = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/inkbytefo/ScreenMonitorMCP"
Repository = "https://github.com/inkbytefo/ScreenMonitorMCP"
Documentation = "https://github.com/inkbytefo/ScreenMonitorMCP/blob/main/README.md"
"Bug Tracker" = "https://github.com/inkbytefo/ScreenMonitorMCP/issues"
Changelog = "https://github.com/inkbytefo/ScreenMonitorMCP/blob/main/CHANGELOG.md"

[project.scripts]
screenmonitormcp-v2-mcp = "screenmonitormcp_v2.mcp_main:main"
screenmonitormcp-v2-server = "screenmonitormcp_v2.server.main:main"
screenmonitormcp-v2-cli = "screenmonitormcp_v2.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["screenmonitormcp_v2*"]

[tool.setuptools.package-data]
"*" = ["py.typed", "*.pyi"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["screenmonitormcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
