# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ExecutionProtocol.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17\x45xecutionProtocol.proto\x12&com.spirent.service.execution.protocol\"\xbf\x1d\n\x10\x45xecutionMessage\x12K\n\x04type\x18\x01 \x02(\x0e\x32=.com.spirent.service.execution.protocol.ExecutionMessage.Type\x12L\n\rcancelMessage\x18\x02 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.CancelMessage\x12R\n\x10heartbeatMessage\x18\x03 \x01(\x0b\x32\x38.com.spirent.service.execution.protocol.HeartbeatMessage\x12H\n\x0binitMessage\x18\x04 \x01(\x0b\x32\x33.com.spirent.service.execution.protocol.InitMessage\x12N\n\x0einitMessageAck\x18# \x01(\x0b\x32\x36.com.spirent.service.execution.protocol.InitMessageAck\x12\x44\n\tinvokeAck\x18\x05 \x01(\x0b\x32\x31.com.spirent.service.execution.protocol.InvokeAck\x12L\n\rinvokeMessage\x18\x06 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.InvokeMessage\x12N\n\x0einvokeResponse\x18\x07 \x01(\x0b\x32\x36.com.spirent.service.execution.protocol.InvokeResponse\x12L\n\rreportMessage\x18\x08 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.ReportMessage\x12H\n\x0bstepMessage\x18\t \x01(\x0b\x32\x33.com.spirent.service.execution.protocol.StepMessage\x12R\n\x10terminateMessage\x18\n \x01(\x0b\x32\x38.com.spirent.service.execution.protocol.TerminateMessage\x12J\n\x0ctokenMessage\x18\x0b \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.TokenMessage\x12\\\n\x15\x65xecutionIssueMessage\x18\x0c \x01(\x0b\x32=.com.spirent.service.execution.protocol.ExecutionIssueMessage\x12V\n\x12\x61gentStatusMessage\x18\x1d \x01(\x0b\x32:.com.spirent.service.execution.protocol.AgentStatusMessage\x12Z\n\x14\x65xtractedDataMessage\x18  \x01(\x0b\x32<.com.spirent.service.execution.protocol.ExtractedDataMessage\x12M\n\x11newSessionMessage\x18\r \x01(\x0b\x32\x32.com.spirent.service.execution.protocol.NewSession\x12V\n\x12newSessionResponse\x18\x0e \x01(\x0b\x32:.com.spirent.service.execution.protocol.NewSessionResponse\x12Y\n\x17sendTerminalDataMessage\x18\x0f \x01(\x0b\x32\x38.com.spirent.service.execution.protocol.SendTerminalData\x12\x62\n\x18sendTerminalDataResponse\x18\x10 \x01(\x0b\x32@.com.spirent.service.execution.protocol.SendTerminalDataResponse\x12S\n\x14sessionActionMessage\x18\x11 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.SessionAction\x12\\\n\x15sessionActionResponse\x18\x12 \x01(\x0b\x32=.com.spirent.service.execution.protocol.SessionActionResponse\x12J\n\x0clistProjects\x18\x13 \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.ListProjects\x12Z\n\x14listProjectsResponse\x18\x14 \x01(\x0b\x32<.com.spirent.service.execution.protocol.ListProjectsResponse\x12J\n\x0cqueryProject\x18\x15 \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.QueryProject\x12Z\n\x14queryProjectResponse\x18\x16 \x01(\x0b\x32<.com.spirent.service.execution.protocol.QueryProjectResponse\x12J\n\x0cquerySession\x18\x17 \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.QuerySession\x12Z\n\x14querySessionResponse\x18\x18 \x01(\x0b\x32<.com.spirent.service.execution.protocol.QuerySessionResponse\x12L\n\rqueryTestCase\x18\x19 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.QueryTestCase\x12\\\n\x15queryTestCaseResponse\x18\x1a \x01(\x0b\x32=.com.spirent.service.execution.protocol.QueryTestCaseResponse\x12T\n\x11testCaseProcedure\x18\x1b \x01(\x0b\x32\x39.com.spirent.service.execution.protocol.TestCaseProcedure\x12\x64\n\x19testCaseProcedureResponse\x18\x1c \x01(\x0b\x32\x41.com.spirent.service.execution.protocol.TestCaseProcedureResponse\x12T\n\x11sessionTerminated\x18\x1e \x01(\x0b\x32\x39.com.spirent.service.execution.protocol.SessionTerminated\x12Z\n\x14sessionActionCapture\x18\x1f \x01(\x0b\x32<.com.spirent.service.execution.protocol.SessionActionCapture\x12@\n\x07\x65ncrypt\x18! \x01(\x0b\x32/.com.spirent.service.execution.protocol.Encrypt\x12P\n\x0f\x65ncryptResponse\x18\" \x01(\x0b\x32\x37.com.spirent.service.execution.protocol.EncryptResponse\"\xb4\x06\n\x04Type\x12\x12\n\x0e\x43\x41NCEL_MESSAGE\x10\x01\x12\x15\n\x11HEARTBEAT_MESSAGE\x10\x02\x12\x10\n\x0cINIT_MESSAGE\x10\x03\x12\x14\n\x10INIT_MESSAGE_ACK\x10\"\x12\x0e\n\nINVOKE_ACK\x10\x04\x12\x12\n\x0eINVOKE_MESSAGE\x10\x05\x12\x13\n\x0fINVOKE_RESPONSE\x10\x06\x12\x12\n\x0eREPORT_MESSAGE\x10\x07\x12\x10\n\x0cSTEP_MESSAGE\x10\x08\x12\x15\n\x11TERMINATE_MESSAGE\x10\t\x12\x11\n\rTOKEN_MESSAGE\x10\n\x12\x1b\n\x17\x45XECUTION_ISSUE_MESSAGE\x10\x0b\x12\x18\n\x14\x41GENT_STATUS_MESSAGE\x10\x1c\x12\x1a\n\x16\x45XTRACTED_DATA_MESSAGE\x10\x1f\x12\x17\n\x13NEW_SESSION_MESSAGE\x10\x0c\x12\x18\n\x14NEW_SESSION_RESPONSE\x10\r\x12\x1e\n\x1aSEND_TERMINAL_DATA_MESSAGE\x10\x0e\x12\x1f\n\x1bSEND_TERMINAL_DATA_RESPONSE\x10\x0f\x12\x1a\n\x16SESSION_ACTION_MESSAGE\x10\x10\x12\x1b\n\x17SESSION_ACTION_RESPONSE\x10\x11\x12\x11\n\rLIST_PROJECTS\x10\x12\x12\x1a\n\x16LIST_PROJECTS_RESPONSE\x10\x13\x12\x11\n\rQUERY_PROJECT\x10\x14\x12\x1a\n\x16QUERY_PROJECT_RESPONSE\x10\x15\x12\x11\n\rQUERY_SESSION\x10\x16\x12\x1a\n\x16QUERY_SESSION_RESPONSE\x10\x17\x12\x13\n\x0fQUERY_TEST_CASE\x10\x18\x12\x1c\n\x18QUERY_TEST_CASE_RESPONSE\x10\x19\x12\x17\n\x13TEST_CASE_PROCEDURE\x10\x1a\x12 \n\x1cTEST_CASE_PROCEDURE_RESPONSE\x10\x1b\x12\x16\n\x12SESSION_TERMINATED\x10\x1d\x12\x1a\n\x16SESSION_ACTION_CAPTURE\x10\x1e\x12\x0b\n\x07\x45NCRYPT\x10 \x12\x14\n\x10\x45NCRYPT_RESPONSE\x10!\"}\n\x12\x41gentStatusMessage\x12\x0f\n\x07\x61gentId\x18\x01 \x02(\t\x12\x14\n\x0clastActivity\x18\x02 \x01(\x04\x12\x13\n\x0bonlineSince\x18\x03 \x01(\x04\x12\x11\n\tsessionId\x18\x04 \x01(\t\x12\x18\n\x10unresponsiveTime\x18\x05 \x01(\x04\"\"\n\rCancelMessage\x12\x11\n\tsessionId\x18\x01 \x02(\t\"\x9e\x04\n\x15\x45xecutionIssueMessage\x12\x0f\n\x07\x66ileUri\x18\x01 \x02(\t\x12\x12\n\nissueIndex\x18\x02 \x02(\r\x12\x10\n\x08location\x18\x03 \x02(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\x12\x12\n\noriginator\x18\x05 \x01(\t\x12\x15\n\rprocedureName\x18\x06 \x01(\t\x12\x10\n\x08reportId\x18\x07 \x02(\t\x12\x11\n\tsessionId\x18\x08 \x02(\t\x12\x65\n\x08severity\x18\t \x01(\x0e\x32\x46.com.spirent.service.execution.protocol.ExecutionIssueMessage.Severity:\x0bINFORMATION\x12\x0e\n\x06stepId\x18\n \x02(\t\x12\x16\n\x0etestCaseStepId\x18\x0b \x02(\t\x12\x0c\n\x04line\x18\x0c \x01(\x04\x12\x10\n\x08startCol\x18\r \x01(\x04\x12\x0e\n\x06\x65ndCol\x18\x0e \x01(\x04\x12\x11\n\tlineCount\x18\x0f \x01(\x04\x12\x13\n\x0bsequenceNum\x18\x10 \x01(\x04\x12\x11\n\tissueTime\x18\x11 \x01(\x04\x12\x1f\n\x10_slcSessionIssue\x18\x12 \x01(\x08:\x05\x66\x61lse\x12\x13\n\x04type\x18\x13 \x01(\t:\x05issue\"=\n\x08Severity\x12\t\n\x05\x45RROR\x10\x00\x12\x0f\n\x0bINFORMATION\x10\x01\x12\x08\n\x04PASS\x10\x02\x12\x0b\n\x07WARNING\x10\x03\"\xeb\x01\n\x14\x45xtractedDataMessage\x12\x10\n\x08reportId\x18\x01 \x02(\t\x12\x14\n\x0c\x65xecutedStep\x18\x02 \x01(\t\x12\x16\n\x0e\x65xecutableStep\x18\x03 \x01(\t\x12\x0c\n\x04time\x18\x04 \x01(\x01\x12\x0e\n\x06valNum\x18\x05 \x01(\x01\x12\x11\n\tvalNumAry\x18\x06 \x03(\x01\x12\x0e\n\x06valStr\x18\x07 \x01(\t\x12\x11\n\tvalStrAry\x18\x08 \x03(\t\x12\x0b\n\x03tag\x18\n \x02(\t\x12\x1a\n\x12\x64\x61taCollectionTime\x18\x0b \x02(\x04\x12\x16\n\x04type\x18\x0c \x01(\t:\x08\x65xtdata2\"b\n\x10HeartbeatMessage\x12\x17\n\x0bmemoryUsage\x18\x01 \x01(\x01:\x02-1\x12\x1a\n\x0eprocessCpuLoad\x18\x02 \x01(\x01:\x02-1\x12\x19\n\rsystemCpuLoad\x18\x03 \x01(\x01:\x02-1\"1\n\tInvokeAck\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x11\n\tstartTime\x18\x02 \x01(\x04\"\xa1\x01\n\x05Param\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x41\n\nparameters\x18\x03 \x03(\x0b\x32-.com.spirent.service.execution.protocol.Param\x12\x15\n\x06masked\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x0c\n\x04type\x18\x05 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\"\x9e\x06\n\rInvokeMessage\x12\x43\n\x05token\x18\x01 \x02(\x0b\x32\x34.com.spirent.service.execution.protocol.TokenMessage\x12L\n\x06header\x18\x02 \x03(\x0b\x32<.com.spirent.service.execution.protocol.InvokeMessage.Header\x12\x10\n\x08reportId\x18\x03 \x02(\t\x12\x15\n\rdependencyUri\x18\x04 \x03(\t\x12\x14\n\x0cparamFileUri\x18\x05 \x03(\t\x12\x41\n\nparameters\x18\x06 \x03(\x0b\x32-.com.spirent.service.execution.protocol.Param\x12V\n\x0breservation\x18\x07 \x01(\x0b\x32\x41.com.spirent.service.execution.protocol.InvokeMessage.Reservation\x12\x12\n\ntestbedUri\x18\x08 \x01(\t\x12\x13\n\x0btestCaseUri\x18\t \x02(\t\x12l\n\x0b\x64\x65tailLevel\x18\n \x01(\x0e\x32\x41.com.spirent.service.execution.protocol.InvokeMessage.DetailLevel:\x14\x41LL_ISSUES_ALL_STEPS\x1a%\n\x06Header\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\x1a\x44\n\x0bReservation\x12\x15\n\rreservationId\x18\x01 \x02(\t\x12\x1e\n\x16reservationVelocityUrl\x18\x02 \x02(\t\"\x9b\x01\n\x0b\x44\x65tailLevel\x12\x0f\n\x0bREPORT_ONLY\x10\x00\x12\x15\n\x11\x45RROR_ISSUES_ONLY\x10\x01\x12\x1b\n\x17\x45RROR_ISSUES_WITH_STEPS\x10\x02\x12\x1a\n\x16\x41LL_ISSUES_ERROR_STEPS\x10\x03\x12\x18\n\x14\x41LL_ISSUES_ALL_STEPS\x10\x04\x12\x11\n\rLAST_RESPONSE\x10\x05\"\xf7\x02\n\x0bInitMessage\x12\x0f\n\x07\x61gentId\x18\x01 \x02(\t\x12\x11\n\tagentName\x18\x02 \x02(\t\x12\x1e\n\x0fprotocolVersion\x18\x03 \x02(\t:\x05\x39.0.0\x12R\n\ncapability\x18\x04 \x03(\x0b\x32>.com.spirent.service.execution.protocol.InitMessage.Capability\x12\x11\n\tsessionId\x18\x05 \x01(\t\x12T\n\x0brestriction\x18\x06 \x03(\x0b\x32?.com.spirent.service.execution.protocol.InitMessage.Restriction\x12\x10\n\x08\x61gentKey\x18\x07 \x01(\t\x1a)\n\nCapability\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\x1a*\n\x0bRestriction\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\"\xc1\x01\n\x0eInitMessageAck\x12\x0f\n\x07message\x18\x01 \x02(\t\x12]\n\x0e\x63onfigSettings\x18\x02 \x03(\x0b\x32\x45.com.spirent.service.execution.protocol.InitMessageAck.ConfigSettings\x12\x10\n\x08\x61gentKey\x18\x03 \x01(\t\x1a-\n\x0e\x43onfigSettings\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\"\xa4\x02\n\x0eInvokeResponse\x12J\n\x0creportResult\x18\x01 \x02(\x0e\x32\x34.com.spirent.service.execution.protocol.ReportResult\x12\x11\n\tstartTime\x18\x02 \x02(\x04\x12\x0f\n\x07\x65ndTime\x18\x03 \x02(\x04\x12\x11\n\tsessionId\x18\x04 \x02(\t\x12K\n\x05\x65rror\x18\x05 \x01(\x0b\x32<.com.spirent.service.execution.protocol.InvokeResponse.Error\x12\x1a\n\x0bisDuplicate\x18\x06 \x01(\x08:\x05\x66\x61lse\x1a&\n\x05\x45rror\x12\x0c\n\x04\x63ode\x18\x01 \x02(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\"!\n\x10TerminateMessage\x12\r\n\x05\x63\x61use\x18\x01 \x01(\t\"\x1d\n\x0cTokenMessage\x12\r\n\x05token\x18\x01 \x02(\t\"\xe2\x0f\n\rReportMessage\x12\x10\n\x08reportId\x18\x01 \x02(\t\x12\x11\n\tstartTime\x18\x02 \x01(\x04\x12\x0f\n\x07\x65ndTime\x18\x03 \x01(\x04\x12\x17\n\x0fparentStepIndex\x18\x04 \x01(\t\x12\x16\n\x0eparentReportId\x18\x05 \x01(\t\x12\x10\n\x08testPath\x18\x06 \x01(\t\x12\x0e\n\x06testId\x18\x07 \x01(\t\x12\x44\n\x06result\x18\x08 \x01(\x0e\x32\x34.com.spirent.service.execution.protocol.ReportResult\x12\x1a\n\x12percentageComplete\x18\t \x01(\x01\x12\x41\n\nparameters\x18\n \x03(\x0b\x32-.com.spirent.service.execution.protocol.Param\x12T\n\x06status\x18\x0b \x01(\x0e\x32\x44.com.spirent.service.execution.protocol.ReportMessage.ExecutionState\x12\x11\n\tagentHost\x18\x0c \x01(\t\x12\x0f\n\x07\x61gentId\x18\r \x01(\t\x12\x11\n\tagentName\x18\x0e \x01(\t\x12\x14\n\x0c\x64ispatchTime\x18\x0f \x01(\x04\x12)\n!executionLastUnsatisfiedCondition\x18\x10 \x01(\t\x12\x15\n\rfailureReason\x18\x11 \x01(\t\x12\x1a\n\x12isReservationBySvc\x18\x12 \x01(\x08\x12\r\n\x05token\x18\x13 \x01(\t\x12\x1d\n\x15topologyReservationId\x18\x14 \x01(\t\x12\x13\n\x0b\x63\x61llbackURL\x18\x15 \x01(\t\x12\x12\n\ncreateTime\x18\x16 \x01(\x04\x12l\n\x0b\x64\x65tailLevel\x18\x17 \x01(\x0e\x32\x41.com.spirent.service.execution.protocol.ReportMessage.DetailLevel:\x14\x41LL_ISSUES_ALL_STEPS\x12\x0e\n\x06\x64omain\x18\x18 \x01(\t\x12[\n\x13ignoredRequirements\x18\x19 \x03(\x0b\x32>.com.spirent.service.execution.protocol.ReportMessage.KeyValue\x12\x15\n\rdiscardReport\x18\x1a \x01(\x08\x12\x16\n\x0eisRunlistFirst\x18\x1b \x01(\x08\x12\x15\n\risRunlistLast\x18\x1c \x01(\x08\x12\x18\n\x10latestUpdateTime\x18\x1d \x01(\x04\x12Z\n\x12mergedRequirements\x18\x1e \x03(\x0b\x32>.com.spirent.service.execution.protocol.ReportMessage.KeyValue\x12\r\n\x05oldPk\x18\x1f \x01(\x04\x12\x19\n\x11parameterFilePath\x18  \x01(\t\x12!\n\x19reportFileCompressionType\x18! \x01(\t\x12\x18\n\x10reportFileSource\x18\" \x01(\t\x12\x14\n\x0creportFormat\x18# \x01(\t\x12T\n\x0crequirements\x18$ \x03(\x0b\x32>.com.spirent.service.execution.protocol.ReportMessage.KeyValue\x12\x15\n\rreservationId\x18% \x01(\t\x12\x14\n\x0ctestCategory\x18& \x01(\t\x12\x12\n\ntopologyId\x18\' \x01(\t\x12\x14\n\x0ctopologyPath\x18( \x01(\t\x12\x19\n\x11topologyVersionId\x18) \x01(\t\x12\x0e\n\x06userId\x18* \x01(\t\x12\x15\n\rlocalTopology\x18+ \x01(\t\x12\x11\n\tnamespace\x18, \x01(\t\x12\x14\n\x0ctestCaseName\x18- \x01(\t\x12\x12\n\nrepository\x18. \x01(\t\x12\x14\n\x0creportIdPath\x18/ \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x30 \x01(\t\x12\x10\n\x08headline\x18\x31 \x01(\t\x12\r\n\x05owner\x18\x32 \x01(\t\x12\x15\n\rreportVersion\x18\x33 \x01(\t\x12\x13\n\x0brunlistGuid\x18\x34 \x01(\t\x12\x15\n\rrunlistItemId\x18\x35 \x01(\t\x12\x13\n\x0brunlistPath\x18\x36 \x01(\t\x12\x14\n\x0ctopologyName\x18\x37 \x01(\t\x1a\'\n\x08KeyValue\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\"\x89\x01\n\x0e\x45xecutionState\x12\x0b\n\x07\x41\x42ORTED\x10\x00\x12\x18\n\x14\x41GENT_NOT_RESPONDING\x10\x01\x12\r\n\tCOMPLETED\x10\x02\x12\x0f\n\x0b\x44ISPATCHING\x10\x03\x12\x0f\n\x0bIN_PROGRESS\x10\x04\x12\r\n\tNOT_BEGUN\x10\x05\x12\x10\n\x0cSTART_FAILED\x10\x06\"\x9b\x01\n\x0b\x44\x65tailLevel\x12\x0f\n\x0bREPORT_ONLY\x10\x00\x12\x15\n\x11\x45RROR_ISSUES_ONLY\x10\x01\x12\x1b\n\x17\x45RROR_ISSUES_WITH_STEPS\x10\x02\x12\x1a\n\x16\x41LL_ISSUES_ERROR_STEPS\x10\x03\x12\x18\n\x14\x41LL_ISSUES_ALL_STEPS\x10\x04\x12\x11\n\rLAST_RESPONSE\x10\x05\"\xd0\x0f\n\x0bStepMessage\x12\x10\n\x08reportId\x18\x01 \x02(\t\x12\x0e\n\x06stepId\x18\x02 \x02(\t\x12\x14\n\x0cparentStepId\x18\x03 \x01(\t\x12\x16\n\x0etestCaseStepId\x18\x04 \x02(\t\x12\x10\n\x08threadId\x18\x05 \x01(\x05\x12\x11\n\tsessionId\x18\x06 \x01(\t\x12\x13\n\x0bsessionType\x18\x07 \x01(\t\x12\x11\n\tprocedure\x18\x08 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\t \x01(\t\x12\x0f\n\x07\x63ontext\x18\n \x01(\t\x12\x0e\n\x06target\x18\x0b \x01(\t\x12\x0f\n\x07\x63ommand\x18\x0c \x01(\t\x12\x13\n\x0bstartOffset\x18\r \x01(\x01\x12\x10\n\x08\x64uration\x18\x0e \x01(\x01\x12\x17\n\x08\x65mulated\x18\x0f \x01(\x08:\x05\x66\x61lse\x12R\n\nstepResult\x18\x10 \x01(\x0e\x32>.com.spirent.service.execution.protocol.StepMessage.StepResult\x12X\n\x07\x64\x65tails\x18\x11 \x01(\x0b\x32G.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails\x12\x12\n\nproperties\x18\x12 \x01(\t\x12\x13\n\x0bsequenceNum\x18\x13 \x01(\x04\x12\x12\n\x04type\x18\x14 \x01(\t:\x04step\x1az\n\x06\x41\x63tion\x12\x0e\n\x06\x61\x63tion\x18\x01 \x02(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12K\n\x07\x61\x63tions\x18\x03 \x03(\x0b\x32:.com.spirent.service.execution.protocol.StepMessage.Action\x1a\xec\t\n\x13StepResponseDetails\x12\x1b\n\x0cisAutoMapped\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x0c\n\x04\x62ody\x18\x02 \x01(\t\x12R\n\x0epostProcessing\x18\x03 \x03(\x0b\x32:.com.spirent.service.execution.protocol.StepMessage.Action\x12k\n\ranalysisRules\x18\x04 \x03(\x0b\x32T.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.AnalysisRule\x12n\n\x0estructuredData\x18\x05 \x03(\x0b\x32V.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.StructuredData\x12^\n\x07\x61liases\x18\x06 \x03(\x0b\x32M.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.Alias\x1a\xf4\x01\n\x05\x41lias\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x13\n\x0bqueryFormat\x18\x02 \x01(\t\x12i\n\targuments\x18\x03 \x03(\x0b\x32V.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.Alias.Argument\x12\x19\n\x0cxPathVersion\x18\x04 \x01(\t:\x03\x31.0\x1a\x42\n\x08\x41rgument\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x13\n\x0bvaluesQuery\x18\x02 \x01(\t\x12\x13\n\x0binterpretAs\x18\x03 \x01(\t\x1a\xa8\x01\n\x0c\x41nalysisRule\x12\x11\n\textractor\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x10\n\x08whenTrue\x18\x03 \x01(\t\x12\x11\n\twhenFalse\x18\x04 \x01(\t\x12K\n\x07\x61\x63tions\x18\x05 \x03(\x0b\x32:.com.spirent.service.execution.protocol.StepMessage.Action\x1a\xf6\x02\n\x0eStructuredData\x12\x0b\n\x03map\x18\x08 \x02(\t\x12\x16\n\x0eresponseMapUri\x18\t \x01(\t\x12j\n\x05items\x18\n \x03(\x0b\x32[.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.StructuredData.Item\x1a\xd2\x01\n\x04Item\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04line\x18\x02 \x01(\x05\x12\x11\n\tlineCount\x18\x03 \x01(\x05\x12\x10\n\x08startCol\x18\x04 \x01(\x05\x12\x0e\n\x06\x65ndCol\x18\x05 \x01(\x05\x12\r\n\x05value\x18\x06 \x01(\t\x12j\n\x05items\x18\x07 \x03(\x0b\x32[.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.StructuredData.Item\"L\n\nStepResult\x12\x0b\n\x07\x41\x42ORTED\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\x12\x0b\n\x07SKIPPED\x10\x02\x12\x0b\n\x07SUCCESS\x10\x03\x12\x0b\n\x07TIMEOUT\x10\x04\"\xce\x12\n\x1b\x43lientSessionControlMessage\x12V\n\x04type\x18\x01 \x02(\x0e\x32H.com.spirent.service.execution.protocol.ClientSessionControlMessage.Type\x12\x41\n\x0binitMessage\x18\x02 \x01(\x0b\x32,.com.spirent.service.execution.protocol.Init\x12J\n\x0cinitResponse\x18\x03 \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.InitResponse\x12M\n\x11newSessionMessage\x18\x04 \x01(\x0b\x32\x32.com.spirent.service.execution.protocol.NewSession\x12V\n\x12newSessionResponse\x18\x05 \x01(\x0b\x32:.com.spirent.service.execution.protocol.NewSessionResponse\x12Y\n\x17sendTerminalDataMessage\x18\x06 \x01(\x0b\x32\x38.com.spirent.service.execution.protocol.SendTerminalData\x12\x62\n\x18sendTerminalDataResponse\x18\x07 \x01(\x0b\x32@.com.spirent.service.execution.protocol.SendTerminalDataResponse\x12S\n\x14sessionActionMessage\x18\x08 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.SessionAction\x12\\\n\x15sessionActionResponse\x18\t \x01(\x0b\x32=.com.spirent.service.execution.protocol.SessionActionResponse\x12[\n\x18sessionTerminatedMessage\x18\n \x01(\x0b\x32\x39.com.spirent.service.execution.protocol.SessionTerminated\x12Q\n\x13listProjectsMessage\x18\x0b \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.ListProjects\x12Z\n\x14listProjectsResponse\x18\x0c \x01(\x0b\x32<.com.spirent.service.execution.protocol.ListProjectsResponse\x12Q\n\x13queryProjectMessage\x18\r \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.QueryProject\x12Z\n\x14queryProjectResponse\x18\x0e \x01(\x0b\x32<.com.spirent.service.execution.protocol.QueryProjectResponse\x12J\n\x0cquerySession\x18\x0f \x01(\x0b\x32\x34.com.spirent.service.execution.protocol.QuerySession\x12Z\n\x14querySessionResponse\x18\x10 \x01(\x0b\x32<.com.spirent.service.execution.protocol.QuerySessionResponse\x12L\n\rqueryTestCase\x18\x11 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.QueryTestCase\x12\\\n\x15queryTestCaseResponse\x18\x12 \x01(\x0b\x32=.com.spirent.service.execution.protocol.QueryTestCaseResponse\x12T\n\x11testCaseProcedure\x18\x13 \x01(\x0b\x32\x39.com.spirent.service.execution.protocol.TestCaseProcedure\x12\x64\n\x19testCaseProcedureResponse\x18\x14 \x01(\x0b\x32\x41.com.spirent.service.execution.protocol.TestCaseProcedureResponse\x12Z\n\x14sessionActionCapture\x18\x15 \x01(\x0b\x32<.com.spirent.service.execution.protocol.SessionActionCapture\"\x87\x04\n\x04Type\x12\x10\n\x0cINIT_MESSAGE\x10\x01\x12\x11\n\rINIT_RESPONSE\x10\x02\x12\x17\n\x13NEW_SESSION_MESSAGE\x10\x03\x12\x18\n\x14NEW_SESSION_RESPONSE\x10\x04\x12\x1e\n\x1aSEND_TERMINAL_DATA_MESSAGE\x10\x05\x12\x1f\n\x1bSEND_TERMINAL_DATA_RESPONSE\x10\x06\x12\x1a\n\x16SESSION_ACTION_MESSAGE\x10\x07\x12\x1b\n\x17SESSION_ACTION_RESPONSE\x10\x08\x12\x16\n\x12SESSION_TERMINATED\x10\t\x12\x11\n\rLIST_PROJECTS\x10\n\x12\x1a\n\x16LIST_PROJECTS_RESPONSE\x10\x0b\x12\x11\n\rQUERY_PROJECT\x10\x0c\x12\x1a\n\x16QUERY_PROJECT_RESPONSE\x10\r\x12\x11\n\rQUERY_SESSION\x10\x0e\x12\x1a\n\x16QUERY_SESSION_RESPONSE\x10\x0f\x12\x13\n\x0fQUERY_TEST_CASE\x10\x10\x12\x1c\n\x18QUERY_TEST_CASE_RESPONSE\x10\x11\x12\x17\n\x13TEST_CASE_PROCEDURE\x10\x12\x12 \n\x1cTEST_CASE_PROCEDURE_RESPONSE\x10\x13\x12\x1a\n\x16SESSION_ACTION_CAPTURE\x10\x14\"&\n\x04Init\x12\r\n\x05token\x18\x01 \x02(\t\x12\x0f\n\x07version\x18\x02 \x02(\t\"8\n\x0cInitResponse\x12\x17\n\x06status\x18\x01 \x02(\t:\x07success\x12\x0f\n\x07version\x18\x02 \x02(\t\"\x0e\n\x0cListProjects\"(\n\x14ListProjectsResponse\x12\x10\n\x08projects\x18\x01 \x03(\t\"\xe9\x01\n\x0fPropertiesGroup\x12\x0c\n\x04name\x18\x01 \x02(\t\x12T\n\nproperties\x18\x02 \x03(\x0b\x32@.com.spirent.service.execution.protocol.PropertiesGroup.Property\x12I\n\x08\x63hildren\x18\x03 \x03(\x0b\x32\x37.com.spirent.service.execution.protocol.PropertiesGroup\x1a\'\n\x08Property\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\"\xda\x03\n\nNewSession\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x12\n\nsessionUri\x18\x02 \x02(\t\x12\x15\n\rdependencyUri\x18\x03 \x03(\t\x12I\n\x06header\x18\x04 \x03(\x0b\x32\x39.com.spirent.service.execution.protocol.NewSession.Header\x12\x14\n\x0cparamFileUri\x18\x05 \x03(\t\x12S\n\x0brequirement\x18\x06 \x03(\x0b\x32>.com.spirent.service.execution.protocol.NewSession.Requirement\x12K\n\nproperties\x18\x07 \x01(\x0b\x32\x37.com.spirent.service.execution.protocol.PropertiesGroup\x12\x16\n\x0eresponseMapLib\x18\x08 \x01(\t\x12 \n\x11\x64isableSlcCapture\x18\t \x01(\x08:\x05\x66\x61lse\x1a%\n\x06Header\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\x1a*\n\x0bRequirement\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\"\xc1\x01\n\x0cQueryProject\x12\x0f\n\x07project\x18\x01 \x02(\t\x12\x1d\n\x0fsessionProfiles\x18\x02 \x01(\x08:\x04true\x12\x18\n\ntopologies\x18\x03 \x01(\x08:\x04true\x12\x1d\n\x0eparameterFiles\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x1b\n\x0cresponseMaps\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x12\n\nspecificQC\x18\x06 \x01(\t\x12\x17\n\ttestCases\x18\x07 \x01(\x08:\x04true\"\x80\x03\n\x14QueryProjectResponse\x12\x0f\n\x07project\x18\x01 \x02(\t\x12\x17\n\x0fsessionProfiles\x18\x02 \x03(\t\x12Y\n\ntopologies\x18\x03 \x03(\x0b\x32\x45.com.spirent.service.execution.protocol.QueryProjectResponse.Topology\x12\x16\n\x0eparameterFiles\x18\x04 \x03(\t\x12\x14\n\x0cresponseMaps\x18\x05 \x03(\t\x12\x11\n\ttestCases\x18\x06 \x03(\t\x1a\xa1\x01\n\x08Topology\x12\x0c\n\x04name\x18\x01 \x02(\t\x12]\n\x07\x64\x65vices\x18\x02 \x03(\x0b\x32L.com.spirent.service.execution.protocol.QueryProjectResponse.Topology.Device\x1a(\n\x06\x44\x65vice\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x10\n\x08sessions\x18\x02 \x03(\t\"\x99\x02\n\x12NewSessionResponse\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x10\n\x08\x64uration\x18\x02 \x01(\x01\x12V\n\nstepResult\x18\x03 \x01(\x0e\x32\x39.com.spirent.service.execution.protocol.SessionStepResult:\x07SUCCESS\x12X\n\x07\x64\x65tails\x18\x04 \x01(\x0b\x32G.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails\x12\x1b\n\rallowTerminal\x18\x05 \x01(\x08:\x04true\x12\x0f\n\x07\x61gentId\x18\x06 \x01(\t\"3\n\x10SendTerminalData\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\"\xc3\x01\n\x18SendTerminalDataResponse\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\x12Y\n\x07\x63\x61pture\x18\x03 \x01(\x0b\x32H.com.spirent.service.execution.protocol.SendTerminalDataResponse.Capture\x1a+\n\x07\x43\x61pture\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12\x10\n\x08response\x18\x02 \x01(\t\"\x9b\x03\n\rSessionAction\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x0e\n\x06\x61\x63tion\x18\x02 \x02(\t\x12\x0f\n\x07\x63ommand\x18\x03 \x01(\t\x12\x41\n\nparameters\x18\x04 \x03(\x0b\x32-.com.spirent.service.execution.protocol.Param\x12g\n\x0fresponseMapMode\x18\x05 \x01(\x0e\x32\x45.com.spirent.service.execution.protocol.SessionAction.ResponseModeMap:\x07\x44\x45\x46\x41ULT\x12\x13\n\x0bresponseMap\x18\x06 \x01(\t\x12K\n\nproperties\x18\x07 \x01(\x0b\x32\x37.com.spirent.service.execution.protocol.PropertiesGroup\"H\n\x0fResponseModeMap\x12\x08\n\x04\x41UTO\x10\x00\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x01\x12\x08\n\x04\x46ILE\x10\x02\x12\x0b\n\x07LIBRARY\x10\x03\x12\x07\n\x03OFF\x10\x04\"\xd8\x06\n\x15SessionActionResponse\x12\x11\n\tsessionId\x18\x01 \x02(\t\x12\x11\n\tstartTime\x18\x07 \x01(\x04\x12\x10\n\x08\x64uration\x18\x02 \x01(\x01\x12V\n\nstepResult\x18\x03 \x01(\x0e\x32\x39.com.spirent.service.execution.protocol.SessionStepResult:\x07SUCCESS\x12X\n\x07\x64\x65tails\x18\x04 \x01(\x0b\x32G.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails\x12n\n\x13nestedActionDetails\x18\x05 \x01(\x0b\x32Q.com.spirent.service.execution.protocol.SessionActionResponse.SessionActionUpdate\x12o\n\x0c\x63hunkDetails\x18\x06 \x01(\x0b\x32Y.com.spirent.service.execution.protocol.SessionActionResponse.SessionResponseChunkDetails\x12\x13\n\x0b\x65xecutionId\x18\x08 \x01(\t\x1a\xd5\x01\n\x13SessionActionUpdate\x12\x45\n\x06\x61\x63tion\x18\x01 \x01(\x0b\x32\x35.com.spirent.service.execution.protocol.SessionAction\x12g\n\x06status\x18\x02 \x02(\x0e\x32W.com.spirent.service.execution.protocol.SessionActionResponse.SessionActionUpdateStatus\x12\x0e\n\x06stepId\x18\x03 \x02(\t\x1aN\n\x1bSessionResponseChunkDetails\x12\r\n\x05\x63ount\x18\x01 \x02(\x04\x12\r\n\x05index\x18\x02 \x02(\x04\x12\x11\n\tmessageId\x18\x03 \x02(\t\"7\n\x19SessionActionUpdateStatus\x12\x0b\n\x07STARTED\x10\x00\x12\r\n\tCOMPLETED\x10\x01\"\xb1\x02\n\x14SessionActionCapture\x12\x45\n\x06\x61\x63tion\x18\x01 \x02(\x0b\x32\x35.com.spirent.service.execution.protocol.SessionAction\x12O\n\x08response\x18\x02 \x02(\x0b\x32=.com.spirent.service.execution.protocol.SessionActionResponse\x12\x12\n\nsessionUri\x18\x03 \x02(\t\x12\r\n\x05token\x18\x04 \x02(\t\x12\x12\n\ndeviceName\x18\x05 \x01(\t\x12\x13\n\x0bsessionName\x18\x06 \x01(\t\x12\x0e\n\x06userId\x18\x07 \x01(\t\x12\x10\n\x08userName\x18\x08 \x01(\t\x12\x13\n\x0bsessionType\x18\t \x01(\t\"\xd9\x01\n\x11SessionTerminated\x12\x62\n\x06status\x18\x01 \x02(\x0e\x32@.com.spirent.service.execution.protocol.SessionTerminated.Status:\x10\x41GENT_TERMINATED\x12\x11\n\tsessionId\x18\x02 \x01(\t\"M\n\x06Status\x12\x14\n\x10\x41GENT_TERMINATED\x10\x01\x12\x15\n\x11\x43LIENT_DISCONNECT\x10\x02\x12\x16\n\x12SESSION_DISCONNECT\x10\x03\"6\n\x0cQuerySession\x12\x12\n\nsessionUri\x18\x01 \x02(\t\x12\x12\n\nspecificQC\x18\x02 \x01(\t\"\xec\x02\n\x14QuerySessionResponse\x12Y\n\tquickCall\x18\x02 \x03(\x0b\x32\x46.com.spirent.service.execution.protocol.QuerySessionResponse.QuickCall\x1a\xf8\x01\n\tQuickCall\x12\x0c\n\x04name\x18\x01 \x02(\t\x12]\n\x04\x61rgs\x18\x02 \x03(\x0b\x32O.com.spirent.service.execution.protocol.QuerySessionResponse.QuickCall.Argument\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x0b\n\x03uri\x18\x04 \x01(\t\x1a\\\n\x08\x41rgument\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x65\x66\x61ultValue\x18\x03 \x01(\t\x12\x17\n\x08required\x18\x04 \x01(\x08:\x05\x66\x61lse\"$\n\rQueryTestCase\x12\x13\n\x0btestCaseUri\x18\x01 \x02(\t\"\xca\x02\n\x15QueryTestCaseResponse\x12[\n\nprocedures\x18\x02 \x03(\x0b\x32G.com.spirent.service.execution.protocol.QueryTestCaseResponse.Procedure\x1a\xd3\x01\n\tProcedure\x12\x0c\n\x04name\x18\x01 \x02(\t\x12^\n\x04\x61rgs\x18\x02 \x03(\x0b\x32P.com.spirent.service.execution.protocol.QueryTestCaseResponse.Procedure.Argument\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x1a\x43\n\x08\x41rgument\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x65\x66\x61ultValue\x18\x03 \x01(\t\"\xcd\x01\n\x11TestCaseProcedure\x12\x14\n\x0cprocedureUri\x18\x01 \x02(\t\x12\x41\n\nparameters\x18\x02 \x03(\x0b\x32-.com.spirent.service.execution.protocol.Param\x12\x12\n\ntestbedUri\x18\x03 \x01(\t\x12K\n\nproperties\x18\x04 \x01(\x0b\x32\x37.com.spirent.service.execution.protocol.PropertiesGroup\"\xe4\x01\n\x19TestCaseProcedureResponse\x12\x10\n\x08\x64uration\x18\x01 \x01(\x01\x12[\n\nstepResult\x18\x02 \x01(\x0e\x32>.com.spirent.service.execution.protocol.StepMessage.StepResult:\x07SUCCESS\x12X\n\x07\x64\x65tails\x18\x03 \x01(\x0b\x32G.com.spirent.service.execution.protocol.StepMessage.StepResponseDetails\"\x18\n\x07\x45ncrypt\x12\r\n\x05value\x18\x01 \x02(\t\" \n\x0f\x45ncryptResponse\x12\r\n\x05value\x18\x01 \x02(\t*W\n\x0cReportResult\x12\x08\n\x04PASS\x10\x00\x12\x11\n\rINDETERMINATE\x10\x01\x12\x08\n\x04\x46\x41IL\x10\x02\x12\t\n\x05\x41\x42ORT\x10\x03\x12\t\n\x05\x45RROR\x10\x04\x12\n\n\x06\x43\x41NCEL\x10\x05*S\n\x11SessionStepResult\x12\x0b\n\x07\x41\x42ORTED\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\x12\x0b\n\x07SKIPPED\x10\x02\x12\x0b\n\x07SUCCESS\x10\x03\x12\x0b\n\x07TIMEOUT\x10\x04\x42\x02H\x01')

_REPORTRESULT = DESCRIPTOR.enum_types_by_name['ReportResult']
ReportResult = enum_type_wrapper.EnumTypeWrapper(_REPORTRESULT)
_SESSIONSTEPRESULT = DESCRIPTOR.enum_types_by_name['SessionStepResult']
SessionStepResult = enum_type_wrapper.EnumTypeWrapper(_SESSIONSTEPRESULT)
PASS = 0
INDETERMINATE = 1
FAIL = 2
ABORT = 3
ERROR = 4
CANCEL = 5
ABORTED = 0
FAILED = 1
SKIPPED = 2
SUCCESS = 3
TIMEOUT = 4


_EXECUTIONMESSAGE = DESCRIPTOR.message_types_by_name['ExecutionMessage']
_AGENTSTATUSMESSAGE = DESCRIPTOR.message_types_by_name['AgentStatusMessage']
_CANCELMESSAGE = DESCRIPTOR.message_types_by_name['CancelMessage']
_EXECUTIONISSUEMESSAGE = DESCRIPTOR.message_types_by_name['ExecutionIssueMessage']
_EXTRACTEDDATAMESSAGE = DESCRIPTOR.message_types_by_name['ExtractedDataMessage']
_HEARTBEATMESSAGE = DESCRIPTOR.message_types_by_name['HeartbeatMessage']
_INVOKEACK = DESCRIPTOR.message_types_by_name['InvokeAck']
_PARAM = DESCRIPTOR.message_types_by_name['Param']
_INVOKEMESSAGE = DESCRIPTOR.message_types_by_name['InvokeMessage']
_INVOKEMESSAGE_HEADER = _INVOKEMESSAGE.nested_types_by_name['Header']
_INVOKEMESSAGE_RESERVATION = _INVOKEMESSAGE.nested_types_by_name['Reservation']
_INITMESSAGE = DESCRIPTOR.message_types_by_name['InitMessage']
_INITMESSAGE_CAPABILITY = _INITMESSAGE.nested_types_by_name['Capability']
_INITMESSAGE_RESTRICTION = _INITMESSAGE.nested_types_by_name['Restriction']
_INITMESSAGEACK = DESCRIPTOR.message_types_by_name['InitMessageAck']
_INITMESSAGEACK_CONFIGSETTINGS = _INITMESSAGEACK.nested_types_by_name['ConfigSettings']
_INVOKERESPONSE = DESCRIPTOR.message_types_by_name['InvokeResponse']
_INVOKERESPONSE_ERROR = _INVOKERESPONSE.nested_types_by_name['Error']
_TERMINATEMESSAGE = DESCRIPTOR.message_types_by_name['TerminateMessage']
_TOKENMESSAGE = DESCRIPTOR.message_types_by_name['TokenMessage']
_REPORTMESSAGE = DESCRIPTOR.message_types_by_name['ReportMessage']
_REPORTMESSAGE_KEYVALUE = _REPORTMESSAGE.nested_types_by_name['KeyValue']
_STEPMESSAGE = DESCRIPTOR.message_types_by_name['StepMessage']
_STEPMESSAGE_ACTION = _STEPMESSAGE.nested_types_by_name['Action']
_STEPMESSAGE_STEPRESPONSEDETAILS = _STEPMESSAGE.nested_types_by_name['StepResponseDetails']
_STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS = _STEPMESSAGE_STEPRESPONSEDETAILS.nested_types_by_name['Alias']
_STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS_ARGUMENT = _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS.nested_types_by_name['Argument']
_STEPMESSAGE_STEPRESPONSEDETAILS_ANALYSISRULE = _STEPMESSAGE_STEPRESPONSEDETAILS.nested_types_by_name['AnalysisRule']
_STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA = _STEPMESSAGE_STEPRESPONSEDETAILS.nested_types_by_name['StructuredData']
_STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA_ITEM = _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA.nested_types_by_name['Item']
_CLIENTSESSIONCONTROLMESSAGE = DESCRIPTOR.message_types_by_name['ClientSessionControlMessage']
_INIT = DESCRIPTOR.message_types_by_name['Init']
_INITRESPONSE = DESCRIPTOR.message_types_by_name['InitResponse']
_LISTPROJECTS = DESCRIPTOR.message_types_by_name['ListProjects']
_LISTPROJECTSRESPONSE = DESCRIPTOR.message_types_by_name['ListProjectsResponse']
_PROPERTIESGROUP = DESCRIPTOR.message_types_by_name['PropertiesGroup']
_PROPERTIESGROUP_PROPERTY = _PROPERTIESGROUP.nested_types_by_name['Property']
_NEWSESSION = DESCRIPTOR.message_types_by_name['NewSession']
_NEWSESSION_HEADER = _NEWSESSION.nested_types_by_name['Header']
_NEWSESSION_REQUIREMENT = _NEWSESSION.nested_types_by_name['Requirement']
_QUERYPROJECT = DESCRIPTOR.message_types_by_name['QueryProject']
_QUERYPROJECTRESPONSE = DESCRIPTOR.message_types_by_name['QueryProjectResponse']
_QUERYPROJECTRESPONSE_TOPOLOGY = _QUERYPROJECTRESPONSE.nested_types_by_name['Topology']
_QUERYPROJECTRESPONSE_TOPOLOGY_DEVICE = _QUERYPROJECTRESPONSE_TOPOLOGY.nested_types_by_name['Device']
_NEWSESSIONRESPONSE = DESCRIPTOR.message_types_by_name['NewSessionResponse']
_SENDTERMINALDATA = DESCRIPTOR.message_types_by_name['SendTerminalData']
_SENDTERMINALDATARESPONSE = DESCRIPTOR.message_types_by_name['SendTerminalDataResponse']
_SENDTERMINALDATARESPONSE_CAPTURE = _SENDTERMINALDATARESPONSE.nested_types_by_name['Capture']
_SESSIONACTION = DESCRIPTOR.message_types_by_name['SessionAction']
_SESSIONACTIONRESPONSE = DESCRIPTOR.message_types_by_name['SessionActionResponse']
_SESSIONACTIONRESPONSE_SESSIONACTIONUPDATE = _SESSIONACTIONRESPONSE.nested_types_by_name['SessionActionUpdate']
_SESSIONACTIONRESPONSE_SESSIONRESPONSECHUNKDETAILS = _SESSIONACTIONRESPONSE.nested_types_by_name['SessionResponseChunkDetails']
_SESSIONACTIONCAPTURE = DESCRIPTOR.message_types_by_name['SessionActionCapture']
_SESSIONTERMINATED = DESCRIPTOR.message_types_by_name['SessionTerminated']
_QUERYSESSION = DESCRIPTOR.message_types_by_name['QuerySession']
_QUERYSESSIONRESPONSE = DESCRIPTOR.message_types_by_name['QuerySessionResponse']
_QUERYSESSIONRESPONSE_QUICKCALL = _QUERYSESSIONRESPONSE.nested_types_by_name['QuickCall']
_QUERYSESSIONRESPONSE_QUICKCALL_ARGUMENT = _QUERYSESSIONRESPONSE_QUICKCALL.nested_types_by_name['Argument']
_QUERYTESTCASE = DESCRIPTOR.message_types_by_name['QueryTestCase']
_QUERYTESTCASERESPONSE = DESCRIPTOR.message_types_by_name['QueryTestCaseResponse']
_QUERYTESTCASERESPONSE_PROCEDURE = _QUERYTESTCASERESPONSE.nested_types_by_name['Procedure']
_QUERYTESTCASERESPONSE_PROCEDURE_ARGUMENT = _QUERYTESTCASERESPONSE_PROCEDURE.nested_types_by_name['Argument']
_TESTCASEPROCEDURE = DESCRIPTOR.message_types_by_name['TestCaseProcedure']
_TESTCASEPROCEDURERESPONSE = DESCRIPTOR.message_types_by_name['TestCaseProcedureResponse']
_ENCRYPT = DESCRIPTOR.message_types_by_name['Encrypt']
_ENCRYPTRESPONSE = DESCRIPTOR.message_types_by_name['EncryptResponse']
_EXECUTIONMESSAGE_TYPE = _EXECUTIONMESSAGE.enum_types_by_name['Type']
_EXECUTIONISSUEMESSAGE_SEVERITY = _EXECUTIONISSUEMESSAGE.enum_types_by_name['Severity']
_INVOKEMESSAGE_DETAILLEVEL = _INVOKEMESSAGE.enum_types_by_name['DetailLevel']
_REPORTMESSAGE_EXECUTIONSTATE = _REPORTMESSAGE.enum_types_by_name['ExecutionState']
_REPORTMESSAGE_DETAILLEVEL = _REPORTMESSAGE.enum_types_by_name['DetailLevel']
_STEPMESSAGE_STEPRESULT = _STEPMESSAGE.enum_types_by_name['StepResult']
_CLIENTSESSIONCONTROLMESSAGE_TYPE = _CLIENTSESSIONCONTROLMESSAGE.enum_types_by_name['Type']
_SESSIONACTION_RESPONSEMODEMAP = _SESSIONACTION.enum_types_by_name['ResponseModeMap']
_SESSIONACTIONRESPONSE_SESSIONACTIONUPDATESTATUS = _SESSIONACTIONRESPONSE.enum_types_by_name['SessionActionUpdateStatus']
_SESSIONTERMINATED_STATUS = _SESSIONTERMINATED.enum_types_by_name['Status']
ExecutionMessage = _reflection.GeneratedProtocolMessageType('ExecutionMessage', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTIONMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ExecutionMessage)
  })
_sym_db.RegisterMessage(ExecutionMessage)

AgentStatusMessage = _reflection.GeneratedProtocolMessageType('AgentStatusMessage', (_message.Message,), {
  'DESCRIPTOR' : _AGENTSTATUSMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.AgentStatusMessage)
  })
_sym_db.RegisterMessage(AgentStatusMessage)

CancelMessage = _reflection.GeneratedProtocolMessageType('CancelMessage', (_message.Message,), {
  'DESCRIPTOR' : _CANCELMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.CancelMessage)
  })
_sym_db.RegisterMessage(CancelMessage)

ExecutionIssueMessage = _reflection.GeneratedProtocolMessageType('ExecutionIssueMessage', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTIONISSUEMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ExecutionIssueMessage)
  })
_sym_db.RegisterMessage(ExecutionIssueMessage)

ExtractedDataMessage = _reflection.GeneratedProtocolMessageType('ExtractedDataMessage', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTEDDATAMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ExtractedDataMessage)
  })
_sym_db.RegisterMessage(ExtractedDataMessage)

HeartbeatMessage = _reflection.GeneratedProtocolMessageType('HeartbeatMessage', (_message.Message,), {
  'DESCRIPTOR' : _HEARTBEATMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.HeartbeatMessage)
  })
_sym_db.RegisterMessage(HeartbeatMessage)

InvokeAck = _reflection.GeneratedProtocolMessageType('InvokeAck', (_message.Message,), {
  'DESCRIPTOR' : _INVOKEACK,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InvokeAck)
  })
_sym_db.RegisterMessage(InvokeAck)

Param = _reflection.GeneratedProtocolMessageType('Param', (_message.Message,), {
  'DESCRIPTOR' : _PARAM,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.Param)
  })
_sym_db.RegisterMessage(Param)

InvokeMessage = _reflection.GeneratedProtocolMessageType('InvokeMessage', (_message.Message,), {

  'Header' : _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), {
    'DESCRIPTOR' : _INVOKEMESSAGE_HEADER,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InvokeMessage.Header)
    })
  ,

  'Reservation' : _reflection.GeneratedProtocolMessageType('Reservation', (_message.Message,), {
    'DESCRIPTOR' : _INVOKEMESSAGE_RESERVATION,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InvokeMessage.Reservation)
    })
  ,
  'DESCRIPTOR' : _INVOKEMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InvokeMessage)
  })
_sym_db.RegisterMessage(InvokeMessage)
_sym_db.RegisterMessage(InvokeMessage.Header)
_sym_db.RegisterMessage(InvokeMessage.Reservation)

InitMessage = _reflection.GeneratedProtocolMessageType('InitMessage', (_message.Message,), {

  'Capability' : _reflection.GeneratedProtocolMessageType('Capability', (_message.Message,), {
    'DESCRIPTOR' : _INITMESSAGE_CAPABILITY,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InitMessage.Capability)
    })
  ,

  'Restriction' : _reflection.GeneratedProtocolMessageType('Restriction', (_message.Message,), {
    'DESCRIPTOR' : _INITMESSAGE_RESTRICTION,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InitMessage.Restriction)
    })
  ,
  'DESCRIPTOR' : _INITMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InitMessage)
  })
_sym_db.RegisterMessage(InitMessage)
_sym_db.RegisterMessage(InitMessage.Capability)
_sym_db.RegisterMessage(InitMessage.Restriction)

InitMessageAck = _reflection.GeneratedProtocolMessageType('InitMessageAck', (_message.Message,), {

  'ConfigSettings' : _reflection.GeneratedProtocolMessageType('ConfigSettings', (_message.Message,), {
    'DESCRIPTOR' : _INITMESSAGEACK_CONFIGSETTINGS,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InitMessageAck.ConfigSettings)
    })
  ,
  'DESCRIPTOR' : _INITMESSAGEACK,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InitMessageAck)
  })
_sym_db.RegisterMessage(InitMessageAck)
_sym_db.RegisterMessage(InitMessageAck.ConfigSettings)

InvokeResponse = _reflection.GeneratedProtocolMessageType('InvokeResponse', (_message.Message,), {

  'Error' : _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), {
    'DESCRIPTOR' : _INVOKERESPONSE_ERROR,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InvokeResponse.Error)
    })
  ,
  'DESCRIPTOR' : _INVOKERESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InvokeResponse)
  })
_sym_db.RegisterMessage(InvokeResponse)
_sym_db.RegisterMessage(InvokeResponse.Error)

TerminateMessage = _reflection.GeneratedProtocolMessageType('TerminateMessage', (_message.Message,), {
  'DESCRIPTOR' : _TERMINATEMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.TerminateMessage)
  })
_sym_db.RegisterMessage(TerminateMessage)

TokenMessage = _reflection.GeneratedProtocolMessageType('TokenMessage', (_message.Message,), {
  'DESCRIPTOR' : _TOKENMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.TokenMessage)
  })
_sym_db.RegisterMessage(TokenMessage)

ReportMessage = _reflection.GeneratedProtocolMessageType('ReportMessage', (_message.Message,), {

  'KeyValue' : _reflection.GeneratedProtocolMessageType('KeyValue', (_message.Message,), {
    'DESCRIPTOR' : _REPORTMESSAGE_KEYVALUE,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ReportMessage.KeyValue)
    })
  ,
  'DESCRIPTOR' : _REPORTMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ReportMessage)
  })
_sym_db.RegisterMessage(ReportMessage)
_sym_db.RegisterMessage(ReportMessage.KeyValue)

StepMessage = _reflection.GeneratedProtocolMessageType('StepMessage', (_message.Message,), {

  'Action' : _reflection.GeneratedProtocolMessageType('Action', (_message.Message,), {
    'DESCRIPTOR' : _STEPMESSAGE_ACTION,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.Action)
    })
  ,

  'StepResponseDetails' : _reflection.GeneratedProtocolMessageType('StepResponseDetails', (_message.Message,), {

    'Alias' : _reflection.GeneratedProtocolMessageType('Alias', (_message.Message,), {

      'Argument' : _reflection.GeneratedProtocolMessageType('Argument', (_message.Message,), {
        'DESCRIPTOR' : _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS_ARGUMENT,
        '__module__' : 'ExecutionProtocol_pb2'
        # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.Alias.Argument)
        })
      ,
      'DESCRIPTOR' : _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS,
      '__module__' : 'ExecutionProtocol_pb2'
      # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.Alias)
      })
    ,

    'AnalysisRule' : _reflection.GeneratedProtocolMessageType('AnalysisRule', (_message.Message,), {
      'DESCRIPTOR' : _STEPMESSAGE_STEPRESPONSEDETAILS_ANALYSISRULE,
      '__module__' : 'ExecutionProtocol_pb2'
      # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.AnalysisRule)
      })
    ,

    'StructuredData' : _reflection.GeneratedProtocolMessageType('StructuredData', (_message.Message,), {

      'Item' : _reflection.GeneratedProtocolMessageType('Item', (_message.Message,), {
        'DESCRIPTOR' : _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA_ITEM,
        '__module__' : 'ExecutionProtocol_pb2'
        # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.StructuredData.Item)
        })
      ,
      'DESCRIPTOR' : _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA,
      '__module__' : 'ExecutionProtocol_pb2'
      # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.StepResponseDetails.StructuredData)
      })
    ,
    'DESCRIPTOR' : _STEPMESSAGE_STEPRESPONSEDETAILS,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage.StepResponseDetails)
    })
  ,
  'DESCRIPTOR' : _STEPMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.StepMessage)
  })
_sym_db.RegisterMessage(StepMessage)
_sym_db.RegisterMessage(StepMessage.Action)
_sym_db.RegisterMessage(StepMessage.StepResponseDetails)
_sym_db.RegisterMessage(StepMessage.StepResponseDetails.Alias)
_sym_db.RegisterMessage(StepMessage.StepResponseDetails.Alias.Argument)
_sym_db.RegisterMessage(StepMessage.StepResponseDetails.AnalysisRule)
_sym_db.RegisterMessage(StepMessage.StepResponseDetails.StructuredData)
_sym_db.RegisterMessage(StepMessage.StepResponseDetails.StructuredData.Item)

ClientSessionControlMessage = _reflection.GeneratedProtocolMessageType('ClientSessionControlMessage', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTSESSIONCONTROLMESSAGE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ClientSessionControlMessage)
  })
_sym_db.RegisterMessage(ClientSessionControlMessage)

Init = _reflection.GeneratedProtocolMessageType('Init', (_message.Message,), {
  'DESCRIPTOR' : _INIT,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.Init)
  })
_sym_db.RegisterMessage(Init)

InitResponse = _reflection.GeneratedProtocolMessageType('InitResponse', (_message.Message,), {
  'DESCRIPTOR' : _INITRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.InitResponse)
  })
_sym_db.RegisterMessage(InitResponse)

ListProjects = _reflection.GeneratedProtocolMessageType('ListProjects', (_message.Message,), {
  'DESCRIPTOR' : _LISTPROJECTS,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ListProjects)
  })
_sym_db.RegisterMessage(ListProjects)

ListProjectsResponse = _reflection.GeneratedProtocolMessageType('ListProjectsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTPROJECTSRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.ListProjectsResponse)
  })
_sym_db.RegisterMessage(ListProjectsResponse)

PropertiesGroup = _reflection.GeneratedProtocolMessageType('PropertiesGroup', (_message.Message,), {

  'Property' : _reflection.GeneratedProtocolMessageType('Property', (_message.Message,), {
    'DESCRIPTOR' : _PROPERTIESGROUP_PROPERTY,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.PropertiesGroup.Property)
    })
  ,
  'DESCRIPTOR' : _PROPERTIESGROUP,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.PropertiesGroup)
  })
_sym_db.RegisterMessage(PropertiesGroup)
_sym_db.RegisterMessage(PropertiesGroup.Property)

NewSession = _reflection.GeneratedProtocolMessageType('NewSession', (_message.Message,), {

  'Header' : _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), {
    'DESCRIPTOR' : _NEWSESSION_HEADER,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.NewSession.Header)
    })
  ,

  'Requirement' : _reflection.GeneratedProtocolMessageType('Requirement', (_message.Message,), {
    'DESCRIPTOR' : _NEWSESSION_REQUIREMENT,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.NewSession.Requirement)
    })
  ,
  'DESCRIPTOR' : _NEWSESSION,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.NewSession)
  })
_sym_db.RegisterMessage(NewSession)
_sym_db.RegisterMessage(NewSession.Header)
_sym_db.RegisterMessage(NewSession.Requirement)

QueryProject = _reflection.GeneratedProtocolMessageType('QueryProject', (_message.Message,), {
  'DESCRIPTOR' : _QUERYPROJECT,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryProject)
  })
_sym_db.RegisterMessage(QueryProject)

QueryProjectResponse = _reflection.GeneratedProtocolMessageType('QueryProjectResponse', (_message.Message,), {

  'Topology' : _reflection.GeneratedProtocolMessageType('Topology', (_message.Message,), {

    'Device' : _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), {
      'DESCRIPTOR' : _QUERYPROJECTRESPONSE_TOPOLOGY_DEVICE,
      '__module__' : 'ExecutionProtocol_pb2'
      # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryProjectResponse.Topology.Device)
      })
    ,
    'DESCRIPTOR' : _QUERYPROJECTRESPONSE_TOPOLOGY,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryProjectResponse.Topology)
    })
  ,
  'DESCRIPTOR' : _QUERYPROJECTRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryProjectResponse)
  })
_sym_db.RegisterMessage(QueryProjectResponse)
_sym_db.RegisterMessage(QueryProjectResponse.Topology)
_sym_db.RegisterMessage(QueryProjectResponse.Topology.Device)

NewSessionResponse = _reflection.GeneratedProtocolMessageType('NewSessionResponse', (_message.Message,), {
  'DESCRIPTOR' : _NEWSESSIONRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.NewSessionResponse)
  })
_sym_db.RegisterMessage(NewSessionResponse)

SendTerminalData = _reflection.GeneratedProtocolMessageType('SendTerminalData', (_message.Message,), {
  'DESCRIPTOR' : _SENDTERMINALDATA,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SendTerminalData)
  })
_sym_db.RegisterMessage(SendTerminalData)

SendTerminalDataResponse = _reflection.GeneratedProtocolMessageType('SendTerminalDataResponse', (_message.Message,), {

  'Capture' : _reflection.GeneratedProtocolMessageType('Capture', (_message.Message,), {
    'DESCRIPTOR' : _SENDTERMINALDATARESPONSE_CAPTURE,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SendTerminalDataResponse.Capture)
    })
  ,
  'DESCRIPTOR' : _SENDTERMINALDATARESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SendTerminalDataResponse)
  })
_sym_db.RegisterMessage(SendTerminalDataResponse)
_sym_db.RegisterMessage(SendTerminalDataResponse.Capture)

SessionAction = _reflection.GeneratedProtocolMessageType('SessionAction', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONACTION,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SessionAction)
  })
_sym_db.RegisterMessage(SessionAction)

SessionActionResponse = _reflection.GeneratedProtocolMessageType('SessionActionResponse', (_message.Message,), {

  'SessionActionUpdate' : _reflection.GeneratedProtocolMessageType('SessionActionUpdate', (_message.Message,), {
    'DESCRIPTOR' : _SESSIONACTIONRESPONSE_SESSIONACTIONUPDATE,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SessionActionResponse.SessionActionUpdate)
    })
  ,

  'SessionResponseChunkDetails' : _reflection.GeneratedProtocolMessageType('SessionResponseChunkDetails', (_message.Message,), {
    'DESCRIPTOR' : _SESSIONACTIONRESPONSE_SESSIONRESPONSECHUNKDETAILS,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SessionActionResponse.SessionResponseChunkDetails)
    })
  ,
  'DESCRIPTOR' : _SESSIONACTIONRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SessionActionResponse)
  })
_sym_db.RegisterMessage(SessionActionResponse)
_sym_db.RegisterMessage(SessionActionResponse.SessionActionUpdate)
_sym_db.RegisterMessage(SessionActionResponse.SessionResponseChunkDetails)

SessionActionCapture = _reflection.GeneratedProtocolMessageType('SessionActionCapture', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONACTIONCAPTURE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SessionActionCapture)
  })
_sym_db.RegisterMessage(SessionActionCapture)

SessionTerminated = _reflection.GeneratedProtocolMessageType('SessionTerminated', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONTERMINATED,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.SessionTerminated)
  })
_sym_db.RegisterMessage(SessionTerminated)

QuerySession = _reflection.GeneratedProtocolMessageType('QuerySession', (_message.Message,), {
  'DESCRIPTOR' : _QUERYSESSION,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QuerySession)
  })
_sym_db.RegisterMessage(QuerySession)

QuerySessionResponse = _reflection.GeneratedProtocolMessageType('QuerySessionResponse', (_message.Message,), {

  'QuickCall' : _reflection.GeneratedProtocolMessageType('QuickCall', (_message.Message,), {

    'Argument' : _reflection.GeneratedProtocolMessageType('Argument', (_message.Message,), {
      'DESCRIPTOR' : _QUERYSESSIONRESPONSE_QUICKCALL_ARGUMENT,
      '__module__' : 'ExecutionProtocol_pb2'
      # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QuerySessionResponse.QuickCall.Argument)
      })
    ,
    'DESCRIPTOR' : _QUERYSESSIONRESPONSE_QUICKCALL,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QuerySessionResponse.QuickCall)
    })
  ,
  'DESCRIPTOR' : _QUERYSESSIONRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QuerySessionResponse)
  })
_sym_db.RegisterMessage(QuerySessionResponse)
_sym_db.RegisterMessage(QuerySessionResponse.QuickCall)
_sym_db.RegisterMessage(QuerySessionResponse.QuickCall.Argument)

QueryTestCase = _reflection.GeneratedProtocolMessageType('QueryTestCase', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryTestCase)
  })
_sym_db.RegisterMessage(QueryTestCase)

QueryTestCaseResponse = _reflection.GeneratedProtocolMessageType('QueryTestCaseResponse', (_message.Message,), {

  'Procedure' : _reflection.GeneratedProtocolMessageType('Procedure', (_message.Message,), {

    'Argument' : _reflection.GeneratedProtocolMessageType('Argument', (_message.Message,), {
      'DESCRIPTOR' : _QUERYTESTCASERESPONSE_PROCEDURE_ARGUMENT,
      '__module__' : 'ExecutionProtocol_pb2'
      # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryTestCaseResponse.Procedure.Argument)
      })
    ,
    'DESCRIPTOR' : _QUERYTESTCASERESPONSE_PROCEDURE,
    '__module__' : 'ExecutionProtocol_pb2'
    # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryTestCaseResponse.Procedure)
    })
  ,
  'DESCRIPTOR' : _QUERYTESTCASERESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.QueryTestCaseResponse)
  })
_sym_db.RegisterMessage(QueryTestCaseResponse)
_sym_db.RegisterMessage(QueryTestCaseResponse.Procedure)
_sym_db.RegisterMessage(QueryTestCaseResponse.Procedure.Argument)

TestCaseProcedure = _reflection.GeneratedProtocolMessageType('TestCaseProcedure', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEPROCEDURE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.TestCaseProcedure)
  })
_sym_db.RegisterMessage(TestCaseProcedure)

TestCaseProcedureResponse = _reflection.GeneratedProtocolMessageType('TestCaseProcedureResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEPROCEDURERESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.TestCaseProcedureResponse)
  })
_sym_db.RegisterMessage(TestCaseProcedureResponse)

Encrypt = _reflection.GeneratedProtocolMessageType('Encrypt', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPT,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.Encrypt)
  })
_sym_db.RegisterMessage(Encrypt)

EncryptResponse = _reflection.GeneratedProtocolMessageType('EncryptResponse', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTRESPONSE,
  '__module__' : 'ExecutionProtocol_pb2'
  # @@protoc_insertion_point(class_scope:com.spirent.service.execution.protocol.EncryptResponse)
  })
_sym_db.RegisterMessage(EncryptResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'H\001'
  _REPORTRESULT._serialized_start=18332
  _REPORTRESULT._serialized_end=18419
  _SESSIONSTEPRESULT._serialized_start=18421
  _SESSIONSTEPRESULT._serialized_end=18504
  _EXECUTIONMESSAGE._serialized_start=68
  _EXECUTIONMESSAGE._serialized_end=3843
  _EXECUTIONMESSAGE_TYPE._serialized_start=3023
  _EXECUTIONMESSAGE_TYPE._serialized_end=3843
  _AGENTSTATUSMESSAGE._serialized_start=3845
  _AGENTSTATUSMESSAGE._serialized_end=3970
  _CANCELMESSAGE._serialized_start=3972
  _CANCELMESSAGE._serialized_end=4006
  _EXECUTIONISSUEMESSAGE._serialized_start=4009
  _EXECUTIONISSUEMESSAGE._serialized_end=4551
  _EXECUTIONISSUEMESSAGE_SEVERITY._serialized_start=4490
  _EXECUTIONISSUEMESSAGE_SEVERITY._serialized_end=4551
  _EXTRACTEDDATAMESSAGE._serialized_start=4554
  _EXTRACTEDDATAMESSAGE._serialized_end=4789
  _HEARTBEATMESSAGE._serialized_start=4791
  _HEARTBEATMESSAGE._serialized_end=4889
  _INVOKEACK._serialized_start=4891
  _INVOKEACK._serialized_end=4940
  _PARAM._serialized_start=4943
  _PARAM._serialized_end=5104
  _INVOKEMESSAGE._serialized_start=5107
  _INVOKEMESSAGE._serialized_end=5905
  _INVOKEMESSAGE_HEADER._serialized_start=5640
  _INVOKEMESSAGE_HEADER._serialized_end=5677
  _INVOKEMESSAGE_RESERVATION._serialized_start=5679
  _INVOKEMESSAGE_RESERVATION._serialized_end=5747
  _INVOKEMESSAGE_DETAILLEVEL._serialized_start=5750
  _INVOKEMESSAGE_DETAILLEVEL._serialized_end=5905
  _INITMESSAGE._serialized_start=5908
  _INITMESSAGE._serialized_end=6283
  _INITMESSAGE_CAPABILITY._serialized_start=6198
  _INITMESSAGE_CAPABILITY._serialized_end=6239
  _INITMESSAGE_RESTRICTION._serialized_start=6241
  _INITMESSAGE_RESTRICTION._serialized_end=6283
  _INITMESSAGEACK._serialized_start=6286
  _INITMESSAGEACK._serialized_end=6479
  _INITMESSAGEACK_CONFIGSETTINGS._serialized_start=6434
  _INITMESSAGEACK_CONFIGSETTINGS._serialized_end=6479
  _INVOKERESPONSE._serialized_start=6482
  _INVOKERESPONSE._serialized_end=6774
  _INVOKERESPONSE_ERROR._serialized_start=6736
  _INVOKERESPONSE_ERROR._serialized_end=6774
  _TERMINATEMESSAGE._serialized_start=6776
  _TERMINATEMESSAGE._serialized_end=6809
  _TOKENMESSAGE._serialized_start=6811
  _TOKENMESSAGE._serialized_end=6840
  _REPORTMESSAGE._serialized_start=6843
  _REPORTMESSAGE._serialized_end=8861
  _REPORTMESSAGE_KEYVALUE._serialized_start=8524
  _REPORTMESSAGE_KEYVALUE._serialized_end=8563
  _REPORTMESSAGE_EXECUTIONSTATE._serialized_start=8566
  _REPORTMESSAGE_EXECUTIONSTATE._serialized_end=8703
  _REPORTMESSAGE_DETAILLEVEL._serialized_start=5750
  _REPORTMESSAGE_DETAILLEVEL._serialized_end=5905
  _STEPMESSAGE._serialized_start=8864
  _STEPMESSAGE._serialized_end=10864
  _STEPMESSAGE_ACTION._serialized_start=9401
  _STEPMESSAGE_ACTION._serialized_end=9523
  _STEPMESSAGE_STEPRESPONSEDETAILS._serialized_start=9526
  _STEPMESSAGE_STEPRESPONSEDETAILS._serialized_end=10786
  _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS._serialized_start=9994
  _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS._serialized_end=10238
  _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS_ARGUMENT._serialized_start=10172
  _STEPMESSAGE_STEPRESPONSEDETAILS_ALIAS_ARGUMENT._serialized_end=10238
  _STEPMESSAGE_STEPRESPONSEDETAILS_ANALYSISRULE._serialized_start=10241
  _STEPMESSAGE_STEPRESPONSEDETAILS_ANALYSISRULE._serialized_end=10409
  _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA._serialized_start=10412
  _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA._serialized_end=10786
  _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA_ITEM._serialized_start=10576
  _STEPMESSAGE_STEPRESPONSEDETAILS_STRUCTUREDDATA_ITEM._serialized_end=10786
  _STEPMESSAGE_STEPRESULT._serialized_start=10788
  _STEPMESSAGE_STEPRESULT._serialized_end=10864
  _CLIENTSESSIONCONTROLMESSAGE._serialized_start=10867
  _CLIENTSESSIONCONTROLMESSAGE._serialized_end=13249
  _CLIENTSESSIONCONTROLMESSAGE_TYPE._serialized_start=12730
  _CLIENTSESSIONCONTROLMESSAGE_TYPE._serialized_end=13249
  _INIT._serialized_start=13251
  _INIT._serialized_end=13289
  _INITRESPONSE._serialized_start=13291
  _INITRESPONSE._serialized_end=13347
  _LISTPROJECTS._serialized_start=13349
  _LISTPROJECTS._serialized_end=13363
  _LISTPROJECTSRESPONSE._serialized_start=13365
  _LISTPROJECTSRESPONSE._serialized_end=13405
  _PROPERTIESGROUP._serialized_start=13408
  _PROPERTIESGROUP._serialized_end=13641
  _PROPERTIESGROUP_PROPERTY._serialized_start=13602
  _PROPERTIESGROUP_PROPERTY._serialized_end=13641
  _NEWSESSION._serialized_start=13644
  _NEWSESSION._serialized_end=14118
  _NEWSESSION_HEADER._serialized_start=5640
  _NEWSESSION_HEADER._serialized_end=5677
  _NEWSESSION_REQUIREMENT._serialized_start=14076
  _NEWSESSION_REQUIREMENT._serialized_end=14118
  _QUERYPROJECT._serialized_start=14121
  _QUERYPROJECT._serialized_end=14314
  _QUERYPROJECTRESPONSE._serialized_start=14317
  _QUERYPROJECTRESPONSE._serialized_end=14701
  _QUERYPROJECTRESPONSE_TOPOLOGY._serialized_start=14540
  _QUERYPROJECTRESPONSE_TOPOLOGY._serialized_end=14701
  _QUERYPROJECTRESPONSE_TOPOLOGY_DEVICE._serialized_start=14661
  _QUERYPROJECTRESPONSE_TOPOLOGY_DEVICE._serialized_end=14701
  _NEWSESSIONRESPONSE._serialized_start=14704
  _NEWSESSIONRESPONSE._serialized_end=14985
  _SENDTERMINALDATA._serialized_start=14987
  _SENDTERMINALDATA._serialized_end=15038
  _SENDTERMINALDATARESPONSE._serialized_start=15041
  _SENDTERMINALDATARESPONSE._serialized_end=15236
  _SENDTERMINALDATARESPONSE_CAPTURE._serialized_start=15193
  _SENDTERMINALDATARESPONSE_CAPTURE._serialized_end=15236
  _SESSIONACTION._serialized_start=15239
  _SESSIONACTION._serialized_end=15650
  _SESSIONACTION_RESPONSEMODEMAP._serialized_start=15578
  _SESSIONACTION_RESPONSEMODEMAP._serialized_end=15650
  _SESSIONACTIONRESPONSE._serialized_start=15653
  _SESSIONACTIONRESPONSE._serialized_end=16509
  _SESSIONACTIONRESPONSE_SESSIONACTIONUPDATE._serialized_start=16159
  _SESSIONACTIONRESPONSE_SESSIONACTIONUPDATE._serialized_end=16372
  _SESSIONACTIONRESPONSE_SESSIONRESPONSECHUNKDETAILS._serialized_start=16374
  _SESSIONACTIONRESPONSE_SESSIONRESPONSECHUNKDETAILS._serialized_end=16452
  _SESSIONACTIONRESPONSE_SESSIONACTIONUPDATESTATUS._serialized_start=16454
  _SESSIONACTIONRESPONSE_SESSIONACTIONUPDATESTATUS._serialized_end=16509
  _SESSIONACTIONCAPTURE._serialized_start=16512
  _SESSIONACTIONCAPTURE._serialized_end=16817
  _SESSIONTERMINATED._serialized_start=16820
  _SESSIONTERMINATED._serialized_end=17037
  _SESSIONTERMINATED_STATUS._serialized_start=16960
  _SESSIONTERMINATED_STATUS._serialized_end=17037
  _QUERYSESSION._serialized_start=17039
  _QUERYSESSION._serialized_end=17093
  _QUERYSESSIONRESPONSE._serialized_start=17096
  _QUERYSESSIONRESPONSE._serialized_end=17460
  _QUERYSESSIONRESPONSE_QUICKCALL._serialized_start=17212
  _QUERYSESSIONRESPONSE_QUICKCALL._serialized_end=17460
  _QUERYSESSIONRESPONSE_QUICKCALL_ARGUMENT._serialized_start=17368
  _QUERYSESSIONRESPONSE_QUICKCALL_ARGUMENT._serialized_end=17460
  _QUERYTESTCASE._serialized_start=17462
  _QUERYTESTCASE._serialized_end=17498
  _QUERYTESTCASERESPONSE._serialized_start=17501
  _QUERYTESTCASERESPONSE._serialized_end=17831
  _QUERYTESTCASERESPONSE_PROCEDURE._serialized_start=17620
  _QUERYTESTCASERESPONSE_PROCEDURE._serialized_end=17831
  _QUERYTESTCASERESPONSE_PROCEDURE_ARGUMENT._serialized_start=17368
  _QUERYTESTCASERESPONSE_PROCEDURE_ARGUMENT._serialized_end=17435
  _TESTCASEPROCEDURE._serialized_start=17834
  _TESTCASEPROCEDURE._serialized_end=18039
  _TESTCASEPROCEDURERESPONSE._serialized_start=18042
  _TESTCASEPROCEDURERESPONSE._serialized_end=18270
  _ENCRYPT._serialized_start=18272
  _ENCRYPT._serialized_end=18296
  _ENCRYPTRESPONSE._serialized_start=18298
  _ENCRYPTRESPONSE._serialized_end=18330
# @@protoc_insertion_point(module_scope)
