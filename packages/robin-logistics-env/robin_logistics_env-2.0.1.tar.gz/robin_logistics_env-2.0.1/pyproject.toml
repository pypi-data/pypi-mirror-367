[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "robin-logistics-env"
dynamic = ["version"]
description = "Comprehensive logistics optimization environment with interactive dashboard and performance analytics"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Robin Logistics Team", email = "info@robin-logistics.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Education",
]
keywords = ["logistics", "optimization", "vehicle-routing", "supply-chain", "algorithms", "hackathon", "vrp", "mdvrp"]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "networkx>=2.6.0",
    "streamlit>=1.28.0",
    "folium>=0.14.0",
    "dill>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
examples = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/robin-logistics/optimization-environment"
Documentation = "https://robin-logistics.readthedocs.io/"
Repository = "https://github.com/robin-logistics/optimization-environment"
"Bug Tracker" = "https://github.com/robin-logistics/optimization-environment/issues"
Changelog = "https://github.com/robin-logistics/optimization-environment/blob/main/CHANGELOG.md"

[project.scripts]
robin-logistics = "robin_logistics.cli:main"

[tool.setuptools.dynamic]
version = {attr = "robin_logistics.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*", "docs", "examples"]

[tool.setuptools.package-data]
robin_logistics = ["data/*.csv", "templates/*.html"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
]

[tool.coverage.run]
source = ["robin_logistics"]
omit = ["*/tests/*", "*/test_*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "folium.*",
    "networkx.*",
    "dill.*",
]
ignore_missing_imports = true